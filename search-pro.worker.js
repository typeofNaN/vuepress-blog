const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const l of e.keys())if(l===F){const a=o[d-1];a<=s&&n.set(r,[e.get(l),a])}else{let a=u;for(let h=0;h<l.length;++h,++a){const m=l[h],p=i*a,f=p-i;let c=o[p];const g=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let y=g;y<_;++y){const b=m!==t[y],z=o[f+y]+ +b,A=o[f+y+1]+1,w=o[p+y]+1,L=o[p+y+1]=Math.min(z,A,w);L<c&&(c=L)}if(c>s)continue t}R(e.get(l),t,s,n,o,a,i,r+l)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const l=new Map;l.set(u.slice(r),d),e.set(t.slice(n,n+r),l),e.delete(u),e=l}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const l of Object.keys(u)){const a=u[l],h=e._fieldIds[l],m=o.get(h);if(m==null)continue;let p=m.size;const f=e._avgFieldLength[h];for(const c of m.keys()){if(!e._documentIds.has(c)){gt(e,h,c,s),p-=1;continue}const g=i?i(e._documentIds.get(c),s,e._storedFields.get(c)):1;if(!g)continue;const _=m.get(c),y=e._fieldLength.get(c)[h],b=at(_,p,e._documentCount,y,f,r),z=n*a*g*b,A=d.get(c);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(l):A.match[s]=[l]}else d.set(c,{score:z,terms:[t],match:{[s]:[l]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((c,g)=>({...c,[g]:N(n.boost,g)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:l,prefix:a}={...J.weights,...i},h=e._index.get(t.term),m=B(e,t.term,t.term,1,h,o,u,d);let p,f;if(t.prefix&&(p=e._index.atPrefix(t.term)),t.fuzzy){const c=t.fuzzy===!0?.2:t.fuzzy,g=c<1?Math.min(r,Math.round(t.term.length*c)):c;g&&(f=e._index.fuzzyGet(t.term,g))}if(p)for(const[c,g]of p){const _=c.length-t.term.length;if(!_)continue;f?.delete(c);const y=a*c.length/(c.length+.3*_);B(e,t.term,c,y,g,o,u,d,m)}if(f)for(const c of f.keys()){const[g,_]=f.get(c);if(!_)continue;const y=l*c.length/(c.length+_);B(e,t.term,c,y,g,o,u,d,m)}return m},X=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(m=>X(e,m,a));return Y(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,l=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(ft(i)).map(a=>At(e,a,i));return Y(l,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const l=r.length,a={id:e._documentIds.get(u),score:i*l,terms:Object.keys(d),match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:l},a)=>{if(l!==1&&l!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=k(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=k(u),h._avgFieldLength=i,h._storedFields=k(r),h._dirtCount=d||0,h._index=new C;for(const[m,p]of h._documentIds)h._idToShortId.set(p,m);for(const[m,p]of e){const f=new Map;for(const c of Object.keys(p)){let g=p[c];l===1&&(g=g.ds),f.set(parseInt(c,10),k(g))}h._index.set(m,f)}return h},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(l,a=!1)=>{let h="";i===0?h=l.length>20?`… ${l.slice(-20)}`:l:a?h=l.length+i>100?`${l.slice(0,100-i)}… `:l:h=l.length>20?`${l.slice(0,20)} … ${l.slice(-20)}`:l,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const l=d+n.length;if(r(e.slice(u,d)),u=l,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),l=u.includes("#"),[a,h]=u.split(/[#@]/),m=i.sort((f,c)=>f.length-c.length).filter((f,c)=>i.slice(c+1).every(g=>!g.includes(f))),{contents:p}=n[a]??={title:"",contents:[]};if(d)p.push([{type:"customField",key:a,index:h,display:m.map(f=>o.c.map(c=>j(c,f))).flat().filter(f=>f!==null)},r]);else{const f=m.map(c=>j(o.h,c)).filter(c=>c!==null);if(f.length&&p.push([{type:l?"heading":"title",key:a,...l&&{anchor:h},display:f},r]),"t"in o)for(const c of o.t){const g=m.map(_=>j(c,_)).filter(_=>_!==null);g.length&&p.push([{type:"text",key:a,...l&&{anchor:h},display:g},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":159,\"nextId\":159,\"documentIds\":{\"0\":\"v-6bc3aaa5\",\"1\":\"v-6bc3aaa5@0\",\"2\":\"v-6bc3aaa5@1\",\"3\":\"v-674c9662\",\"4\":\"v-674c9662#安装git\",\"5\":\"v-674c9662#安装nodejs\",\"6\":\"v-674c9662#安装hexo\",\"7\":\"v-674c9662#生成ssh并添加到github\",\"8\":\"v-674c9662#部署项目\",\"9\":\"v-674c9662#部署到github上\",\"10\":\"v-674c9662#绑定个人域名\",\"11\":\"v-674c9662#修改及配置主题\",\"12\":\"v-674c9662#添加rss\",\"13\":\"v-674c9662#添加评论\",\"14\":\"v-674c9662#写博客文章\",\"15\":\"v-674c9662#站点管理文件\",\"16\":\"v-674c9662#建立远程仓库\",\"17\":\"v-674c9662#创建hexo分支\",\"18\":\"v-674c9662#将hexo设为默认分支\",\"19\":\"v-674c9662#将主站点文件push到hexo分支\",\"20\":\"v-674c9662#本地站点恢复\",\"21\":\"v-674c9662@0\",\"22\":\"v-674c9662@1\",\"23\":\"v-7ac360bb\",\"24\":\"v-7ac360bb#口诀\",\"25\":\"v-7ac360bb#目的\",\"26\":\"v-7ac360bb#原理\",\"27\":\"v-7ac360bb#状态类\",\"28\":\"v-7ac360bb#定位类\",\"29\":\"v-7ac360bb#形状类\",\"30\":\"v-7ac360bb#宽\",\"31\":\"v-7ac360bb#高\",\"32\":\"v-7ac360bb#边框类\",\"33\":\"v-7ac360bb#margin\",\"34\":\"v-7ac360bb#padding\",\"35\":\"v-7ac360bb#border\",\"36\":\"v-7ac360bb#四边\",\"37\":\"v-7ac360bb#边宽\",\"38\":\"v-7ac360bb#边样式\",\"39\":\"v-7ac360bb#边颜色\",\"40\":\"v-7ac360bb#边圆角\",\"41\":\"v-7ac360bb#外边线\",\"42\":\"v-7ac360bb#其他边\",\"43\":\"v-7ac360bb#字体类\",\"44\":\"v-7ac360bb#背景类\",\"45\":\"v-7ac360bb#其他\",\"46\":\"v-7ac360bb@0\",\"47\":\"v-7ac360bb@1\",\"48\":\"v-01147549\",\"49\":\"v-01147549@0\",\"50\":\"v-01147549@1\",\"51\":\"v-45402a7b\",\"52\":\"v-45402a7b@0\",\"53\":\"v-45402a7b@1\",\"54\":\"v-0c3dea66\",\"55\":\"v-0c3dea66#jquery对象与dom对象之间的转换\",\"56\":\"v-0c3dea66#常规选择器\",\"57\":\"v-0c3dea66#属性选择器\",\"58\":\"v-0c3dea66#控件选择器\",\"59\":\"v-0c3dea66#其他选择器\",\"60\":\"v-0c3dea66#调用链处理\",\"61\":\"v-0c3dea66#子节点\",\"62\":\"v-0c3dea66#兄弟节点\",\"63\":\"v-0c3dea66#父节点\",\"64\":\"v-0c3dea66#attributes和-properties的区别\",\"65\":\"v-0c3dea66#类与属性控制\",\"66\":\"v-0c3dea66#样式控制\",\"67\":\"v-0c3dea66#结构控制\",\"68\":\"v-0c3dea66#文本节点\",\"69\":\"v-0c3dea66#子节点-1\",\"70\":\"v-0c3dea66#兄弟节点-1\",\"71\":\"v-0c3dea66#父节点-1\",\"72\":\"v-0c3dea66#复制-删除-替换节点\",\"73\":\"v-0c3dea66#工具函数\",\"74\":\"v-0c3dea66#通用工具\",\"75\":\"v-0c3dea66#事件绑定\",\"76\":\"v-0c3dea66#事件触发\",\"77\":\"v-0c3dea66#事件类型\",\"78\":\"v-0c3dea66#请求与回调\",\"79\":\"v-0c3dea66#请求的状态\",\"80\":\"v-0c3dea66#工具函数-1\",\"81\":\"v-0c3dea66#deferred\",\"82\":\"v-0c3dea66#callbacks\",\"83\":\"v-0c3dea66@0\",\"84\":\"v-0c3dea66@1\",\"85\":\"v-3fbffbf2\",\"86\":\"v-3fbffbf2@0\",\"87\":\"v-3fbffbf2@1\",\"88\":\"v-47073c0b\",\"89\":\"v-47073c0b#插值\",\"90\":\"v-47073c0b#样式\",\"91\":\"v-47073c0b#遍历\",\"92\":\"v-47073c0b#事件绑定\",\"93\":\"v-47073c0b#高级部分\",\"94\":\"v-47073c0b#事件修饰符\",\"95\":\"v-47073c0b#ref-和-refinfor\",\"96\":\"v-47073c0b#插槽-v-slot\",\"97\":\"v-47073c0b#指令\",\"98\":\"v-47073c0b#过滤器\",\"99\":\"v-47073c0b#一些简单经验分享\",\"100\":\"v-47073c0b#关于dom属性、html属性和组件属性\",\"101\":\"v-47073c0b#关于事件\",\"102\":\"v-47073c0b#复杂逻辑条件判断\",\"103\":\"v-47073c0b#组件的传值\",\"104\":\"v-47073c0b@0\",\"105\":\"v-47073c0b@1\",\"106\":\"v-375296b2\",\"107\":\"v-375296b2@0\",\"108\":\"v-375296b2@1\",\"109\":\"v-dd032338\",\"110\":\"v-dd032338@0\",\"111\":\"v-dd032338@1\",\"112\":\"v-62b55ef4\",\"113\":\"v-62b55ef4#原型模式介绍\",\"114\":\"v-62b55ef4#原型模式的uml类图\",\"115\":\"v-62b55ef4#原型模式的简单实现\",\"116\":\"v-62b55ef4#简历的原型实现\",\"117\":\"v-62b55ef4#实现icloneable接口\",\"118\":\"v-62b55ef4#浅拷贝-shallow-copy\",\"119\":\"v-62b55ef4#浅拷贝引用类型会出现的错误\",\"120\":\"v-62b55ef4#深拷贝-deep-copy\",\"121\":\"v-62b55ef4#实现深拷贝\",\"122\":\"v-62b55ef4#javascript-继承机制——原型链\",\"123\":\"v-62b55ef4#数据模型缓存\",\"124\":\"v-62b55ef4#优点\",\"125\":\"v-62b55ef4#缺点\",\"126\":\"v-62b55ef4#适用场景\",\"127\":\"v-62b55ef4@0\",\"128\":\"v-62b55ef4@1\",\"129\":\"v-25e5e9dc\",\"130\":\"v-25e5e9dc#需求\",\"131\":\"v-25e5e9dc#思路\",\"132\":\"v-25e5e9dc#使用\",\"133\":\"v-25e5e9dc#需求-1\",\"134\":\"v-25e5e9dc#思路-1\",\"135\":\"v-25e5e9dc#使用-1\",\"136\":\"v-25e5e9dc#背景\",\"137\":\"v-25e5e9dc#需求-2\",\"138\":\"v-25e5e9dc#思路-2\",\"139\":\"v-25e5e9dc#使用-2\",\"140\":\"v-25e5e9dc#背景-1\",\"141\":\"v-25e5e9dc#需求-3\",\"142\":\"v-25e5e9dc#使用-3\",\"143\":\"v-25e5e9dc#背景-2\",\"144\":\"v-25e5e9dc#需求-4\",\"145\":\"v-25e5e9dc#思路-3\",\"146\":\"v-25e5e9dc#使用-4\",\"147\":\"v-25e5e9dc#背景-3\",\"148\":\"v-25e5e9dc#需求-5\",\"149\":\"v-25e5e9dc#思路-4\",\"150\":\"v-25e5e9dc#使用-5\",\"151\":\"v-25e5e9dc#需求-6\",\"152\":\"v-25e5e9dc#思路-5\",\"153\":\"v-25e5e9dc#需求-7\",\"154\":\"v-25e5e9dc#思路-6\",\"155\":\"v-25e5e9dc#使用-6\",\"156\":\"v-25e5e9dc@0\",\"157\":\"v-25e5e9dc@1\",\"158\":\"v-e52c881c\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,114],\"1\":[null,null,1],\"2\":[null,null,3],\"3\":[1,19],\"4\":[1,6],\"5\":[1,33],\"6\":[1,38],\"7\":[1,63],\"8\":[1,36],\"9\":[1,24],\"10\":[1,29],\"11\":[1,6],\"12\":[1,36],\"13\":[1,11],\"14\":[1,15],\"15\":[1,12],\"16\":[1,16],\"17\":[1,7],\"18\":[1,6],\"19\":[1,18],\"20\":[1,22],\"21\":[null,null,1],\"22\":[null,null,2],\"23\":[1,2],\"24\":[1,18],\"25\":[1,4],\"26\":[1,41],\"27\":[1,32],\"28\":[1,15],\"29\":[1],\"30\":[1,8],\"31\":[1,6],\"32\":[1],\"33\":[1,8],\"34\":[1,8],\"35\":[1],\"36\":[1,9],\"37\":[1,21],\"38\":[1,20],\"39\":[1,6],\"40\":[1,3],\"41\":[1,9],\"42\":[1,20],\"43\":[1,72],\"44\":[1,15],\"45\":[1,42],\"46\":[null,null,1],\"47\":[null,null,2],\"48\":[1,402],\"49\":[null,null,1],\"50\":[null,null,4],\"51\":[2,129],\"52\":[null,null,1],\"53\":[null,null,1],\"54\":[2,28],\"55\":[1,31],\"56\":[1,32],\"57\":[1,10],\"58\":[1,32],\"59\":[1,39],\"60\":[1,29],\"61\":[1,5],\"62\":[1,9],\"63\":[1,5],\"64\":[2,16],\"65\":[1,69],\"66\":[1,35],\"67\":[1],\"68\":[1,8],\"69\":[1,23],\"70\":[1,7],\"71\":[1,11],\"72\":[3,16],\"73\":[1,27],\"74\":[1,117],\"75\":[1,46],\"76\":[1,31],\"77\":[1,105],\"78\":[1,66],\"79\":[1,22],\"80\":[1,14],\"81\":[1,124],\"82\":[1,55],\"83\":[null,null,1],\"84\":[null,null,2],\"85\":[1,223],\"86\":[null,null,1],\"87\":[null,null,2],\"88\":[4,125],\"89\":[1,27],\"90\":[1,33],\"91\":[1,30],\"92\":[1,34],\"93\":[1,56],\"94\":[1,79],\"95\":[3,57],\"96\":[4,139],\"97\":[1,50],\"98\":[1,40],\"99\":[1,20],\"100\":[2,198],\"101\":[1,31],\"102\":[1,71],\"103\":[1,108],\"104\":[null,null,1],\"105\":[null,null,2],\"106\":[5,45],\"107\":[null,null,1],\"108\":[null,null,5],\"109\":[2,122],\"110\":[null,null,1],\"111\":[null,null,2],\"112\":[3,93],\"113\":[1,13],\"114\":[1,1],\"115\":[1,36],\"116\":[1,54],\"117\":[1,45],\"118\":[4,8],\"119\":[1,83],\"120\":[4,5],\"121\":[1,61],\"122\":[3,139],\"123\":[1,95],\"124\":[1,7],\"125\":[1,6],\"126\":[1,12],\"127\":[null,null,1],\"128\":[null,null,7],\"129\":[1,73],\"130\":[1,3],\"131\":[1,76],\"132\":[1,23],\"133\":[1,3],\"134\":[1,73],\"135\":[1,21],\"136\":[1,7],\"137\":[1,3],\"138\":[1,25],\"139\":[1,23],\"140\":[1,41],\"141\":[1,53],\"142\":[1,14],\"143\":[1,11],\"144\":[1,3],\"145\":[1,101],\"146\":[1,12],\"147\":[1,12],\"148\":[1,5],\"149\":[1,42],\"150\":[1,20],\"151\":[1,1],\"152\":[1,84],\"153\":[1,3],\"154\":[1,57],\"155\":[1,16],\"156\":[null,null,1],\"157\":[null,null,2],\"158\":[1]},\"averageFieldLength\":[1.1958101774970242,41.581935172666086,1.4630424644609565],\"storedFields\":{\"0\":{\"h\":\"数组去重\",\"t\":[\"此文介绍数组去重方法。\",\"function unique(arr) { return Array.from(new Set(arr)) } const arr = [1, 1, 'true', 'true', true, true, 15, 15, false, false, undefined, undefined, null, null, NaN, NaN, 'NaN', 'NaN', 0, 0, 'a', 'a', {}, {}] console.log(unique(arr)) // [1, 'true', true, 15, false, undefined, null, NaN, 'NaN', 0, 'a', {}, {}] // 不考虑兼容性，这种去重的方法代码最少。这种方法还无法去掉“{}”空对象，后面的高阶方法会添加去掉重复“{}”的方法。 \",\"function unique(arr) { for (let i = 0; i < arr.length; i++) { for (let j = i + 1; j < arr.length; j++) { if (arr[i] === arr[j]) { // 第一个等同于第二个，splice方法删除第二个 arr.splice(j, 1) j-- } } } return arr } const arr = [1, 1, 'true', 'true', true, true, 15, 15, false, false, undefined, undefined, null, null, NaN, NaN, 'NaN', 'NaN', 0, 0, 'a', 'a', {}, {}] console.log(unique(arr)) // [1, 'true', 15, false, undefined, NaN, NaN, 'NaN', 'a', {…}, {…}] // NaN和{}没有去重，两个null直接消失了 // 双层循环，外层循环元素，内层循环时比较值。值相同时，则删去这个值。 \",\"function unique(arr) { if (!Array.isArray(arr)) { console.log('type error!') return } const array = [] for (let i = 0; i < arr.length; i++) { if (array.indexOf(arr[i]) === -1) { array.push(arr[i]) } } return array } const arr = [1, 1, 'true', 'true', true, true, 15, 15, false, false, undefined, undefined, null, null, NaN, NaN, 'NaN', 'NaN', 0, 0, 'a', 'a', {}, {}] console.log(unique(arr)) // [1, 'true', true, 15, false, undefined, null, NaN, NaN, 'NaN', 0, 'a', {…}, {…}] // NaN、{}没有去重 // 新建一个空的结果数组，for 循环原数组，判断结果数组是否存在当前元素，如果有相同的值则跳过，不相同则push进数组。 \",\"function unique(arr) { if (!Array.isArray(arr)) { console.log('type error!') return } arr = arr.sort() const array = [arr[0]] for (let i = 1; i < arr.length; i++) { if (arr[i] !== arr[i - 1]) { array.push(arr[i]) } } return array } const arr = [1, 1, 'true', 'true', true, true, 15, 15, false, false, undefined, undefined, null, null, NaN, NaN, 'NaN', 'NaN', 0, 0, 'a', 'a', {}, {}] console.log(unique(arr)) // [0, 1, 15, 'NaN', NaN, NaN, {…}, {…}, 'a', false, null, true, 'true', undefined] // NaN、{}没有去重 // 利用sort()排序方法，然后根据排序后的结果进行遍历及相邻元素比对。 \",\"function unique(arr) { if (!Array.isArray(arr)) { console.log('type error!') return } const array = [] const obj = {} for (let i = 0; i < arr.length; i++) { if (!obj[arr[i]]) { array.push(arr[i]) obj[arr[i]] = 1 } else { obj[arr[i]]++ } } return array } const arr = [1, 1, 'true', 'true', true, true, 15, 15, false, false, undefined, undefined, null, null, NaN, NaN, 'NaN', 'NaN', 0, 0, 'a', 'a', {}, {}] console.log(unique(arr)) // [1, 'true', 15, false, undefined, null, NaN, 0, 'a', {…}] // 两个true直接去掉了，NaN和{}去重 \",\"function unique(arr) { if (!Array.isArray(arr)) { console.log('type error!') return } const array =[] for (let i = 0; i < arr.length; i++) { if ( !array.includes( arr[i]) ) { // includes 检测数组是否有某个值 array.push(arr[i]) } } return array } const arr = [1, 1, 'true', 'true', true, true, 15, 15, false, false, undefined, undefined, null, null, NaN, NaN, 'NaN', 'NaN', 0, 0, 'a', 'a', {}, {}] console.log(unique(arr)) // [1, 'true', true, 15, false, undefined, null, NaN, 'NaN', 0, 'a', {…}, {…}] // {}没有去重 \",\"function unique(arr) { const obj = {} return arr.filter(function (item, index, arr) { return obj.hasOwnProperty(typeof item + item) ? false : (obj[typeof item + item] = true) }) } const arr = [1, 1, 'true', 'true', true, true, 15, 15, false, false, undefined, undefined, null, null, NaN, NaN, 'NaN', 'NaN', 0, 0, 'a', 'a', {}, {}] console.log(unique(arr)) // [1, 'true', true, 15, false, undefined, null, NaN, 'NaN', 0, 'a', {…}] // 所有的都去重了 // 利用hasOwnProperty 判断是否存在对象属性 \",\"function unique(arr) { return arr.filter(function (item, index, arr) { // 当前元素，在原始数组中的第一个索引 == 当前索引值，否则返回当前元素 return arr.indexOf(item, 0) === index }) } const arr = [1, 1, 'true', 'true', true, true, 15, 15, false, false, undefined, undefined, null, null, NaN, NaN, 'NaN', 'NaN', 0, 0, 'a', 'a', {}, {}] console.log(unique(arr)) // [1, 'true', true, 15, false, undefined, null, 'NaN', 0, 'a', {…}, {…}] \",\"function unique(arr) { const array = arr const len = array.length array.sort(function (a, b) { // 排序后更加方便去重 return a - b }) function loop(index) { if (index >= 1) { if (array[index] === array[index - 1]) { array.splice(index, 1) } loop(index - 1) // 递归loop，然后数组去重 } } loop(len - 1) return array } const arr = [1, 1, 'true', 'true', true, true, 15, 15, false, false, undefined, undefined, null, null, NaN, NaN, 'NaN', 'NaN', 0, 0, 'a', 'a', {}, {}] console.log(unique(arr)) // [1, 'a', 'true', true, 15, false, 1, {…}, null, NaN, NaN, 'NaN', 0, 'a', {…}, undefined] \",\"function unique(arr) { const map = new Map() const array = [] // 数组用于返回结果 for (let i = 0; i < arr.length; i++) { if (map.has(arr[i])) { // 如果有该key值 map.set(arr[i], true) } else { map.set(arr[i], false) // 如果没有该key值 array.push(arr[i]) } } return array } const arr = [1, 1, 'true', 'true', true, true, 15, 15, false, false, undefined, undefined, null, null, NaN, NaN, 'NaN', 'NaN', 0, 0, 'a', 'a', {}, {}] console.log(unique(arr)) // [1, 'a', 'true', true, 15, false, 1, {…}, null, NaN, NaN, 'NaN', 0, 'a', {…}, undefined] // 创建一个空Map数据结构，遍历需要去重的数组，把数组的每一个元素作为key存到Map中。由于Map中不会出现相同的key值，所以最终得到的就是去重后的结果。 \",\"function unique(arr) { return arr.reduce((prev,cur) => prev.includes(cur) ? prev : [...prev, cur], []) } const arr = [1, 1, 'true', 'true', true, true, 15, 15, false, false, undefined, undefined, null, null, NaN, NaN, 'NaN', 'NaN', 0, 0, 'a', 'a', {}, {}] console.log(unique(arr)) // [1, 'true', true, 15, false, undefined, null, NaN, 'NaN', 0, 'a', {…}, {…}] \",\"[...new Set(arr)] //代码就是这么少----（其实，严格来说并不算是一种，相对于第一种方法来说只是简化了代码） \",\"方法多种多样！\"]},\"1\":{\"c\":[\"技术文章\"]},\"2\":{\"c\":[\"JavaScript\",\"Array\",\"Array Unique\"]},\"3\":{\"h\":\"如何利用hexo搭建一个属于自己的博客网站\",\"t\":[\"想搭建一个属于自己的博客网站，用来发布一些文章以及交流学习。发现利用hexo来搭建个人博客挺方便的，于是便自己试着搭建了一个。特写下此文，一防忘记，二供大家参考。\",\"安装Git\",\"安装NodeJs\",\"安装hexo\",\"生成SSH并添加到github\",\"部署项目\",\"上传到github\",\"绑定个人域名\",\"修改及配置主题\",\"添加RSS\",\"添加评论\",\"写博客文章\",\"站点管理文件\"]},\"4\":{\"h\":\"安装Git\",\"t\":[\"Git:下载地址\",\"参考文章:《W3C school上Git教程之Git安装配置》\"]},\"5\":{\"h\":\"安装NodeJs\",\"t\":[\"Hexo是基于Node.js环境的静态博客，里面的npm工具很有用啊，所以还是老老实实把这玩意儿装了吧！\",\"安装步骤：反正下载好msi文件后，双击打开安装，也是一路next，不过在Custom Setup这一步记得选 Add to PATH ,这样你就不用自己去配置电脑上环境变量了，装完在按 win + r 快捷键调出运行，然后输入cmd确定，在cmd中输入path可以看到你的node是否配置在里面（环境变量），没有的话你就自由发挥吧！\",\"NodeJs下载地址(说明：LTS为长期支持版，Current为当前最新版)\",\"参考文章:《W3C school上Node.js教程之Node.js安装配置》\"]},\"6\":{\"h\":\"安装hexo\",\"t\":[\"先创建一个文件夹（用来存放所有blog的东西），然后cd到该文件夹下。\",\"安装hexo命令：（在新建的文件夹里右键Git Bash Here）\",\"$ npm i -g hexo \",\"接着初始化命令：hexo init ：\",\"$ hexo init \",\"初始化完成之后打开所在的文件夹可以看到以下文件：\",\"生成的文件\",\"解释一下：\",\"node_modules：是依赖包\",\"public：存放的是生成的页面\",\"scaffolds：命令生成文章等的模板\",\"source：用命令创建的各种文章\",\"themes：主题\",\"_config.yml：整个博客的配置\",\"db.json：source解析所得到的\",\"package.json：项目所需模块项目的配置信息\",\"做好这些前置工作之后接下来的就是各种配置了。\"]},\"7\":{\"h\":\"生成SSH并添加到github\",\"t\":[\"没账号的先创建一个github账号，有账号的看下面。注册传送门\",\"创建一个repo，名称为YourName.github.io, 其中YourName是你的github名称，按照这个规则创建才有用，如下：\",\"创建仓库\",\"为仓库取名\",\"回到git bash中，配置github账户信息（YourName和YourEmail都替换成你自己的）：\",\"$ git config global user.name \\\"YourName\\\" \",\"$ git config global user.email \\\"YourEmail\\\" \",\"配置ssh，Git bash中输入命令：\",\"$ ssh-keygen -t rsa -C \\\"youremail@example.com\\\" \",\"一路回车，就能在你的电脑中产生ssh，ssh文件默认在:C:User/Administrator/.ssh文件夹下，打开.ssh文件夹下的id_rsa.pub文件，将里面的内容复制；再打开github的setting：\",\"打开setting\",\"将.ssh文件夹下的id_rsa.pub文件里一经复制好了的内容添加到ssh keys:\",\"创建key\",\"添加一个 New SSH key ，title随便取，key就填刚刚复制好了的那一段。\",\"在Git bash中验证是否添加成功：\",\"$ ssh -T git@github.com \",\"完成下一步你就成功了！\"]},\"8\":{\"h\":\"部署项目\",\"t\":[\"用编辑器打开你的blog项目，修改_config.yml文件的一些配置：\",\"deploy: type: git repo: https://github.com/yourgithubname/yourgithubname.github.io.git branch: master \",\"在Git bash中，依次输入以下命令：\",\"$ hexo clean \",\"$ hexo g \",\"$ hexo s \",\"注：hexo 3.0把服务器独立成个别模块，需要单独安装：\",\"$ npm i hexo-server \",\"打开浏览器输入：http://localhost:4000\",\"你就可以看到你的项目在本地能够预览了。\"]},\"9\":{\"h\":\"部署到github上\",\"t\":[\"先安装一波，这样才能将你写好的文章部署到github服务器上并让别人浏览到,输入命令：\",\"$ npm install hexo-deployer-git --save \",\"再依次执行以下命令：\",\"$ hexo clean \",\"$ hexo g \",\"$ hexo d \",\"注意deploy的过程中(即hexo d)可能要输入你的github上的userName及password\",\"一切都ok之后，在浏览器中输入http://yourgithubname.github.io就可以看到你的个人博客，飞起来！！！\"]},\"10\":{\"h\":\"绑定个人域名\",\"t\":[\"虽然，使用http://yourgithubname.github.io也可以让别人看到你写的博客。\",\"但是，写博客写博客，还是要有点装逼的嘛。搭配一个属于自己的域名显然会让自己的博客变得高大上起来。\",\"可以去各大域名销售平台买自己喜欢的域名。（不想绑定的可以跳过这一个环节直接看下一节）\",\"第一步购买域名：随便在哪个网站买一个就行；\",\"第二步添加CNAME：在项目的source文件夹下新建一个名为CNAME的文件，在里面添加你购买的域名：\",\"配置域名\",\"其中ip地址为你的github的地址，可在cmd中ping一下就能看到(ping yourName.github.io)：\",\"ping\",\"接着再次部署（hexo d）一下，用你购买的域名打开，就可以看到你的博客了了了了了！！！\"]},\"11\":{\"h\":\"修改及配置主题\",\"t\":[\"hexo初始化之后默认的主题是landscape , 然后你可以去这个地址里面找到你想要的主题。在github中搜索你要的主题名称，里面都会有该主题的如何使用的介绍，按着来就好了。。\"]},\"12\":{\"h\":\"添加RSS\",\"t\":[\"先安装rss相关插件，Git bash命令：\",\"$ npm i hexo-generator-feed \",\"在你的项目的_config.yml配置文件下找到Extensions添加如下内容：\",\"# Extensions #插件和主题 ## Plugins: https://hexo.io/plugins/ ## Themes: https://hexo.io/themes/ # RSS订阅 plugin: - hexo-generator-feed #Feed Atom feed: type: atom path: atom.xml limit: 20 \",\"进入到你的主题的配置文件下，找到你的放rss的位置，添加/atom.xml即可。重新部署再打开就能看到效果了。\"]},\"13\":{\"h\":\"添加评论\",\"t\":[\"评论功能为第三方评论系统，但，多说、网易云跟帖等都已关闭服务。来必力等也能用，所以，骚年，翻墙吧，具体做法，聪明的你肯定是知道百度的。\"]},\"14\":{\"h\":\"写博客文章\",\"t\":[\"新建文章，输入命令：\",\"$ hexo new '文章名' \",\"然后你就可以在source/_posts路径下看到你创建的文章，编辑完成之后按照前面说的方式部署，在浏览器刷新就能看到你的文章了。\",\"博客文章采用markdown格式编写，至于markdown，骚年，学习吧！！！-->前往教室\"]},\"15\":{\"h\":\"站点管理文件\",\"t\":[\"如果本地站点文件丢失了或换了电脑怎么办？为解决这个问题，我们利用了Github的多分支来管理站点文件：\",\"用master分支来管理发布的文件，即public文件夹下的文件；\",\"用hexo分支来管理主站点文件，即除public下和.gitignore忽视的其他文件；\",\"将hexo设为默认分支。\",\"为此，我们要：\"]},\"16\":{\"h\":\"建立远程仓库\",\"t\":[\"先将远程仓库关联到本地。进入站点文件夹，输入命令：\",\"$ git init \",\"$ git remote add origin git@github.com:username/username.github.io.git #使用站点仓库地址关联 \",\"$ git pull \"]},\"17\":{\"h\":\"创建hexo分支\",\"t\":[\"$ git checkout -b hexo #创建并切换到hexo分支 \"]},\"18\":{\"h\":\"将hexo设为默认分支\",\"t\":[\"在Github上的站点仓库上，点击Settings=>Branches，将Default branch切换成hexo，然后点击Update即可。\",\"修改分支\"]},\"19\":{\"h\":\"将主站点文件push到hexo分支\",\"t\":[\"在hexo分支（使用git branch命令查看当前所在分支）下，输入命令：\",\"$ git add . \",\"$ git commit -m \\\"提交记录\\\" \",\"$ git push -u origin hexo #初次push要加-u，此后可省 \"]},\"20\":{\"h\":\"本地站点恢复\",\"t\":[\"使用git clone命令克隆站点仓库（默认分支为hexo）：\",\"$ git clone git@github.com:username/username.github.io.git \",\"在本地新拷贝的username.github.io文件夹下依次执行命令：\",\"$ npm install hexo-cli \",\"$ npm install \",\"注意，此时不需要执行hexo init这条命令。\",\"到此，便完成了对站点的一些简单管理。\"]},\"21\":{\"c\":[\"技术文章\"]},\"22\":{\"c\":[\"hexo\",\"blog\"]},\"23\":{\"h\":\"CSS样式常用属性及书写顺序规范\",\"t\":[\"本文整理一下前端开发三大工具之一------CSS的常用属性及书写顺序规范\"]},\"24\":{\"h\":\"口诀\",\"t\":[\"状定形边字背其，上右下左顺时针。\",\"状（状态）\",\"定（定位）\",\"形（形状）\",\"边（边框）\",\"字（字体）\",\"背（背景）\",\"其（其他）\",\"属性越前则优先级越高。\"]},\"25\":{\"h\":\"目的\",\"t\":[\"减少浏览器reflow（回流），提升浏览器渲染dom的性能。\"]},\"26\":{\"h\":\"原理\",\"t\":[\"浏览器的渲染流程为——\",\"解析html构建dom树，解析css构建css树：将html解析成树形的数据结构，将css解析成树形的数据结构；\",\"构建render树：DOM树和CSS树合并之后形成的render树；\",\"布局render树：有了render树，浏览器已经知道那些网页中有哪些节点，各个节点的css定义和以及它们的从属关系，从而计算出每个节点在屏幕中的位置；\",\"绘制render树：按照计算出来的规则，通过显卡把内容画在屏幕上。\",\"css样式解析到显示至浏览器屏幕上就发生在②③④步骤，可见浏览器并不是一获取到css样式就立马开始解析而是根据css样式的书写顺序将之按照dom树的结构分布render样式，完成第②步，然后开始遍历每个树结点的css样式进行解析，此时的css样式的遍历顺序完全是按照之前的书写顺序。在解析过程中，一旦浏览器发现某个元素的定位变化影响布局，则需要倒回去重新渲染正如按照这样的书写书序：\",\"width: 100px; height: 100px; background-color: red; position: absolute; \",\"当浏览器解析到position的时候突然发现该元素是绝对定位元素需要脱离文档流，而之前却是按照普通元素进行解析的，所以不得不重新渲染，解除该元素在文档中所占位置，然而由于该元素的占位发生变化，其他元素也可能会受到它回流的影响而重新排位。最终导致③步骤花费的时间太久而影响到④步骤的显示，影响了用户体验。\",\"所以规范的的css书写顺序对于文档渲染来说一定是事半功倍的！\"]},\"27\":{\"h\":\"状态类\",\"t\":[\"display: block | none | inline | compact | marker | inline-table | list-item | run-in | table | table-caption | table-cell | table-column | table-column-group | table-footer-group | table-header-group | table-row | table-row-group\",\"visibility: inherit | visible | collapse | hidden\",\"float: none | left | right\",\"clear: none | left | right | both\",\"overflow: visible | auto | hidden | scroll\"]},\"28\":{\"h\":\"定位类\",\"t\":[\"position: static | absolute | fixed | relative\",\"top：auto | length\",\"right: auto | length\",\"bottom: auto | length\",\"left: auto | length\",\"z-index: auto | number\"]},\"29\":{\"h\":\"形状类\"},\"30\":{\"h\":\"宽\",\"t\":[\"width: visible | auto | hidden | scroll\",\"min-width: visible | auto | hidden | scroll\",\"max-width: visible | auto | hidden | scroll\"]},\"31\":{\"h\":\"高\",\"t\":[\"height: auto | length\",\"min-height: auto | length\",\"max-height: auto | length\"]},\"32\":{\"h\":\"边框类\"},\"33\":{\"h\":\"margin\",\"t\":[\"margin: auto | length\",\"margin-top: auto | length\",\"margin-right: auto | length\",\"margin-bottom: auto | length\",\"margin-left: auto | length\"]},\"34\":{\"h\":\"padding\",\"t\":[\"padding: auto | length\",\"padding-top: auto | length\",\"padding-right: auto | length\",\"padding-bottom: auto | length\",\"padding-left: auto | length\"]},\"35\":{\"h\":\"border\"},\"36\":{\"h\":\"四边\",\"t\":[\"border: border-width || border-style || border-color\",\"border-top: border-width || border-style || border-color\",\"border-right: border-width || border-style || border-color\",\"border-bottom: border-width || border-style || border-color\",\"border-left: border-width || border-style || border-color\"]},\"37\":{\"h\":\"边宽\",\"t\":[\"border-width: none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset\",\"border-top-width: medium | thin | thick | length\",\"border-right-width: medium | thin | thick | length\",\"border-bottom-width: medium | thin | thick | length\",\"border-left-width: medium | thin | thick | length\"]},\"38\":{\"h\":\"边样式\",\"t\":[\"border-style: none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset\",\"border-top-style: border-width || border-style || border-color\",\"border-right-style: border-width || border-style || border-color\",\"border-bottom-style: border-width || border-style || border-color\",\"border-left-style: border-width || border-style || border-color\"]},\"39\":{\"h\":\"边颜色\",\"t\":[\"border-color: color\",\"border-top-color: color\",\"border-right-color: color\",\"border-bottom-color: color\",\"border-left-color: color\"]},\"40\":{\"h\":\"边圆角\",\"t\":[\"border-radius: length\"]},\"41\":{\"h\":\"外边线\",\"t\":[\"outline: outline-color || outline-style || outline-width\",\"list-style: list-style-image || list-style-position || list-style-type\"]},\"42\":{\"h\":\"其他边\",\"t\":[\"table-layout: auto | fixed\",\"caption-side: top | right | bottom | left\",\"border-collapse: separate | collapse\",\"border-spacing: length\",\"empty-cells: show | hide\"]},\"43\":{\"h\":\"字体类\",\"t\":[\"font: caption | icon | menu | message-box | small-caption | status-bar\",\"font-family: fantasy | serif | sans-serif\",\"font-size: xx-small | x-small | small | medium | large | x-large | xx-large | larger | smaller | length\",\"line-height: normal | length\",\"font-weight: normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900\",\"text-align: left | right | center | justify\",\"text-indent: length\",\"text-transform: none | capitalize | uppercase | lowercase\",\"text-decoration: none || underline || blink || overline || line-through\",\"letter-spacing: normal | length\",\"word-spacing: normal | length\",\"white-space: normal | pre | nowrap\",\"vertical-align: auto | baseline | sub | super | top | text-top | middle | bottom | text-bottom | length\",\"color: color\"]},\"44\":{\"h\":\"背景类\",\"t\":[\"background: background-color || background-image || background-repeat || background-attachment || background-position\",\"background-color: transparent | color\",\"background-image: none | url ( url )\",\"background-repeat: repeat | no-repeat | repeat-x | repeat-y\",\"background-position: length || length || position\"]},\"45\":{\"h\":\"其他\",\"t\":[\"opacity：0-1\",\"cursor: auto | all-scroll | col-resize| crosshair | default | hand | move | help | no-drop | not-allowed | pointer | progress | row-resize | text | vertical-text | wait | *-resize | url ( url )\",\"content: attr(alt) | counter(name) | counter(name , list-style-type) | counters(name , string) | counters(name , string , list-style-type) | no-close-quote | no-open-quote | close-quote | open-quote | string | url(url)\",\"quotes: none | string\"]},\"46\":{\"c\":[\"技术文章\"]},\"47\":{\"c\":[\"CSS\",\"web前端\"]},\"48\":{\"h\":\"CSS垂直居中\",\"t\":[\"因为在工作中前端开发布局这方面涉及到的css垂直居中问题比较多，便总结了一下。\",\"适用情景：单行文字垂直居中技巧\",\"这个方式应该是最多人知道的了，常见于单行文字的应用，像是按钮这一类对象，或者是下拉框、导航此类元素最常见到的方式了。此方式的原理是在于将单行文字的行高设定后，文字会位于行高的垂直中间位置，利用此原理就能轻松达成垂直居中的需求了。\",\"<style> .content { width: 400px; background: #ccc; line-height:100px; margin: auto; } </style> <div class=\\\"content\\\">CSS垂直居中</div> \",\"适用情景：多对象的垂直居中技巧\",\"既然可以使用第一种方式对行元素达成垂直居中的话，当然没有理由不能做到多行啊~但是你需要将多个元素或多行元素当成一个行元素来看待，所以我们必须要将这些数据多包一层，并将其设定为inline-block，并在该inline-block对象的外层对象使用inline-block来代替height的设置，如此便可以达到垂直居中的目的了，从使你的数据是包含了标题跟内容在内也可以正常的垂直居中了。\",\"<style> h2 { text-align: center; } .box { width: 500px; border: 1px solid #f00; margin: auto; line-height: 200px; text-align: center; } .box2 .content { display: inline-block; height: auto; line-height:1; width: 400px; background: #ccc; } </style> <div class=\\\"box box2\\\"> <div class=\\\"content\\\"> CSS垂直居中 </div> </div> \",\"适用情景：多对象的CSS垂直居中技巧\",\":before 伪类元素搭配 inline-block 属性的写法应该是很传统的垂直居中的技巧了，此方式的好处在于子元素居中可以不需要特别设定高度，我们将利用:before伪类元素设定为100%高的inline-block，再搭配上将需要居中的子元素同样设置成inline-block性质后，就能使用vertical-align:middle来达到垂直居中的目的了，此方式在以往其实是个非常棒的垂直居中解决方案，唯独需要特别处理掉inline-block元素之间的4-5px空间这个小缺陷，但也很实用了。\",\"<style> h2 { text-align: center; } .box { width: 500px; height: 250px; border: 1px solid #f00; margin: auto; text-align: center; } .box::before { content:''; display: inline-block; height: 100%; width: 0; vertical-align: middle; } .box .content { width: 400px; background: #ccc; display: inline-block; vertical-align: middle; } </style> <h2>3.:before + inline-block</h2> <div class=\\\"box box3\\\"> <div class=\\\"content\\\"> CSS垂直居中 </div> </div> \",\"适用情景：多行文字的垂直居中技巧\",\"谁说绝对定位要少用？Amos认为没有少用多用的问题，重点在于你是否有妥善运用才是重点，绝对定位在这个例子中会设置top:50%来抓取空间高度的50%，接着在将居中元素的margin-top设定为负一半的高度，这样就能让元素居中了，此方法可是自古以来流传多年的居中方式呢？\",\"<style> h2 { text-align: center; } .box { width: 500px; height: 250px; border: 1px solid #f00; margin: auto; position: relative; } .box4 .content { width: 400px; background: #ccc; height: 70px; position: absolute; top:50%; left: 50%; margin-left: -200px; margin-top: -35px; } </style> <h2>4.absolute + margin 負值</h2> <div class=\\\"box box4\\\"> <div class=\\\"content\\\"> CSS垂直居中 </div> </div> \",\"适用情景：多行文字的垂直居中技巧\",\"又一个绝对定位的垂直居中的方案，这个方式比较特别一点，当元素设置为绝对定位后，假设它是抓不到整体可运用的空间范围，所以margin:auto会失效，但当你设置了top:0;bottom:0;时，绝对定位元素就抓到了可运用的空间了，这时你的margin:auto就生效了（神奇吧），如果你的绝对定位元素需要水平居中于父层，那你同样可以设定left:0;right:0;来让绝对定位元素取得空间可运用范围，再让margin-left与margin-right设定为auto即可居中。但此方式的缺点是你的定位元素必须有固定的宽高（百分比也算）才能正常居中。\",\"<style> h2 { text-align: center; } .box { width: 500px; height: 250px; border: 1px solid #f00; margin: auto; position: relative; } .content { width: 400px; background: #ccc; height: 70px; position: absolute; top: 0; right: 0; bottom: 0; left: 0; margin: auto; } </style> <h2>5.absolute + translate(-50%, -50%)</h2> <div class=\\\"box box5\\\"> <div class=\\\"content\\\"> CSS垂直居中 </div> </div> \",\"适用情景：多行文字的垂直居中技巧\",\"在一个绝对定位居中的方式，此方式应该算是最方便的了，因为此居中的定位元素不需要固定的宽高，我们利用绝对定位时的top 与right设置元素的上方跟左方各为50%，再利用translate(-50%,-50%)位移居中元素自身宽与高的50%就能达成居中的目的了。（css3好棒）\",\"<style> h2 { text-align: center; } .box { width: 500px; height: 250px; border: 1px solid #f00; margin: auto; position: relative; } .box5 .content { width: 400px; background: #ccc; position: absolute; top:50%; left: 50%; transform: translate(-50%, -50%); } </style> <h2>6.absolute + margin: auto</h2> <div class=\\\"box box6\\\"> <div class=\\\"content\\\"> CSS垂直居中 </div> </div> \",\"适用情景：多行文字的垂直居中技巧\",\"Flex！前端的毒品！后端的宝物！这东西自从面世之后就不断的考验网页开发者的良心，到底要不要抛弃float拥抱flex，我想这答案人人心中自由一把尺，但先碰Flex再碰Float可谓先甜后苦，这顺序到底要倒吃甘蔗还是正吃甘蔗是实在难说，自从有了Flex之后，小孩考试一百分，设计网页不跑版，客户网页都RWD，老板赚钱好开心，我也加薪（加班）好甘心，不由的说Flex真的是一个神物，我们只要设定父层display:flex以及设定次轴(cross axis)属性align-items:center 就好了（说那么多结果重点就一行字是哪招啦），这个方式的优点是此层不需要设定高度即可自动居中，且原始代码干净无比，真的是用一次就让你升天啦。\",\"<style> h2 { text-align: center; } .box { width: 500px; height: 250px; border: 1px solid #f00; margin: auto; display: flex; justify-content: center; align-items: center; } .content { width: 400px; background: #ccc; } </style> <h2>7.Flex + align-items</h2> <div class=\\\"box box7\\\"> <div class=\\\"content\\\"> CSS垂直居中 </div> </div> \",\"适用情景：多行文字的垂直居中技巧\",\"Flex有多种方式可以让你把数据居中，适用Flex-grow的延展特性来达成，这个例子中Amos适用了flex-direction:column直式排法，搭配:before伪元素适用flex-grow伸展值能够取得剩下所有空间的特性，把它设定成一半的剩余空间就能做到把内容数据准确的推到垂直中间位置，算是个传统技法的延伸方式。这样的话上面第七个方式不是比较快？\",\"<style> h2 { text-align: center; } .box { width: 500px; height: 250px; border: 1px solid #f00; margin: auto; display: flex; flex-direction: column; align-items: center; } .box:before { content: ''; flex-grow: .5; } .content { width: 400px; background: #ccc; } </style> <h2>8.Flex + before + flex-grow</h2> <div class=\\\"box box8\\\"> <div class=\\\"content\\\"> CSS垂直居中 </div> </div> \",\"适用情景：多行文字的垂直居中技巧\",\"继续用Flex来居中，由于Flex元素对空间解读的特殊性，我们只要在父层元素设定display:flex，接着在需要垂直居中的元素上设定margin:auto，即可自动居中\",\"<style> h2 { text-align: center; } .box { width: 500px; height: 250px; border: 1px solid #f00; margin: auto; display: flex; } .content { width: 400px; background: #ccc; margin: auto; } </style> <h2>9.Flex + margin</h2> <div class=\\\"box box9\\\"> <div class=\\\"content\\\"> CSS垂直居中 </div> </div> \",\"适用情景：多行文字的垂直居中技巧\",\"align-self 应该大家都不陌生，基本上就是对flex次轴cross axis 的个别对齐方式只要对单一子层元素设定align-self:center就能达成垂直居中的目的了。\",\"<style> h2 { text-align: center; } .box { width: 500px; height: 250px; border: 1px solid #f00; margin: auto; display: flex; justify-content: center; } .content { width: 400px; background: #ccc; align-self: center } </style> <h2>10.Flex + align-self</h2> <div class=\\\"box box10\\\"> <div class=\\\"content\\\"> CSS垂直居中 </div> </div> \",\"适用情景：多行文字的垂直居中技巧\",\"在正常的状况下，align-content 仅能对次轴多行flex item做居中，但是当我今天子层元素不确定有多少个时，且有时可能会有单个的情况出现时，此技巧就能用到了（当然你也能有其他解法），既然是多行子元素才能用，那我们就为单个子组件多加两个兄弟吧，使用:before以及:after 来让子元素增加到多个，这样就能使用flex的align-content属性来居中\",\"<style> h2 { text-align: center; } .box { width: 500px; height: 250px; border: 1px solid #f00; margin: auto; display: flex; flex-wrap: wrap; justify-content: center; align-content: center; } .content { width: 400px; background: #ccc; } .box11:before, .box11:after { content: ''; display: block; width:100%; } </style> <h2>11.Flex + align-content</h2> <div class=\\\"box box11\\\"> <div class=\\\"content\\\"> CSS垂直居中 </div> </div> \",\"适用情景：多行文字的垂直居中技巧\",\"CSS Grid最令人惊讶的就是这个template的功能了，简直就是把块元素当画布在使用，我们仅需要把模板设置成三列，就能搞定垂直居中了\",\"<style> h2 { text-align: center; } .box { width: 500px; height: 250px; border: 1px solid #f00; margin: auto; display: grid; grid-template-rows: 1fr auto 1fr; grid-template-columns: 1fr auto 1fr; grid-template-areas: '. . .' '. amos .' '. . .'; } .content { width: 400px; background: #ccc; grid-area: amos; } </style> <h2>12.Grid + template</h2> <div class=\\\"box box12\\\"> <div class=\\\"content\\\"> CSS垂直居中 </div> </div> \",\"适用情景：多行文字的垂直居中技巧\",\"align-items不仅是Flex可用，连CSS Grid也拥有此属性可使用，但在Flex中align-items是针对次轴cross axis作对齐，而在CSS Grid中则是针对Y轴做对齐，你可以把它想象成是表格中储存单元格的vertical-align属性看待，就可以很好理解了\",\"<style> h2 { text-align: center; } .box { width: 500px; height: 250px; border: 1px solid #f00; margin: auto; display: grid; justify-content: center; align-items: center; } .content { width: 400px; background: #ccc; } </style> <h2>13.Grid + align-items</h2> <div class=\\\"box box13\\\"> <div class=\\\"content\\\"> CSS垂直居中 </div> </div> \",\"适用情景：杜航文字的垂直居中技巧\",\"CSS Grid的align-content跟Flex的align-content有点差异，CSS Grid对于空间的解释会跟Flex有一些些的落差，所以导致align-content在Flex中仅能针对多行元素起作用，但在Grid中就没这个问题，所以我们可以很开心的使用align-content来对子元素做垂直居中，丝毫不费力气\",\"<style> h2 { text-align: center; } .box { width: 500px; height: 250px; border: 1px solid #f00; margin: auto; display: grid; justify-content: center; align-content: center; } .content { width: 400px; background: #ccc; } </style> <h2>14.Grid + align-content</h2> <div class=\\\"box box14\\\"> <div class=\\\"content\\\"> CSS垂直居中 </div> </div> \",\"适用情景：多行文字的垂直居中技巧\",\"align-self 应该大家都不陌生，基本上就是对grid Y轴的个别对齐方式，只要对单一子层元素设置为align-self:center就能达成垂直居中的目的了\",\"<style> h2 { text-align: center; } .box { width: 500px; height: 250px; border: 1px solid #f00; margin: auto; display: grid; justify-content: center; } .content { width: 400px; background: #ccc; align-self: center; } </style> <h2>15.Grid + align-self</h2> <div class=\\\"box box15\\\"> <div class=\\\"content\\\"> CSS垂直居中 </div> </div> \",\"适用情景：多行文字的垂直居中技巧\",\"place-items这属性不知道有多少人用过，此属性是align-items与justify-items的缩写，简单的说就是水平与垂直的对齐方式，想当然的，设定center就能居中\",\"<style> h2 { text-align: center; } .box { width: 500px; height: 250px; border: 1px solid #f00; margin: auto; display: grid; height: 150px; margin: 0 auto; place-items: center; } .content { width: 400px; background: #ccc; } </style> <h2>16.Grid + place-items</h2> <div class=\\\"box box16\\\"> <div class=\\\"content\\\"> CSS垂直居中 </div> </div> \",\"适用情景：多行文字的垂直居中技巧\",\"place-content这属性有多少人用过，此属性是align-content与justify-content的缩写，简单的说就是水平与垂直的对齐方式，想当然的，设置center就能居中了\",\"<style> h2 { text-align: center; } .box { width: 500px; height: 250px; border: 1px solid #f00; margin: auto; display: grid; height: 150px; margin: 0 auto; place-content: center; } .content { width: 400px; background: #ccc; } </style> <h2>17.Grid + place-content</h2> <div class=\\\"box box17\\\"> <div class=\\\"content\\\"> CSS垂直居中 </div> </div> \",\"适用情景：多行文字的垂直居中技巧\",\"继续用Grid来居中，由于Grid元素对空间解读的特殊性，我们只要在父层元素设定display:grid，接着在需要垂直居中的元素上设置margin:auto即可自动居中。怎么这描述似曾相识。\",\"<style> h2 { text-align: center; } .box { width: 500px; height: 250px; border: 1px solid #f00; margin: auto; display: grid; } .content { width: 400px; background: #ccc; margin:auto; } </style> <h2>18.Grid + margin</h2> <div class=\\\"box box18\\\"> <div class=\\\"content\\\"> CSS垂直居中 </div> </div> \",\"适用情景：多行文字的垂直居中技巧\",\"这一招我想有点年纪的开发者应该都有看过，当然像我这么嫩的开发者当然是第一次看到啦，这一招的原理在于使用 CSS display属性将div设置成表格的单元格，这样就能利用支持存储单元格对齐的vertical-align属性来将信息垂直居中\",\"<style> h2 { text-align: center; } .box { width: 500px; height: 250px; border: 1px solid #f00; margin: auto; text-align: center; display: table-cell; vertical-align: middle; } .content { width: 400px; background: #ccc; margin: auto; } </style> <h2>19.display: table-cell</h2> <div class=\\\"box box19\\\"> <div class=\\\"content\\\"> CSS垂直居中 </div> </div> \",\"适用情景：多行文字的垂直居中技巧\",\"Calc是计算机英文单词calculator的缩写，这个由微软提出的css 方法，真的是网页开发者的一个福音。我们竟然可以在网页中直接做计算，这真是太猛了，从此我们再也不用在那边绞尽脑汁的数学计算了，或是想办法用js来动态计算，我们可以很轻松的利用calc()这个方法，来将百分比及时且动态的计算出实际要的是什么高度，真可谓是划时代的一个方法啊，但这个方法需要注意的是大量使用的话，网页性能会是比较差的，所以请谨慎使用。\",\"<style> h2 { text-align: center; } .box { width: 500px; height: 250px; border: 1px solid #f00; margin: auto; } .content { width: 400px; background: #ccc; position: relative; top:calc((100% - 70px) / 2); margin:auto; height: 70px; } </style> <h2>20.calc</h2> <div class=\\\"box box20\\\"> <div class=\\\"content\\\"> CSS垂直居中 </div> </div> \",\"适用情景：多行文字的垂直居中技巧\",\"这个技巧是利用了top:50%的招式，让你的元素上方能产生固定百分比的距离，接着让要居中的元素本身使用translateY的百分比来达成垂直居中的需求，translate是一个很棒的属性，由于translate的百分比单位是利用元素自身的尺寸作为100%，这样让我们要利用元素自身宽高做事变得方便很多。\",\"<style> h2 { text-align: center; } .box { width: 500px; height: 250px; border: 1px solid #f00; margin: auto; } .content { width: 400px; background: #ccc; position: relative; top: 50%; transform: translateY(-50%); margin: auto; } </style> <h2>21.relative + translateY(-50%)</h2> <div class=\\\"box box21\\\"> <div class=\\\"content\\\"> CSS垂直居中 </div> </div> \",\"适用情景：多行文字的垂直居中技巧\",\"什么！这也算垂直居中技巧，连我奶奶都知道这方式吧\",\"对的，这的确也算是一种垂直居中的方式，不可讳言的这方式真的是简单过头了，以至于有些开发者认为这种方式都不能算是一种垂直居中的技巧，但同样的你无法反驳的是，我的数据的确垂直居中啦，好啦，就当我硬凹吧，你说的对，好吧\",\"<style> h2 { text-align: center; } .box { width: 500px; border: 1px solid #f00; margin: auto; height: auto; padding: 50px 0; } .content { width: 400px; background: #ccc; margin: auto; } </style> <h2>22.padding</h2> <div class=\\\"box box22\\\"> <div class=\\\"content\\\"> CSS垂直居中 </div> </div> \",\"适用情景：多行文字的垂直剧种技巧\",\"这个方式应该是比较少见到的有人使用的了，这个想法是被老友Paul所激发的，write-mode这个css属性的功能基本上跟垂直居中是八竿子打不着，它的用途是改变文字书写的方向从横变竖，且支持度从很早期的IE5就有支持了，但当时Amos很少使用，一来是网页多是横书较多，另外当时除了IE浏览器意外，其他浏览器的支持度都不是很好，也就很少使用了。\",\"使用write-mode将一整个文字容器变成直书，接着将此容器利用text-align:center来达到垂直居中的目的，白话一点的解说就是，你把原本横排的文字变成竖排，所以原本横排用到的水平对齐方式，就变成了控制直排的中间了，原理就是这么简单。但要特别注意的是浏览器对此语法的支持度来说，需要拆开写法才行，不然某些浏览器的语法不同，可能会让你的网页在某些浏览器上看起来无效，这会是最需要注意到的\",\"<style> h2 { text-align: center; } .box { width: 500px; height: 250px; border: 1px solid #f00; margin: auto; writing-mode: tb-lr; /* for ie11 */ writing-mode: vertical-lr; text-align: center; margin:0 auto; } .content { width: 400px; background: #ccc; display: inline-block; /* for ie & edge */ width: 100%; writing-mode: lr-tb; margin: auto; text-align: left; } .box .txt { width: 80%; margin: auto; } </style> <h2>23.writing-mode</h2>立马来看Amos实际完成的 <div class=\\\"box box23\\\"> <div class=\\\"content\\\"> <div class=\\\"txt\\\"> CSS垂直居中 </div> </div> </div> \"]},\"49\":{\"c\":[\"技术文章\"]},\"50\":{\"c\":[\"CSS\",\"Vertical Center\",\"CSS垂直居中\"]},\"51\":{\"h\":\"Git Command\",\"t\":[\"本文统计一下 Git 常用命令。\",\"git init <directory> \",\"directory 是可选的，如果不指定，将使用当前目录。\",\"git clone <url> \",\"git add <file> \",\"要添加当前目录中的所有文件，请使用 . 代替,代码如下：\",\"git add . \",\"git commit -m \\\"<message>\\\" \",\"如果要添加对跟踪文件所做的所有更改并提交。\",\"git commit -a -m \\\"<message>\\\" # or git commit -am \\\"<message>\\\" \",\"git reset <file> \",\"git mv <current path> <new path> \",\"git rm <file> \",\"您也可以仅使用 --cached 标志将其从暂存区中删除\",\"git rm --cached <file> \",\"默认分支名称：main\",\"默认远程名称：origin\",\"当前分支参考：HEAD\",\"HEAD 的父级：HEAD^ 或 HEAD~1\",\"HEAD 的祖父母：HEAD^^ 或 HEAD~2\",\"git branch \",\"有用的标志：\",\"-a：显示所有分支（本地和远程）\",\"-r：显示远程分支\",\"-v：显示最后一次提交的分支\",\"git branch <branch> \",\"你可以创建一个分支并使用 checkout 命令切换到它。\",\"git checkout -b <branch> \",\"git checkout <branch> \",\"git branch -d <branch> \",\"您还可以使用 -D 标志强制删除分支。\",\"git branch -D <branch> \",\"git merge <branch to merge into HEAD> \",\"有用的标志：\",\"--no-ff：即使合并解析为快进，也创建合并提交\",\"--squash：将指定分支中的所有提交压缩为单个提交\",\"建议不要使用 --squash 标志，因为它会将所有提交压缩为单个提交，从而导致提交历史混乱。\",\"变基是将一系列提交移动或组合到新的基本提交的过程。\",\"git rebase <branch to rebase from> \",\"git checkout <commit id> \",\"git revert <commit id> \",\"git reset <commit id> \",\"您还可以添加 --hard 标志来删除所有更改，但请谨慎使用。\",\"git reset --hard <commit id> \",\"git status \",\"git log \",\"git diff \",\"您还可以使用 --staged 标志来显示对暂存文件的更改。\",\"git diff --staged \",\"git diff <commit id 01> <commit id 02> \",\"stash 允许您在不提交更改的情况下临时存储更改。\",\"git stash \",\"您还可以将消息添加到存储中。\",\"git stash save \\\"<message>\\\" \",\"git stash list \",\"应用存储不会将其从存储列表中删除。\",\"git stash apply <stash id> \",\"如果不指定，将应用最新的 stash（适用于所有类似的 stash 命令）\",\"您还可以使用格式 stash@{} 应用存储（适用于所有类似的存储命令）\",\"git stash apply stash@{0} \",\"git stash drop <stash id> \",\"git stash clear \",\"git stash pop <stash id> \",\"git stash show <stash id> \",\"git remote add <remote name> <url> \",\"git remote \",\"添加 -v 标志以显示远程存储库的 URL。\",\"git remote -v \",\"git remote remove <remote name> \",\"git remote rename <old name> <new name> \",\"git fetch <remote name> \",\"git fetch <remote name> <branch> \",\"git pull <remote name> <branch> \",\"git push <remote name> \",\"git push <remote name> <branch> \"]},\"52\":{\"c\":[\"技术文章\"]},\"53\":{\"c\":[\"Git\"]},\"54\":{\"h\":\"jquery 学习笔记\",\"t\":[\"本文为前端学习笔记之 jquery 篇。\",\"jQuery大部分功能需要根据文档的DOM模型来工作，首先需要正确地解析到整个文档的DOM模型结构。使用jQuery需要在整个文档被浏览器完全加载后才开始进行。\",\"$(document).ready(function () { alert('Hello World!') $('p').click(function (event) { alert('Thanks for visiting!') }) }) \",\"'$'是在jQuery中使用的变量名，可以使用 jQuery.noConflict()避免冲突，它的返回值就是jQuery对象。\",\"jQuery.noConflict() $j = jQuery.noConflict() \"]},\"55\":{\"h\":\"jQuery对象与DOM对象之间的转换\",\"t\":[\"使用 $()得到的是一个jQuery对象。它封装了很多 DOM 对象的操作，但是它和 DOM 对象之间是不同的。只有当 obj是一个DOM对象时才能使用 obj.innerHTML；相应地，如果是jQuery对象应该使用 obj.html() 。\",\"从 DOM 对象转到 jQuery 对象： $(obj)\",\"从 jQuery 对象转到 DOM 对象： obj[0]\",\"比较正规地从 jQuery 对象到 DOM 的转换，是使用 jQuery 对象的 get() 方法：\",\"$(function () { $('li').get() $('li').get(0) $('li').get(-1) }) \"]},\"56\":{\"h\":\"常规选择器\",\"t\":[\"$('*') 选择所有节点\",\"$('#id') ID选择器，注意其中的一些特殊字符，如 .\",\"$('.class') 类选择器\",\"$('tag') 标签选择器\",\"$('子元素')\",\"$('直接子元素')\",\":focus 获取焦点元素\",\":first-child/:last-child 选择第一个/最后一个元素\",\":first/:last 截取第一个/最后一个符合条件的元素\",\"('pre+next') 直接兄弟元素\",\"('pre~siblings') 兄弟元素\",\":nth-child() 索引选择，索引从1开始\",\":nth-child(odd)\",\":nth-child(even)\",\":nth-child(4n)\"]},\"57\":{\"h\":\"属性选择器\",\"t\":[\"[name~=\\\"value\\\"] 属性中包括某单词\",\"[name=\\\"value\\\"] 属性完全等于指定值\",\"[name!=\\\"value\\\"] 属性不等于指定值\",\"[name] 包括有指定属性的元素\"]},\"58\":{\"h\":\"控件选择器\",\"t\":[\":checked 选择所有被选中的元素\",\":selected 被选择的元素\",\":disabled/:enabled 选择被禁用/未禁用的元素\",\":hidden 隐藏元素，不仅是 [type=\\\"hidden\\\"]，还有 display:none\",\":visible 可见控件， visibility:hidden和 opacity:0同样被认为是可见\",\":input:button:checkbox:file:image:password📻reset:submit:text 具体控件，图像控件是 [type=\\\"image\\\"]\"]},\"59\":{\"h\":\"其他选择器\",\"t\":[\"[name=\\\"value\\\"][name2=\\\"value2\\\"] 多个AND条件\",\"(\\\"selector1, selector2, selectorN\\\") 多个OR条件\",\":not() 否定选择\",\"(':contains(\\\"text\\\")') 包含有指定内容的元素\",\":eq():lt():gt():even:odd 列表索引选择（不支持负数）\",\"(':has(selector)') 符合条件的再次过滤\",\":header 选择 h1,h2,h3...标题元素\",\":only-child 仅有一个子元素的元素\",\":empty 空元素，即无内容也无元素\",\":parent 非空元素\"]},\"60\":{\"h\":\"调用链处理\",\"t\":[\".add() 向已有的节点序列中添加新的对象\",\".andSelf() 在调用链中，随时加入原始序列\",\".eq() 指定索引选取节点，支持负数\",\".filter().is().not().find().first().last().has() 序列选择\",\".end() 节点回溯\",\"$(function () { $('ul.first').find('.foo').css('background-color', 'red').end().find('.bar').css('background-color', 'green') }); \"]},\"61\":{\"h\":\"子节点\",\"t\":[\".children() 所有的子节点，可加入过滤条件， .children(selector)\"]},\"62\":{\"h\":\"兄弟节点\",\"t\":[\".siblings().next().nextAll().nextUntil().prevAll().prevUntil().closet() 选择兄弟节点\"]},\"63\":{\"h\":\"父节点\",\"t\":[\".parent().parents().parentUntil() 父节点选择\"]},\"64\":{\"h\":\"attributes和 properties的区别\",\"t\":[\"attributes 是XML结构中的属性节点\",\"<div onload=\\\"prettyPrint()\\\"></div> \",\"properties 是DOM对象，对象属性\",\"$('body').get(0).tagName \"]},\"65\":{\"h\":\"类与属性控制\",\"t\":[\".addCLass().hasClass().removeClass() 添加一个类，判断是否有指定类，删除类\",\"$('body').addClass('test') $('body').addClass(function (index, current) { return current + 'new' }) $('body').removeClass('test') $('body').removeClass(function (index, current) { return current + ' ' + 'other' }) \",\".toggleClass() 类的开关式转换\",\"$('img').toggleClass() //对所有类的开关 $('img').toggleClass('test') //对指定类的开关 $('img').toggleClass(isTrue) //根据`isTrue`判断所有类的开关 $('img').toggleClass('test', isTrue) //根据`isTrue`判断指定类的开关 //同 `$('img').toggleClass('test')` 只是类名由函数返回 $('img').toggleClass(function (index, className, isTrue) { return 'name' }) // `isTrue`作为函数的第三个参数传入 $('img').toggleClass(function (index, className, isTrue) { return 'name' }, isTrue) \",\".attr() 获取或设置一个属性值\",\"// $('#greatPhoto').attr('alt') //获取属性` $('#greatPhoto').attr('alt', 'Brush Seller') //设置属性` // 同时设置多个属性 $('#greatPhoto').attr({alt: 'Brush Seller',title: 'photo by Kelly Clark'}) //设置属性为函数返回值，函数的上下文为当前元素 $('#greatPhoto').attr('title', function (i, val) { return val + ' - photo by Kelly Clark' }) \",\".prop() 用法同 .attr()，只是对象变成了 properties\",\".removeAttr().removeProp() 删除属性\",\".val() 设置或获取元素的表单值，通常用于表单元素\",\"$('input').val() $('input').val('other') \",\".html() 设置或获取元素的节点 html\",\"$('div').html() $('div').html('<div>测试</div>') $('div').html(function (index, old) { return old + '<span>另外的内容</span>' }) \"]},\"66\":{\"h\":\"样式控制\",\"t\":[\".css() 获取或设置指定的CSS样式\",\"$('body').css('background-color', 'red') $('body').css('background-color', function (index, value) { return value + '1' }) $('body').css({color: 'green', 'background-color': 'red'}) \",\".width().height() 获取或设置元素的宽和高\",\"$('body').width() $('body').width(50) $('body').width(function (index, value) { return value += 10 }) \",\".innerWidth().innerHeight().outerHeight().outerWidth() 元素的其他尺寸值\",\".scrollLeft().scrollTop() 获取或设置滚动条的位置\",\".offset().position() 获取元素的坐标。 offset是相对于 document， position是相对于父级元素\"]},\"67\":{\"h\":\"结构控制\"},\"68\":{\"h\":\"文本节点\",\"t\":[\".html().text() 设置和获取节点的文本值。设置时 .text()会转义标签，获取时 .text()会移除所有标签。\"]},\"69\":{\"h\":\"子节点\",\"t\":[\".append().prepend()\",\"$('.inner').append('<p>Test</p>') \",\"参数可以有多种形式：\",\"var $newDiv1 = $('<div id=\\\"object1\\\"/>'), newDiv2 = document.createElement('div'), existingDiv1 = document.getElementById('foo') $('body').append($newDiv1, [newDiv2, existingDiv1]) \"]},\"70\":{\"h\":\"兄弟节点\",\"t\":[\".after().before()\",\"$('.inner').after('<p>Test</p>') \"]},\"71\":{\"h\":\"父节点\",\"t\":[\".wrap().wrap().wrapInner()\",\"$('.inner').wrap('<div class=\\\"new\\\"></div>') $('.inner').wrapAll('<div class=\\\"new\\\"></div>') $('.inner').wrapInner('<div class=\\\"new\\\"></div>') \"]},\"72\":{\"h\":\"复制/删除/替换节点\",\"t\":[\".clone() 复制节点，可选参数表示是否处理已绑定的事件与数据\",\".clone(true) 处理当前节点的事件与数据\",\".clone(true,true) 处理当前节点及所有子节点的事件与数据\",\".detach() 暂时移除节点，之后可以再次恢复指定位置\",\".remove() 永久移除节点\",\".empty() 清除一个节点的所有内部内容\",\".unwrap() 移除节点的父节点\"]},\"73\":{\"h\":\"工具函数\",\"t\":[\".map() 遍历所有成员\",\"$(':checkbox').map(function () { return this.id }).get().join(',') $(':checkbox').map(function (index, node) { return node.id }).get().join(',') \",\".slice() 序列切片，支持一个或两个参数，支持负数\",\"$('li').slice(2).css('background-color', 'red') $('li').slice(2, 4).css('background-color', 'green') $('li').slice(-2, -1).css('background-color', 'blue') \"]},\"74\":{\"h\":\"通用工具\",\"t\":[\"$.each()$.map() 遍历列表， $.map()可以用于对象\",\"$.each([52, 97], function (index, value) { console.log((index + ' : ' + value)) }) $.map([0, 1, 2], function (index, n) { return n + 4 }) $.map([0, 1, 2], function (n) { return n > 0 ? n + 1 : null }) $.map([0, 1, 2], function (n) { return [n, n + 1] }) var dimensions = { width: 10, height: 15, length: 20 } $.map(dimensions, function (value, key) { return value * 2 }) var dimensions = { width: 10, height: 15, length: 20 } $.map(dimensions, function (value, key) { return key }) \",\"$.extend() 合并对象，第一个参数表示是否进行递归深入\",\"var object = $.extend({}, object1, object2) var object = $.extend(true, {}, object1, object2) \",\"$.merge() 合并列表\",\"$.merge([0, 1, 22, 3, 4]) \",\".grep() 过滤列表，第三个参数表示是否为取反\",\"$.grep([0, 1, ], function (array, index) { return n > 0 }) // [1, 2] $.grep([0, 1, 2], function (array, index) { return n > 0 }, true) // [0] \",\"$.inArray() 存在判断\",\"$.inArray(value, array [, fromIndex])\",\"$.isArray()$.isEmptyObject()$.isFunction ()$.iSNumeric()$.isPainObject()$.isWindow $.isXMLDoc() 类型判断\",\"$.noop() 空函数\",\"$.now() 当前时间戳，值为 (newDate).getTime()\",\"$.parseJson()$.parseXML() 把字符串解析为对象\",\"var xml = \\\"<rss version='2.0'><channel><title>RSS Title</title></channel></rss>\\\", xmlDoc = $.parseXML(xml), $xml = $(xmlDoc), $title = $xml.find('title') \",\"$.trim() 去头去尾 $.trim(str)\",\"$.type() 判断参数的类型\",\"$.unique() 遍历后去重。 $.unique(array)\",\"$.proxy() 为函数绑定上下文\",\"$.proxy(function,context)\",\"$.proxy(context,name)\",\"var o = { x: '123', f: function () { console.log(this.x) } } var go = function (f) { f() } o.f()// 123 go(o.f)// undefined go($.proxy(o.f, o))//123 $.proxy(o, 'f')() //123 \",\"当一个函数被传递之后，它就失去了原先的上下文。\",\"jQuery提供了一种机制，可以把节点作为数据存储的容器。\",\"$.data() 往节点中获取/设置数据\",\"$.removeData() 删除数据\",\"在内部实现上，jQuery会在指定节点添加一个内部标识，以此为 key，把数据存在内部闭包的一个结构中。\",\"事实上，jQuery的事件绑定机制也使用了这套数据接口。\",\"$.data($('#data').get(0), 'test', '123') $('#data').data('test', '456') \"]},\"75\":{\"h\":\"事件绑定\",\"t\":[\"在 jQuery1.7之后，推荐统一使用 on()来进行事件绑定。\",\".on() 绑定事件 on()的基本使用方式是： .on(event,handler)\",\".off() 移除事件\",\".one() 绑定单次事件\",\"$('#btn').on('click', function (eventObj) { console.log('Hello') }) \",\"对于 handler，它默认的上下文是触发事件的节点：\",\"$('#btn').on('click', function (eventObj) { console.log(this) }) \",\"使用 $.proxy()可以随意控制上下文：\",\"$('#btn').on('click', $.proxy(function (eventObj) { console.log(this.a) }, { a: 123 } )) // 123 \",\"event参数还支持通过：\",\"以 .分割的子名字\",\"以空格分割的多个事件\",\"$('#btn').on('click.my', (function (eventObj) { console.log('123') })) var f = function () { $('#btn').off('click.my') } \",\"多个事件：\",\"$('#btn').on('click.my click.other', (function (eventObj) { console.log('123') })) var f = function () { $('#btn').off('click.my') } \",\"on()的另一种调用形式：\",\"$('#btn').on( { 'click': function (eventObj) { console.log('click') }, 'mousemove': function (eventObj) { console.log('move') } } ) \",\"off()的使用方式与 on()完全类似：\",\"var f = function (eventObj) { console.log('Hello') } $('#btn').on('click', f) $('#btn').off('click') \"]},\"76\":{\"h\":\"事件触发\",\"t\":[\"事件的触发有两种方式，一是使用预定的“事件函数”（ .click()， .focus()），二是使用 trigger()或 triggerHandler()。\",\"$('#btn').on('click', function (eventObj) { console.log('hello') }) $('#btn').click() $('#btn').trigger('click') \",\"trigger()与 triggerHandler()不同之处在于前面是触发事件，而后者是执行绑定函数。\",\"$('#btn').on('focus', function (event) { console.log('Hello') }) $('#btn').triggerHandler('focus') \",\"trigger()和 triggerHandler()也用于触发自定义事件。\",\"$('#btn').on('my', function (event) { console.log('Hello') }) $('#btn').triggerHandler('my') \",\"trigger()和 triggerHandler()触发事件时，可以带上参数：\",\"$('#btn').on('my', function (event) { console.log(obj) }) $('#btn').trigger('my', {a: 123}) \"]},\"77\":{\"h\":\"事件类型\",\"t\":[\"行为事件：\",\".click() 单击\",\".dbclick() 双击\",\".blur() 失去焦点时\",\".change() 值变化时\",\".focus() 获取焦点时\",\".focusin() jQuery扩展的获取焦点\",\".focusout() jQuery扩展的失去焦点\",\".resize() 调整大小\",\".scroll() 滚动\",\".select() 被选择\",\".submit() 表单被提交\",\"键盘事件：\",\".keydown() 按下键\",\".keyup() 放开键\",\"鼠标事件：\",\".mousedown() 点下鼠标\",\".mouseup() 松开鼠标\",\".mouseover() 光标移入\",\".mouseout() 光标移出\",\".mousemove() 光标在其上移动\",\".mouseleave().mouseenter() 光标移出/移入\",\"页面事件：\",\".ready() 准备就绪\",\".unload() 离开当前页时，针对 window对象\",\".error() 发生错误时\",\".load() 正在载入\",\"event.currentTarget,event,target 事件绑定节点/事件的触发节点（冒泡行为）\",\"event.delegateTarget 绑定事件的对象，通常就是 event.currentTarget\",\"event.relatedTarget 相关的节点，主要用于一些转换式的事件。比如鼠标移入，表示它从哪个节点来的\",\"event.which 标明哪个按钮触发了事件，鼠标和键盘的键标识统一在这个属性中\",\"event.preventDefault()event.isDefaultPrevented() 禁止默认行为\",\"event.stopImmediatePropagation()event.isImmediatePropagationStopped() 不仅禁止冒泡。还终止绑定函数链的继续进行\",\"event.stopPropagation()，event.isPropagationStopped() 禁止冒泡\",\"event.pageX，event.pageY 事件触发时相对于 document的鼠标位置\",\"event.namespace 事件触发时的名字空间，比如 trigger('click.namespace')\",\"event.data 额外传入的数据\",\"event.result 上一个绑定函数的返回值\",\"event.timeStamp 事件触发时的时间，其值为 (newDate).getTime()\",\"event.type 事件类型\",\"如果一个绑定函数最后返回了 false，则默认是 event.preventDefault()和 event.stopPropagation()行为。\"]},\"78\":{\"h\":\"请求与回调\",\"t\":[\"jQuery的AJAX，核心的请求处理函数只有一个，就是 $.ajax()，然后就是一个简单的上层函数。\",\"jQuey.ajax() 的基本使用形式是：\",\"jQuey.ajax(settings) settings是一个对象，里面包含了所有的配置项。\",\"url 请求的地址。\",\"type 请求的方法类型， GET， POST。默认是 GET。\",\"data 要发送的数据\",\"dataType 服务器返回的数据类型，支持 xml， html， script， json， jsonp， text\",\"success 请求成功时调用的处理函数 success(data,textStatus,jqXHR)\",\"context 回调函数执行时的上下文\",\"cache 默认为 true，是否为请求单独添加一个随机参数以防止浏览器缓存\",\"error 请求错误时的调用函数。\",\"error(jqXHR,textStatus,errorThrown)\",\"第二个参数是表示请求状态的字符串： timeout， error， abort， parsererror\",\"第三个参数是当HTTP错误发生时，具体的错误描述： NotFound， InternalServerError等\",\"complete 请求结束（无论成功或失败）时的一个回调函数。\",\"complete(jqXHR,textStatus)\",\"第二个参数时表示请求状态的字符串： success， notmodified， error， timeout， abort， parsererror。\",\"jsonp 一个参数名，默认是 callback，一般用于指明回调函数名。设置成 false可以让请求没有 callback参数。\",\"jsonpCallback callback参数值。默认是自动生成的一个随机值。\"]},\"79\":{\"h\":\"请求的状态\",\"t\":[\"对于全局的所有AJAX请求而言，可以在任意节点上绑定到全局任意AJAX请求的每一个事件：\",\"$('#loading').ajaxStart(function () { $(this).show() }) \",\"说明：\",\".ajaxStart() 请求将要发出时\",\".ajaxSend() 请求将要发出时（在 .ajaxStart()后）\",\".ajaxSuccess() 请求成功\",\".ajaxError() 请求错误\",\".ajaxComplete() 请求完成\",\".ajaxStop() 请求结束（在 .ajaxComplete()后）\"]},\"80\":{\"h\":\"工具函数\",\"t\":[\".serialize() 解析表单参数项，返回字符串\",\"$('form').submit(function () { alert($(this).serialize()) return false }) \",\".serializeArray() 解析表单参数项，返回一个列表对象。\",\"$('form').submit(function () { alert($(this).serializeArray()) return false }) \"]},\"81\":{\"h\":\"Deferred\",\"t\":[\"Deferred对象是在jQuery1.5中引入的回调管理对象。其作用是把一堆函数按顺序放入一个调用链，然后根据状态来依次调用这些函数。AJAX的所有操作都是使用它来进行封装的。\",\"var obj = $.Deferred(function (a) {}) obj.done(function () { console.log('1') }) obj.done(function () { console.log('2') }) obj.resolve() \",\"总的来说：jQuery的 Deferred对象有三个状态： done， fail， process。\",\"process 只能先于其他两个状态先被激发。\",\"done和 fail互斥，只能激发一个。\",\"process可以被重复激发，而 done和 fail只能激发一次。\",\"然后，jQuery提供了一些函数用于添加回调，激发状态等。\",\"deferred.done() 添加一个或多个成功回调\",\"deferred.fail() 添加一个或多个失败回调\",\"deferred.always() 添加一个函数，同时应用于成功和失败\",\"deferred.progress() 添加一个函数用于准备回调\",\"deferred.then() 依次接受三个函数，分别用于成功，失败，准备状态\",\"deferred.reject() 激发失败状态\",\"deferred.resolve() 激发成功状态\",\"deferred.notify() 激发准备状态\",\"如果一个 Deferred已经被激发，则新添加的对应的函数会被立即执行。 jQuery还提供了一个 jQuery.when()的回调管理函数，可以用于方便地管理多个事件并发的情况。\",\"var defer = $.ajax({ url: 'test.html', dataType: 'json' }) defer.done(function (data) { console.log(data) }) \",\"done()做的事和使用 success()定义是一样的。\",\"当我们需要完成，像“请求A和请求B都完成时，执行函数”之类的需求时，使用 $.when()就可以了。\",\"var defer_1 = $.ajax({ url: 'json.html', dataType: 'json' }) var defer_2 = $.ajax({ url: 'jsonp.html', dataType: 'jsonp' }) var new_defer = $.when(defer_1, defer_2) new_defer.done(function () { console.log('hello') }) \",\"在 $.when()中的 Deferred，只要有一个是 fail，则整体结果为 fail。\",\"Deferred的回调函数的执行顺序与它们的添加顺序一致。\",\"这里特别注意一点，就是 done/fail/always与 then的返回值的区别。从功能上看，它们都可以添加回调函数，但是，方法的返回值是不同的。前组的返回值是原来的那个 defer对象，而 then返回的是一个新的 defer对象。\",\"then返回新的 defer这种形式，可以用于方便地实现异步函数的链式调用。\",\"defer.done(function () { return $.ajax({ url: '/json', dataType: 'json', success: function () { console.log('inner'); } }) }).done(function () { console.log('hello'); }) \",\"等同于是调用了两次 defer.done, defer.done ，注册的两次回调函数依次被执行后，看到的输出是： hello， inner。\",\"这是两次 defer.done 的结果，第一个回调函数返回了一个新的 defer 没任何作用。\",\"如果换成 then 方法： defer.then(function (){...});\",\"它跟两次 defer.done 是不同的。 new_defer 会在 inner 那里的 defer 被触发时再被触发，所以输出结果是： inner， hello。\",\"更一般地来说 then 的行为，就是前面的注册函数的返回值，会作为后面注册函数的参数值：\",\"var defer = $.ajax({ url: '/json', dataType: 'json' }) defer.then(function (res) { console.log(res) return 1 }).then(function (res) { console.log(res) return 2 }).then(function (res) { console.log(res) }) \",\"上面代码的输入结果是：ajax response，1，2。\"]},\"82\":{\"h\":\"Callbacks\",\"t\":[\"事实上，Deferred机制，只是在Callbacks机制的上层进行了一层简单封装。Callbacks对象才是真正的jQuery中定义的原始的回调管理机制。\",\"var obj = $.Callbacks() obj.add(function () { console.log('1') }) obj.add(function () { console.log('2') }) obj.fire() \",\"Callbacks对象的初始化支持一组控制参数：\",\"jQuey.Callbacks(flags) 初始化一个回调管理对象。 flags是空格分割的多个字符串，以定义此回调对象的行为：\",\"once 回调链只能被激发一次\",\"memory 回调链被激发后，新添加的函数被立即执行\",\"unique 相同的回调函数只能被添加一次\",\"stopOnFalse 当有回调函数返回 false时终止调用链的执行\",\"CallbackS的控制方法：\",\"callbacks.add() 添加一个或一串回调函数\",\"callbacks.fire() 激发回调\",\"callbacks.remove() 从调用链中移除指定的函数\",\"callbacks.empty() 清空调用链\",\"callbacks.disable() 关闭调用链的继续执行，新添加的函数也不会被执行\",\"callbacks.lock() 锁定调用链，但是如果打开了 memory的 flag，新添加的函数仍然会执行\",\"callbacks.has() 检查一个函数是否处于回调链之中\",\"callbacks.fired() 检查回调链是否被激发\",\"callbacks.locked() 检查回调链是否被锁定\"]},\"83\":{\"c\":[\"技术文章\"]},\"84\":{\"c\":[\"jQuery\",\"JavaScript\"]},\"85\":{\"h\":\"js实现复制功能\",\"t\":[\"本文来讲一下js实现复制功能的几种方法。\",\"<script type=\\\"text/javascript\\\"> function copy() { var dom = document.getElementById('id') dom.select() // 选择对象 document.execCommand('Copy') // 执行浏览器复制命令 alert('已复制好，可贴粘。') } </script> <textarea cols=\\\"20\\\" rows=\\\"10\\\" id=\\\"id\\\">用户定义的代码区域</textarea> <input type=\\\"button\\\" onClick=\\\"copy()\\\" value=\\\"点击复制代码\\\" /> \",\"原理：点击按钮的时候触发copy函数，根据id ID选中对象，然后在根据execCommand复制选中内容，所以此时选择的内容必须是可视的，也就是说不能是隐藏的文本域。\",\"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Transitional//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\\\"> <html xmlns=\\\"http://www.w3.org/1999/xhtml\\\"> <head> <meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=gb2312\\\" /> <title>Js复制代码</title> </head> <body> <input type=\\\"button\\\" name=\\\"btn\\\" onClick='copyToClipBoard()' value=\\\"复制专题地址和url地址，传给QQ/MSN上的好友\\\"> <script language=\\\"javascript\\\"> function copyToClipBoard() { var clipBoardContent = '' clipBoardContent += document.title clipBoardContent += this.location.href window.clipboardData.setData('Text', clipBoardContent) alert('复制成功，请粘贴到你的QQ/MSN上推荐给你的好友') } </script> </body> \",\"<input type=\\\"button\\\" name=\\\"btn\\\" onClick='copyUrl()' value=\\\"复制URL地址\\\"> <script language=\\\"javascript\\\"> function copyUrl() { var clipBoardContent = this.location.href window.clipboardData.setData('Text', clipBoardContent) alert('复制成功!') } </script> \",\"<input onclick=\\\"oCopy(this)\\\" value=\\\"你好.要copy的内容!\\\"> <script language=\\\"javascript\\\"> function oCopy(obj) { obj.select() js = obj.createTextRange() js.execCommand('Copy') alert('复制成功!') } </script> \",\"5、复制文本框或者隐藏域中的内容\",\"<script language=\\\"javascript\\\"> function CopyUrl(target) { target.value = myImg.value target.select() js = myImg.createTextRange() js.execCommand('Copy') alert('复制成功!') } function AddImg(target) { target.value = '[IMG]' + myImg.value + '[/ img]' target.select() js = target.createTextRange() js.execCommand('Copy') alert('复制成功!') } </script> \",\"6、复制 span 标记中的内容\",\"<script type=\\\"text/javascript\\\"> function copyText(obj) { var rng = document.body.createTextRange() rng.moveToElementText(obj) rng.scrollIntoView() rng.select() rng.execCommand('Copy') rng.collapse(false) alert('复制成功!') } </script> \",\"function copyToClipboard(txt) { if (window.clipboardData) { window.clipboardData.clearData() clipboardData.setData('Text', txt) alert('复制成功！') } else if (navigator.userAgent.indexOf('Opera') != -1) { window.location = txt } else if (window.netscape) { try { netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect') } catch (e) { alert('被浏览器拒绝！\\\\n请在浏览器地址栏输入\\\"about:config\\\"并回车\\\\n然后将 \\\"signed.applets.codebase_principal_support\\\"设置为\\\"true\\\"') } var clip = Components.classes['@mozilla.org/widget/clipboard;1'].createInstance(Components.interfaces.nsIClipboard) if (!clip) { return } var trans = Components.classes['@mozilla.org/widget/transferable;1'].createInstance(Components.interfaces.nsITransferable) if (!trans) { return } trans.addDataFlavor('text/unicode') var str = new Object() var len = new Object() var str = Components.classes['@mozilla.org/supports-string;1'].createInstance(Components.interfaces.nsISupportsString) var copyText = txt str.data = copyText trans.setTransferData('text/unicode', str, copyText.length * 2) var clipId = Components.interfaces.nsIClipboard if (!clip) { return false } clip.setData(trans, null, clipId.kGlobalClipboard) alert('复制成功！') } } \",\"<html> <head> <title>Zero Clipboard Test</title> <script type=\\\"text/javascript\\\" src=\\\"ZeroClipboard.js\\\"></script> <script language=\\\"JavaScript\\\"> var clip = null function $(id) { return document.getElementById(id) } function init() { clip = new ZeroClipboard.Client() clip.setHandCursor(true) clip.addEventListener('mouseOver', function(client) { clip.setText( $('fe_text').value ) }) clip.addEventListener('complete', function(client, text) { alert('该地址已经复制，你可以使用Ctrl+V 粘贴。') }) clip.glue('clip_button', 'clip_container') } </script> </head> <body onLoad=\\\"init()\\\"> <input id=\\\"fe_text\\\" cols=50 rows=5 value=复制内容文本1 > <div id=\\\"clip_container\\\"> <span id=\\\"clip_button\\\"> <b>复制</b> </span> </div> </body> </html> \"]},\"86\":{\"c\":[\"技术文章\"]},\"87\":{\"c\":[\"copy\",\"复制\"]},\"88\":{\"h\":\"在 Vue 中使用 JSX\",\"t\":[\"在使用 Vue 开发项目时绝大多数情况下都是使用模板来写 HTML，但是有些时候页面复杂又存在各种条件判断来显示/隐藏和拼凑页面内容，或者页面中很多部分存在部分DOM结构一样的时候就略显捉襟见肘，会写大量重复的代码，会出现单个 .vue 文件过长的情况，这个时候我们就需要更多的代码控制，这时候可以使用渲染函数。\",\"渲染函数想必平时几乎没有人去写，因为写起来很痛苦（本人也没有写过）。更多的是在 Vue 中使用 JSX 语法。写法上和在 React 中差不多，但是功能上还是没有 React 中那么完善。\",\"在写 JSX 的过程中不得考虑一个样式的问题，虽然可以直接在 .vue 文件中不写 <template> 部分，只写 <script> 和 <style> 部分，而不用担心样式作用域问题。但是更多的时候还是推荐直接使用 .js 的方式来写组件，这个时候就涉及到样式作用域的问题了。\",\"在 React 的生态中，有很多 CSS-IN-JS 的解决方案，比如 styled-jsx、emotion、styled-components 等，目前最活跃和用户量最多的是 styled-components ，目前已经拥有良好的生态圈子。如果需要在样式中作一些像 Sass/Less 中的颜色计算，可以使用 polished 来实现，当然不止这么简单的功能。但是在 Vue 中可使用的方案就太少了，因为 Vue 使用模板来写 HTM L本身是开箱即用的样式 scoped，在使用 JSX 写组件的时候就面临着样式问题，一种方案是在组件包裹 <div> 中取一个特殊的名字，然后样式都嵌套写在这个 class 下面，但是难免会遇到命名冲突的情况，而且每次还得变着花样取名称。此外，就是引入 CSS-IN-JS 在 Vue 对应的实现，但目前来看 Styled-components 官方提供了一个 Vue 版本的叫 vue-styled-components 和 emotion 的 vue-emotion，但是用的人实在太少。像 styled-components 进行了重大更新和变化，但是 Vue 版本的还是最初的版本，而且有时候还出现样式不生效的情况。\",\"首先需要约定一下，使用 JSX 组件命名采用首字母大写的驼峰命名方式，样式可以少的可以直接基于 vue-styled-components 写在同一个文件中，复杂的建议放在单独的 _Styles.js 文件中，当然也可以不采用 CSS-IN-JS 的方式，使用 Less/Sass 来写，然后在文件中 import 进来。\",\"下面是一个通用的骨架：\",\"import styled from 'vue-styled-components' const Container = styled.div` height: 100%; ` const Dashboard = { name: 'Dashboard', render() { return ( <Container>内容</Container> ) } } export default Dashboard \"]},\"89\":{\"h\":\"插值\",\"t\":[\"在JSX中使用单个括号来绑定文本插值：\",\"<span>Message: {this.message}</span> <!-- 类似于v-html --> <div domPropsInnerHTML={this.dangerHtml}/> <!-- v-model --> <el-input v-model={this.vm.name} /> \",\"在 jsx 中不需要把 v-model 分成事件绑定和赋值二部分分开来写，因为有相应的 babel 插件来专门处理。\"]},\"90\":{\"h\":\"样式\",\"t\":[\"在 JSX 中可以直接使用 class=\\\"xx\\\" 来指定样式类，内联样式可以直接写成 style=\\\"xxx\\\"：\",\"<div class=\\\"btn btn-default\\\" style=\\\"font-size: 12px;\\\">Button</div> <!-- 动态指定 --> <div class={`btn btn-${this.isDefault ? 'default' : ''}`}></div> <div class={{'btn-default': this.isDefault, 'btn-primary': this.isPrimary}}></div> <div style={{color: 'red', fontSize: '14px'}}></div> \"]},\"91\":{\"h\":\"遍历\",\"t\":[\"在 JSX 中没有 v-for 和 v-if 等指令的存在，这些全部需要采用 js 的方式来实现：\",\"{ /* 类似于v-if */ } { this.withTitle && <Title /> } { /* 类似于v-if 加 v-else */ } { this.isSubTitle ? <SubTitle /> : <Title /> } { /* 类似于v-for */ } { this.options.map(option => { return ( <div>{option.title}</div> ) }) } \"]},\"92\":{\"h\":\"事件绑定\",\"t\":[\"事件绑定需要在事件名称前端加上 on 前缀，原生事件添加 nativeOn ：\",\"<!-- 对应@click --> <el-button onClick={this.handleClick}>Click me</el-button> <!-- 对应@click.native --> <el-button nativeOnClick={this.handleClick}>Native click</el-button> <!-- 传递参数 --> <el-button onClick={e => this.handleClick(this.id)}>Click and pass data</el-button> \",\"注意：如果需要给事件处理函数传参数，需要使用箭头函数来实现。如果不使用箭头函数那么接收的将会是事件的对象event属性。\"]},\"93\":{\"h\":\"高级部分\",\"t\":[\"在 Vue 中基于 jsx 也可以把组件拆分成一个个小的函数式组件，但是有一个限制是必需有一个外层的包裹元素，不能直接写类似：\",\"const Demo = () => ( <li>One</li> <li>Two</li> ) \",\"必需写成：\",\"const Demo = () => ( <div> <li>One</li> <li>Two</li> </div> ) \",\"而在React中可以使用空标签 <></> 和 <react.Fragment></react.Fragment> 来实现包裹元素，这里的空标签其实只是 react.Fragment 的一个语法糖。同时在 React 16 中直接支持返回数组的形式：\",\"const Demo = () => [ <li>One</li> <li>Two</li> ] \",\"那么在 Vue 中就只能通过遍历来实现类似的功能，大体思路就是把数据先定义好数据然后直接一个 map 生成，当然如果说元素的标签是不同类型的那就需要额外添加标识来判断了。\",\"export default { data() { return { options: ['one', 'two'] } }, render() { const LiItem = () => this.options.map(option => <li>{option}</li>) return ( <div> <ul> <LiItem /> </ul> </div> ) } } \"]},\"94\":{\"h\":\"事件修饰符\",\"t\":[\"在基础部分简单介绍了事件的绑定用法，这里主要是补充一下事件修饰符的写法。\",\"在模板语法中 Vue 提供了很多事件修饰符来快速处理事件的冒泡、捕获、事件触发频率、按键识别等。可以直接查看官方文档的事件和按键修饰符部分，这里把相关内容原样搬运过来：\",\"修饰符\",\"前缀\",\".passive\",\"&\",\".capture\",\"!\",\".once\",\"~\",\".capture.once或.once.capture\",\"~!\",\"使用方式如下：\",\"<el-button {...{ '!click': this.doThisInCapturingMode, '!keyup': this.doThisOnce, '~!mouseover': this.doThisOnceInCapturingMode }}>Click Me!</el-button> \",\"下面给出的事件修饰符是需要在事件处理函数中写出对应的等价操作：\",\"修饰符\",\"处理函数中的等价操作\",\".stop\",\"event.stopPropagation()\",\".prevent\",\"event.preventDefault()\",\".self\",\"if (event.target !== event.currentTarget) return\",\"按键： .enter, .13\",\"if (event.keyCode !== 13) return (对于别的按键修饰符来说，可将 13 改为另一个按键码)\",\"修饰键： .ctrl, .alt, .shift, .meta\",\"if (!event.ctrlKey) return (将 ctrlKey 分别修改为 altKey、shiftKey 或者 metaKey)\",\"下面是在事件处理函数中使用修饰符的例子：\",\"export default { methods: { keyup(e) { // 对应`.self` if (e.target !== e.currentTarget) return // 对应 `.enter`, `.13` if (!e.shiftKey || e.keyCode !== 13) return // 对应 `.stop` e.stopPropagation() // 对应 `.prevent` e.preventDefault() // ... } } } \"]},\"95\":{\"h\":\"ref 和 refInFor\",\"t\":[\"在 Vue 中 ref 被用来给元素或子组件注册引用信息。引用信息将会注册在父组件的 $refs 对象上。如果在普通的 DOM 元素上使用，引用指向的就是 DOM 元素；如果用在子组件上，引用就指向组件。\",\"注意：\",\"因为 ref 本身是作为渲染结果被创建的，在初始渲染的时候你不能访问它们 - 它们还不存在\",\"$refs 不是响应式的，因此你不应该试图用它在模板中做数据绑定。\",\"当 v-for 用于元素或组件的时候，引用信息将是包含 DOM 节点或组件实例的数组。\",\"假如在jsx中想要引用遍历元素或组件的时候，例如：\",\"const LiArray = () => this.options.map(option => ( <li ref=\\\"li\\\" key={option}>{option}</li> )) \",\"会发现从 this.$refs.li 中获取的并不是期望的数组值，这个时候就需要使用 refInFor 属性，并置为 true 来达到在模板中 v-for 中使用 ref 的效果：\",\"const LiArray = () => this.options.map(option => ( <li ref=\\\"li\\\" refInFor={true} key={option}>{option}</li> )) \"]},\"96\":{\"h\":\"插槽（v-slot）\",\"t\":[\"在 jsx 中可以使用 this.$slots 来访问静态插槽的内容。\",\"注意：在 Vue 2.6.x 版本后废弃了 slot 和 slot-scope，在模板中统一使用新的统一语法 v-slot 指令。v-slot 只能用于 Vue 组件和 template 标签。\",\"<div class=\\\"page-header__title\\\"> {this.$slots.title ? this.$slots.title : this.title} </div> \",\"等价于模板的\",\"<div class=\\\"page-header__title\\\"> <slot name=\\\"title\\\">{{ title }}</slot> </div> \",\"在 Vue 官方文档中提到：父级模板里的所有内容都是在父级作用域中编译的；子模板里的所有内容都是在子作用域中编译的。因此像下面的示例是无法正常工作的\",\"<current-user> {{ user.firstName }} </current-user> \",\"在 <current-user> 组件中可以访问到 user 属性，但是提供的内容却是在父组件渲染的。如果想要达到期望的效果，这个时候就需要使用作用域插槽了。下面是改写后的代码，更多知识点可以直接查看官方文档的作用域插槽。\",\"<!-- current-user组件定义部分 --> <span> <slot v-bind:user=\\\"user\\\"> {{ user.lastName }} </slot> </span> <!-- current-user 使用 --> <current-user> <template v-slot:default=\\\"slotProps\\\"> {{ slotProps.user.firstName }} </template> </current-user> \",\"上面的示例其实就是官方的示例，这里需要说明的是，其实在Vue中所谓的作用域插槽功能类似于 React 中的 Render Props 的概念，只不过在 React 中我们更多时候不仅提供了属性，还提供了操作方法。但是在 Vue 中更多的是提供数据供父作用域渲染展示，当然我们也可以把方法提供出去，例如：\",\"<template> <div> <slot v-bind:injectedProps=\\\"slotProps\\\"> {{ user.lastName }} </slot> </div> </template> <script> export default { data() { return { user: { firstName: 'snow', lastName: 'wolf' } } }, computed: { slotProps() { return { user: this.user, logFullName: this.logFullName } } }, methods: { logFullName() { console.log(`${this.firstName} ${this.lastName}`) } } } </script> \",\"在父组件中使用：\",\"<current-user> <template v-slot:default=\\\"{ injectedProps }\\\"> <div>{{ injectedProps.user.firstName }}</div> <el-button @click=\\\"injectedProps.logFullName\\\">Log Full Name</el-button> </template> </current-user> \",\"在上面的代码中我们实际上使用解构的方式来取得 injectedProps，基于解构的特性还可以重命名属性名，在 prop 为 undefined 的时候指定初始值。\",\"<current-user v-slot=\\\"{ user = { firstName: 'Guest' } }\\\"> {{ user.firstName }} </current-user> \",\"如果组件只有一个默认的插槽还可以使用缩写语法，将 v-slot:default=\\\"slotProps\\\" 写成 v-slot=\\\"slotProps\\\"，命名插槽写成 v-slot:user=\\\"slotProps\\\"，如果想要动态插槽名还可以写成 v-slot:[dynamicSlotName]，此外具名插槽同样也有缩写语法，例如 v-slot:header 可以被重写为 #header\",\"上面介绍了很多插槽相关的知识点足已说明其在开发过程中的重要性。说了很多在模板中如何定义和使用作用域插槽，现在进入正题如何在 jsx 中同样使用呢？\",\"export default { // current-user components data() { return { user: { firstName: 'snow', lastName: 'wolf' } } }, computed: { slotProps() { return { user: this.user, logFullName: this.logFullName } } }, methods: { logFullName() { console.log(`${this.firstName} ${this.lastName}`) } }, render() { return ( <div> { this.$scopedSlots.subTitle({ injectedProps: this.slotProps }) } </div> ) } } \",\"然后在父组件中以 jsx 使用：\",\"<current-user {...{ scopedSlots: { subTitle: ({ injectedProps }) => ( <div> <h3>injectedProps.user</h3> <el-button onClick={injectedProps.logFullName}>Log Full Name</el-button> </div> ) } }}></current-user> \"]},\"97\":{\"h\":\"指令\",\"t\":[\"这里需要注意的是在 jsx 中所有 Vue 内置的指令除了 v-show 以外都不支持，需要使用一些等价方式来实现，比如 v-if 使用三目运算表达式、v-for 使用 Array.map() 等。\",\"对于自定义的指令可以使用 v-name={value} 的语法来写，需要注意的是指令的参数、修饰符此种方式并不支持。以官方文档指令部分给出的示例 v-focus 使用为例，介绍二种解决办法：\",\"直接使用对象传递所有指令属性\",\"<input type=\\\"text\\\" v-focus={{ value: true }} /> \",\"使用原始的vNode指令数据格式\",\"export default { directives：{ focus: { inserted: function(el) { el.focus() } } }, render() { const directives = [ { name: 'focus', value: true } ] return ( <div> <input type=\\\"text\\\" {...{ directives }} /> </div> ) } } \"]},\"98\":{\"h\":\"过滤器\",\"t\":[\"过滤器其实在开发过程中用得倒是不多，因为更多时候可以通过计算属性来对数据做一些转换和筛选。这里只是简单提及一下并没有什么可以深究的知识点。\",\"在模板中的用法如下：\",\"<!-- 在双花括号中 --> {{ message | capitalize }} <!-- 在 `v-bind` 中 --> <div v-bind:id=\\\"rawId | formatId\\\"></div> \",\"在jsx中使用方法为：\",\"<div>{this.$options.filters('formatDate')('2019-07-01')}</div> \",\"注意：由于 Vue 全局的过滤器只用于模板中，如果需要用于组件的方法中，可以把过滤器方法单独抽离出一个公共Js文件，然后引入组件中，然后用于方法中。\"]},\"99\":{\"h\":\"一些简单经验分享\",\"t\":[\"并不是说我们在开发 Vue 项目的时候一定要使用 jsx 的方式来写，但是多掌握一种方式来灵活变通，提高工作效率，扩展思路何尝不值得一试。而且，在有些场景下释放 js 的完全编程能力会让你更加能够得心应手。其实在使用模板方式的时候我们并没有完全采用组件的思维方式来做，或者说是做得不彻底，不纯粹，拆分的粒度不够。更多 的时候并没有考虑到组件怎么切分和抽象，多人协作的时候如何处理依赖并明确自己的功能点。\"]},\"100\":{\"h\":\"关于DOM属性、HTML属性和组件属性\",\"t\":[\"在 React 中所有数据均挂载在 props 下，Vue 则不然，仅属性就有三种：组件属性 props，普通 html 属性 attrs 和 DOM 属性 domProps。在 Angular 的文档中关于插值绑定部分是重点说明了 DOM 属性和 HTML 属性的区别，在大多数情况下两者都有对应的同名属性，也就是 1:1 映射关系，但是也有例外的情况，比如 HTML 中 colspan，DOM 中的 textContent。HTML 属性的值指定了初始值，并且不能改变，而 DOM 属性的值表示当前值，是可以改变的。\",\"然后在 Vue 的模板语法中是不区分 DOM 属性和 HTML 属性的，例如：\",\"<template> <div> <div>输入的值：{{ title }}</div> <input type=\\\"text\\\" value=\\\"我是DOM属性值\\\" v-model=\\\"title\\\" @input=\\\"logTitle\\\" /> </div> </template> <script> export default { data() { return { title: '' } }, methods: { logTitle(e) { // 输出DOM属性 console.log(e.target.value) // 输出HTML属性 console.log(e.target.getAttribute('value')) } } } </script> \",\"运行示例可以看到 input 的初始值被设置为了“我是 DOM 属性值\\\"，当我们在输入框中添加或者删除文字时，HTML 属性始终没有变化，而绑定的 DOM 值一值在变动。然后再看一下在 jsx 中的实现：\",\"<div>输入值：{ this.title }</div> <input type=\\\"text\\\" value=\\\"我是DOM属性\\\" v-model={this.title} onInput={this.logTitle} /> \",\"同样运行后会发现在 jsx 写法中并没有直接将 HTML 属性初始化为 DOM 属性值，即输入框中当前值为空字符串，这符合预期的行为。\",\"此外在模板语法中是无法区分 HTML 属性和 DOM 属性命名一样的场景，但是在 jsx 中可以很好的区分：\",\"<Demo title=\\\"我是组件属性\\\" domPropsTitle=\\\"我是DOM属性\\\" /> \",\"结果会就是在 HTML 中显示 title=\\\"我是DOM属性，而\\\"我是组件属性” 传递给了组件。\",\"在 React 中 CSS 的样式写义在 jsx 中的语法是以 className=\\\"xx\\\" 的形式，而在 Vue 的 jsx 中可以直接写成 class=\\\"xx\\\"。实际上由于 class 是 js 的保留字，因此在 DOM 中其属性名为 className 而在 HTML 属性中为 class，我们可以在 Vue 中这样写，经过 Babel 转译后得到正确的样式类名：\",\"<div domPropsClassName=\\\"mt__xs\\\"></div> \",\"注意：如果同时写了 class=\\\"xx\\\" domPropsClassName=\\\"yy\\\" 那么后者的优先级较高，和位置无关。所以尽量还是采用 class 的写法。\",\"有使用过 Bootstrap 经验的可能会注意到它里面包含了很多 ARIA 属性，这些属性并不属于 DOM，在 jsx 中可以通过 attrsXX 或者直接 aria-xx 的方式来添加：\",\"<label aria-label=\\\"title\\\"></label> <label attrsAria-label=\\\"title\\\"></label> \",\"但是上面的换成 domPropsAria-label 就没有任何效果。\",\"注意：在 jsx 中所有 DOM 属性(Property)语法为 domPropsXx, HTML 特性(Attribute)语法为 attrsXx。更多的时候建议还是少使用，或者说合理使用。\",\"在 jsx 中还可以使用混用的写法，例如在组件中写了<Demo title=\\\"demo\\\" />，还可以定义一个属性对象，然后使用{...props}的方式写在一起，这个时候就会出现属性合并的问题，同样的事件多个地方声明事件处理函数，都会触发。\",\"最后需要提及一点的是，在 Vue 中当给一个组件传了很多 props，但是有的并不是组件声明的，也有可能是一些通用的 HTML 或者 DOM 属性，但是在最终编译后的 HTML 中会直接显示这些 props，如果不希望这些属性显示在最终的 HTML 中，可以在组件中设 inheritAttrs: false。虽然不显示了，但是我们依然可以通过 vm.$attrs 获取所有（除 class 和 style）绑定的属性，包括不在 props 中定义的。\"]},\"101\":{\"h\":\"关于事件\",\"t\":[\"前面已经把事件相关的知识点都介绍了，这里主要是提及一下关于 jsx 事件绑定语法 onXx 和组件属性（主要是函数prop）以 on 开头的情况如何处理。\",\"虽然在写组件的时候可以避开命名以 on 开头，但是在使用第三库的时候，如果遇到了该如何处理呢？比如Element组件 Upload 很多钩子都是以 on 开头。 下面提供两种解决办法：\",\"使用展开\",\"<el-upload {...{ props: { onPreview: this.handlePreview } }} /> \",\"使用propsXx\",\"<el-upload propsOnPreview={this.handlePreview} /> \",\"推荐使用第二种方式，写起来要简单些。\"]},\"102\":{\"h\":\"复杂逻辑条件判断\",\"t\":[\"在模板语法中可以使用 v-if、v-else-if 和 v-else 来做条件判断。在 jsx 中可以通过 ?: 三元运算符(Ternary operator)运算符来做 if-else 判断：\",\"const Demo = () => isTrue ? <p>True!</p> : null \",\"然后可以利用 && 运算符的特性简写为：\",\"const Demo = () => isTrue && <p>True!</p> \",\"对于复杂的条件判断，例如：\",\"const Demo = () => ( <div> { flag && flag2 && !flag3 ? flag4 ? <p>aa</p> : flag5 ? <p>Meh</p> : <p>hErp</p> : <p>bb</p> } </div> ) \",\"可以采用几种方式来降低判断识别的复杂度：\",\"最好的办法：将判断逻辑转移到子组件\",\"可选的 hacky 方法：使用 IIFE (立即执行表达式)\",\"使用第三方库解决：jsx-control-statements\",\"下面是使用 IIFE 通过内部使用 if-else 返回值来优化上述问题：\",\"const Demo = () => ( <div> { (() => { if (flag && flag2 &&!flag3) { if (flag4) { return <p>Blah</p> } else if (flag5) { return <p>Meh</p> } else { return <p>Herp</p> } } else { return <p>A</p> } })() } </div> ) \",\"还可以使用 do 表达式，但是需要插件 @babel/plugin-proposal-do-expressions 的转译来支持\",\"const Demo = () => ( <div> { do { if (flag1 && flag2 && !flag3) { if (flag4) { <p>Blah</p> } else if (flag5) { <p>Meh</p> } else { <p>Herp</p> } } else { <p>A</p> } } } </div> ) \",\"再就是一种比较简单的可选办法，如下：\",\"const Demo = () => { const basicCondition = flag && flag1 && !flag3; if (!basicCondition) return <p>A</p> if (flag4) return <p>Blah</p> if (flag5) return <p>Meh</p> return <p>Herp</p> } \"]},\"103\":{\"h\":\"组件的传值\",\"t\":[\"在单个 jsx 文件中可以写很多函数式组件来切分更小的粒度，例如之前的文章 Vue 后台管理系统开发日常总结__组件PageHeader，组件的形态有两种，一种是普通标题，另一种是带有选项卡的标题，那么在写的时候就可以这样写：\",\"render() { // partial html const TabHeader = ( <div class=\\\"page-header page-header--tab\\\"></div> ) // function partial const Header = () => ( <div class=\\\"page-header\\\"></div> ) <div class=\\\"page-header\\\"> {this.withTab ? TabHeader : <Header/>} </div> } \",\"注意在拆分的时候，如果不需要做任何判断可以纯粹是 HTML 片段赋值给变量，如果需要条件判断就使用函数式组件的方式来写。需要注意的是由于 render 函数会多次被调用，写的时候注意一下对性能的影响，目前能力有限这方面就不作展开了。\",\"既然使用函数式组件，那么同样可以在函数中传递参数了，参数是一个对象中，包含了以下属性：\",\"children # VNode数组，类似于React的children data # 绑定的属性 attrs # Attribute domProps # DOM property on # 事件 injection # 注入的对象 listeners: # 绑定的事件类型 click # 点击事件 parent # 父组件 props # 属性 scopedSlots # 对象，作用域插槽，使用中发现作用域插槽也挂在这个下面 slots # 函数，插槽 \",\"虽然可以在函数式组件中传参数、事件、slot 但是个人觉得不建议这样做，反而搞复杂了。\",\"render() { const Demo = props => { return ( <div> <h3>Jsx中的内部组件 { props.data.title }</h3> { props.children } <br /> { props.scopedSlots.bar() } </div> ) } return ( <div> <Demo title=\\\"test\\\" attrsA=\\\"a\\\" domPropsB=\\\"b\\\" onClick={this.demo}> <h3>我是Children</h3> <template slot=\\\"bar\\\"> <p>我是Slot内容</p> </template> </Demo> </div> ) } \",\"上面的示例最终生成的HTML中会将 <template> 的内容转换为 #document-fragment。\"]},\"104\":{\"c\":[\"技术文章\"]},\"105\":{\"c\":[\"Vue\",\"jsx\"]},\"106\":{\"h\":\"node-sass 版本与 Node 版本对应关系\",\"t\":[\"本文统计一下 node-sass 版本和 Node.js 版本的对应关系。\",\"Node.js\",\"Supported node-sass version\",\"Node Module\",\"Node 17\",\"7.0+\",\"102\",\"Node 16\",\"6.0+\",\"93\",\"Node 15\",\"5.0+, <7.0\",\"88\",\"Node 14\",\"4.14+\",\"83\",\"Node 13\",\"4.13+, <5.0\",\"79\",\"Node 12\",\"4.12+\",\"72\",\"Node 11\",\"4.10+, <5.0\",\"67\",\"Node 10\",\"4.9+, <6.0\",\"64\",\"Node 8\",\"4.5.3+, <5.0\",\"57\",\"Node <8\",\"<5.0\",\"<57\"]},\"107\":{\"c\":[\"技术文章\"]},\"108\":{\"c\":[\"node-sass\",\"Node.js\",\"NPM\"]},\"109\":{\"h\":\"Observer API\",\"t\":[\"Observer API（观察者API）释放了Web隐藏的超能力，以创建真正的响应式体验，从懒加载关键内容到非侵入式性能监控。 在检测变化方面非常方便，可以用来创建响应式应用。\",\"有四种不同类型的观察者可以观察不同的东西——从DOM到浏览器性能。\",\"MutationObserver观察DOM树，监听DOM的变化。\",\"// 选择要观察突变的节点 const targetNode = document.getElementById('element') // 观察者的选项（观察哪些突变） const config = { attributes: true, childList: true, subtree: true, } // 创建一个观察者实例，链接到一个回调，以便在观察到突变时执行。 const observer = new MutationObserver((mutations, observer) => { mutations.forEach(mutation => { if (mutation.type === 'childList') { console.log('A child node has been added or removed.') } else if (mutation.type === 'attributes') { console.log(`The ${mutation.attributeName} attribute was modified.`) } }) }) // 开始观察目标节点的配置突变情况 observer.observe(targetNode, config) // 之后，你可以停止观察 observer.disconnect() \",\"当一个元素的属性、文本或内容发生变化时，我们会得到通知，同时也会监控子节点是否被添加或删除。\",\"这对于调整DOM中元素的大小以及重置DOM值特别有用。\",\"IntersectionObserver观察一个DOM元素的可见性，监听其位置的变化。\",\"// 选择要观察突变的节点 const targetNode = document.getElementById('element') // 观察者的选项（观察哪些突变） const config = { rootMargin: '-100% 0px 0px 0px', } // 创建一个观察者实例，链接到一个回调，以便在观察到突变时执行。 const intersectionObserver = new IntersectionObserver((entries, observer) => { entries.forEach(entry => { if (entry.isIntersecting) { console.log('Observing.') // 之后，你可以停止观察 observer.unobserve(entry.target) } }) }) // 开始观察 intersectionObserver.observe(targetNode, config) \",\"这在基于目标元素的可见性和位置的懒惰加载和动画内容方面非常有用。\",\"ResizeObserver观察元素的内容或边框，监听元素及其子元素的变化。\",\"// 选择要观察突变的节点 const targetNode = document.getElementById('element') const resizeObserver = new ResizeObserver((entries, observer) => { entries.forEach(entry => { console.log(`Element size: ${entry.width}px x ${entry.height}px`) console.log(`Element padding: ${entry.top}px ; ${entry.left}px`) // 之后，你可以停止观察 observer.unobserve(entry.target) }) }) // 开始观察 resizeObserver.observe(targetNode) \",\"创建基于输入或触发器包装的动态内容时，此观察者非常重要。\",\"PerformanceObserver观察性能测量事件，监听新的性能条目。\",\"// 观察者的选项（观察哪些突变） const config = { entryTypes: ['resource', 'mark', 'measure'] }; const observer = new PerformanceObserver(list => { list.getEntries().forEach(entry => { // 在控制台上显示每个报告的测量 console.log( `Name: ${entry.name}`, `Type: ${entry.entryType}`, `Start: ${entry.startTime}`, `Duration: ${entry.duration}`, ) }) }) // 开始观察 observer.observe(config) performance.mark('registered-observer') \",\"这对于接收性能通知很有用，可以在空闲时间运行，而不与关键的渲染工作竞争。\"]},\"110\":{\"c\":[\"技术文章\"]},\"111\":{\"c\":[\"Observer API\"]},\"112\":{\"h\":\"ASP.NET中的设计模式——原型模式\",\"t\":[\"最近在工作室课上在讲 .NET 程序开发应该掌握的各种设计模式，恰巧看到设计模式中的原型模式与 JavaScript 中的继承机制——原型链有异曲同工之妙，便深入研究了一下。\",\"在实际项目中，原型模式很少单独出现，一般是和工厂方法模式一起出现，通过 clone 的方法创建一个对象，然后由工厂方法提供给调用者。\",\"现将本人学习心得分享与此以方便大家更好地学习掌握原型模式。\",\"当运行以下代码时，会产生什么样的结果呢？\",\"int a = 10; int b = a; b = 20; Console.WriteLine(a); \",\"答案是：\",\"10 \",\"再运行以下代码时，又会产生什么样的结果呢？\",\"Person a = new Person(\\\"Jack\\\",20); Person b = a; b.SetInfo(\\\"John\\\",21); a.Display(); // a显示的信息是什么？ \",\"答案是：\",\"John 21 \",\"以上两段代码结构相似，但为何会产生不同的结果呢？\",\"要明白这个问题，我们先得对 C# 的数据类型有一定的了解。\",\"C# 的数据项类型一共分为以下几种：\",\"值类型（Value types）\",\"引用类型（Reference types）\",\"指针类型（Pointer types）(此处不做讨论)\",\"而 string 类型是一种具有值类型特性的特殊引用类型,并不是基本数据类型（底下有关于 string 的详细介绍）。值类型和引用类型的区别看下表：\",\"值类型\",\"引用类型\",\"内存分配地点\",\"分配在栈中\",\"分配在堆中\",\"效率\",\"效率高，不需要地址转换\",\"效率低，需要进行地址转换\",\"内存回收\",\"使用完后，立即回收\",\"垃圾回收机制\",\"赋值操作\",\"进行复制，创建一个同值新对象\",\"只是对原有对象的引用\",\"函数参数和返回值\",\"是对象的复制\",\"是原有对象的引用\",\"通过以下图片我们可以看到对象的值的传递情况\",\"对象的值的传递\",\"对象的值的传递\",\"Person b = a 后，即将 a 的值赋值给了 b ，此时 a 和 b 都同时指向同一个堆里，b.SetInfo(\\\"John\\\",21) 即改变了堆里的值，而 a 的值仍然是从堆里获取，所以 a.Display() 的值为 John 21。\",\"但如何实现如下面两张图一样的数据传递呢？\",\"对象的值的传递\",\"对象的值的传递\",\"原型模式告诉你答案！！！\"]},\"113\":{\"h\":\"原型模式介绍\",\"t\":[\"维基百科：原型模式（Prototype Pattern）是创建型模式的一种，其特点在于通过「复制」一个已经存在的实例来返回新的实例，而不是新建实例。被复制的实例就是我们所称的「原型」（Prototype），这个原型是可定制的。\"]},\"114\":{\"h\":\"原型模式的UML类图\",\"t\":[\"原型模式的UML类图\"]},\"115\":{\"h\":\"原型模式的简单实现\",\"t\":[\"申明抽象原型类和具体原型类：\",\"// 抽象原型类:声明克隆自身的接口 public interface Prototype { Prototype Clone(); } // 具体原型类:实现克隆的具体操作 public class ConcretePrototype1 : Prototype { public Prototype Clone() { Console.WriteLine(\\\"ConcretePrototype1 Cloned!\\\"); return (Prototype)this.MemberwiseClone(); } } public class ConcretePrototype2 : Prototype { public Prototype Clone() { Console.WriteLine(\\\"ConcretePrototype2 Cloned!\\\"); return (Prototype)this.MemberwiseClone(); } } \",\"主程序调用：\",\"// 客户类:让一个原型克隆自身，从而获得一个新的对象 public class Client { static void Main(string[] args) { ConcretePrototype1 obj1 = new ConcretePrototype1(); ConcretePrototype1 obj2 = new ConcretePrototype2(); ConcretePrototype1 cloneObj1 = (ConcretePrototype1)obj1.Clone(); ConcretePrototype1 cloneObj2 = (ConcretePrototype2)obj2.Clone(); } } \",\"程序运行结果：\",\"ConcretePrototype1 Cloned! ConcretePrototype2 Cloned! \"]},\"116\":{\"h\":\"简历的原型实现\",\"t\":[\"简历类：\",\"// 简历 class Resume : ICloneable { private string name; private string sex; private string age; private string timeArea; private string company; public Resume(string name) { this.name = name; } // 设置个人信息 public void SetPersonalInfo(string sex, string age) { this.sex = sex; this.age = age; } // 设置工作经历 public void SetWorkExperience(string timeArea, string company) { this.timeArea = timeArea; this.company = company; } // 显示 public void Display() { Console.WriteLine(\\\"{0} {1} {2}\\\", name, sex, age); Console.WriteLine(\\\"工作经历：{0} {1}\\\", timeArea, company); } public Object Clone() { return (Object)this.MemberwiseClone(); } } \",\"客户端调用代码：\",\"static void Main(string[] args) { Resume a = new Resume(\\\"大鸟\\\")； a.SetPersonalInfo(\\\"男\\\", \\\"29\\\"); a.SetWorkExperience(\\\"1998-2000\\\", \\\"XX公司\\\") Resume b = （Resume）a.Clone(); b.setWorkExperience(\\\"1998-2006\\\", \\\"YY企业\\\") Resume c = （Resume）a.Clone(); c.SetPersonalInfo(\\\"男\\\", \\\"24\\\"); a.Display(); b.Display(); c.Display(); Console.Read(); } \",\"结果显示：\",\"大鸟 男 29 工作经历 1998-2000 XX公司 大鸟 男 29 工作经历 1998-2006 YY公司 大鸟 男 24 工作经历 1998-2000 XX公司 \"]},\"117\":{\"h\":\"实现ICloneable接口\",\"t\":[\".NET 在 System 命名空间中提供了 ICloneable 接口，其中只包含一个 Clone() 方法，实现了这个接口就是完成了原型模式。\",\"实现ICloneable接口\",\"注：string 是一种拥有值类型特点的特殊引用类型！（例：上面简历的原型实现代码）\",\"string 不是基本数据类型，而是一个类（class）\",\"class string 继承自对象 （object） ，而不是 System.ValueType ( Int32 这样的则是继承于 System.ValueType)\",\"string 本质上是个 char[]，而 Array 是引用类型，并且初始化时也是在托管堆分配内存的，但是这个特殊的类却表现出值类型的特点，微软设计这个类的时候为了方便操作，所以重写了 == 和 != 操作符以及 Equals 方法，它判断相等性时，是按照内容来判断的，而不是地址\",\"string 在栈上保持引用，在堆上保持数据\"]},\"118\":{\"h\":\"浅拷贝（Shallow Copy）\",\"t\":[\"只复制对象的值类型字段，引用类型只复制引用不复制引用的对象（即复制地址）\",\"MemberwiseClone() 方法是浅拷贝（微软关于 MemberwiseClone() 的介绍）\",\"浅拷贝\"]},\"119\":{\"h\":\"浅拷贝引用类型会出现的错误\",\"t\":[\"工作经历类\",\"Class WorkExperience { private string workDate; public string WorkDate { get { return workDate; } set { workDate = value; } } private string company; public string Company { get { return company; } set { company = value; } } } \",\"简历类\",\"// 简历 class Resume:ICloneable { private string name; private string sex; private string age; private WorkExperience work; // 引用\\\"工作经历\\\"对象 public Resume(string name) { this.name = name; work = new WorkExperience(); // 在“简历”类实例化时同时实例化“工作经历” } // 设置个人信息： public void SetPersonalInfo(string sex,string age) { this.sex = sex; this.age = age; } // 设置工作经历 public void SetWorkExperience（string workDate，string company) { work.WorkDate = workDate; work.Company = company; // 调用此方法时，给对象的两属性赋值 } // 显示 public void Display() { Console.WriteLine(\\\"{0} {1} {2}\\\", name, sex, age); Console.WriteLine(\\\"工作经历: {0} {1}\\\", work.WorkDate, work.Company; } public Object Clone() { return (Object)this.MemberwiseClone(); } } \",\"客户端调用代码\",\"static void Main（string[] args） { Resume a = new Resume(\\\"大鸟\\\"); a.SetPersonalInfo(\\\"男\\\", \\\"29\\\"); a.SetWorkExperience(\\\"1998-2000\\\", \\\"XX公司\\\") Resume b = （Resume）a.Clone(); b.setWorkExperience(\\\"1998-2006\\\", \\\"YY企业\\\") Resume c = （Resume）a.Clone(); c.SetPersonalInfo(\\\"男\\\",\\\"24\\\"); c.SetWorkExperience(\\\"1998-2003\\\", \\\"ZZ企业\\\"); a.Display(); b.Display(); c.Display(); Console.Read(); } \",\"结果显示\",\"大鸟 男 29 工作经历 1998-2003 ZZ公司 大鸟 男 29 工作经历 1998-2003 ZZ公司 大鸟 男 24 工作经历 1998-2003 ZZ公司 \",\"从结果显示我们可以看到，由于浅复制是浅表复制，所以对于值类型，没什么问题（如 c.Display()）；对于引用类型，只是复制了引用，引用的对象还是指向原来的对象，所以给 a, b, c 三个引用设置‘工作经历’，却同时看到三个引用都是最后一次设置，因为三个引用都指向了同一个对象。\"]},\"120\":{\"h\":\"深拷贝（Deep Copy）\",\"t\":[\"不仅复制值类型字段，而且复制引用的对象\",\"把引用对象的变量指向复制过的新对象，而不是原有的被引用对象\",\"深拷贝\"]},\"121\":{\"h\":\"实现深拷贝\",\"t\":[\"实现深拷贝\",\"简历和工作经历类：\",\"// 简历 public class Resume : ICloneable { public string Name { get; set; } private WorkExperience work; public void SetWorkExperience(string workDate, string company) { work.WorkDate = workDate; work.Company = company; } public void Display() { Console.WriteLine( $\\\"{ Name } Worded in { work.Company } from { work.WorkDate }.\\\"); } public Resume(string name) { Name = name; work = new WorkExperience(); } // 调用私有的构造方法，让“工作经历”克隆完成，最终返回一个深复制的简历对象 public object Clone() { Resume cloned = new Resume(this.Name); cloned.work = (WorkExperience)this.work.Clone(); // 克隆工作经历 return cloned; } } // 工作经历 public class WorkExperience : ICloneable // 让“工作经历”实现 ICloneable 接口 { public String WorkDate { get; set; } public String Company { get; set; } public object Clone() // 让“工作经历”类实现克隆方法 { return this.MemberwiseClone(); } } \",\"主程序调用：\",\"public class Program { static void Main(string[] args) { Resume resume = new Resume(\\\"Jack\\\"); resume.SetWorkExperience(\\\"2012-2015\\\", \\\"XX公司\\\"); Resume cloned = (Resume)resume.Clone(); cloned.SetWorkExperience(\\\"2015-2018\\\", \\\"YY公司\\\"); resume.Display(); cloned.Display(); } } \",\"程序运行结果：\",\"Jack worked in XX公司 from 2012-2015 Jack worked in YY公司 from 2015-2018 \"]},\"122\":{\"h\":\"JavaScript 继承机制——原型链\",\"t\":[\"参考文章：阮一峰《Javascript 继承机制的设计思想》\",\"JavaScript继承机制——原型链\",\"JavaScript 的创始人 Brendan Eich 在开发 JavaScript 这个使得浏览器可以与网页互动的脚本易语言时，正是面向对象编程（object-oriented programming）最兴盛的时期，C++ 是当时最流行的语言，而 Java 语言的1.0版即将于第二年推出，Sun公司正在大肆造势。\",\"Brendan Eich 无疑受到了影响，Javascript 里面所有的数据类型都是对象（object），这一点与 Java 非常相似。但是，他随即就遇到了一个难题，到底要不要设计\\\"继承\\\"机制呢？如果真的是一种简易的脚本语言，其实不需要有\\\"继承\\\"机制。但是，Javascript 里面都是对象，必须有一种机制，将所有对象联系起来。所以，Brendan Eich 最后还是设计了\\\"继承\\\"。但是，他不打算引入\\\"类\\\"（class）的概念，因为一旦有了\\\"类\\\"，Javascript 就是一种完整的面向对象编程语言了，这好像有点太正式了，而且增加了初学者的入门难度。他考虑到，C++ 和 Java 语言都使用 new 命令，生成实例。因此，他就把new命令引入了 Javascript，用来从原型对象生成一个实例对象。但是，Javascript 没有\\\"类\\\"，怎么来表示原型对象呢？\",\"这时，他想到 C++ 和 Java 使用 new 命令时，都会调用\\\"类\\\"的构造函数（constructor）。他就做了一个简化的设计，在 Javascript 语言中，new 命令后面跟的不是类，而是构造函数。\",\"举例来说，现在有一个叫做 DOG 的构造函数，表示狗对象的原型。\",\"function DOG(name){ this.name = name; } \",\"对这个构造函数使用 new，就会生成一个 DOG 对象的实例。\",\"var dogA = new DOG('大毛'); alert(dogA.name); // 大毛 \",\"注意构造函数中的 this 关键字，它就代表了新创建的实例对象。\",\"但是用构造函数生成实例对象，有一个缺点，那就是无法共享属性和方法。比如，在 DOG 对象的构造函数中，设置一个实例对象的共有属性 species。然后，生成两个实例对象：\",\"function DOG(name){ this.name = name; this.species = '犬科'; } var dogA = new DOG('大毛'); var dogB = new DOG('二毛'); \",\"这两个对象的 species 属性是独立的，修改其中一个，不会影响到另一个。\",\"dogA.species = '猫科'; alert(dogB.species); // 显示\\\"犬科\\\"，不受dogA的影响 \",\"考虑到这一点，Brendan Eich 决定为构造函数设置一个 prototype 属性。\",\"这个属性包含一个对象（以下简称\\\"prototype 对象\\\"），所有实例对象需要共享的属性和方法，都放在这个对象里面；那些不需要共享的属性和方法，就放在构造函数里面。\",\"实例对象一旦创建，将自动引用 prototype 对象的属性和方法。也就是说，实例对象的属性和方法，分成两种，一种是本地的，另一种是引用的。\",\"还是以 DOG 构造函数为例，现在用 prototype 属性进行改写：\",\"function DOG(name){ this.name = name; } DOG.prototype = { species : '犬科' }; var dogA = new DOG('大毛'); var dogB = new DOG('二毛'); alert(dogA.species); // 犬科 alert(dogB.species); // 犬科 \",\"现在，species 属性放在 prototype 对象里，是两个实例对象共享的。只要修改了 prototype 对象，就会同时影响到两个实例对象。\",\"DOG.prototype.species = '猫科'; alert(dogA.species); // 猫科 alert(dogB.species); // 猫科 \"]},\"123\":{\"h\":\"数据模型缓存\",\"t\":[\"数据模型缓存\",\"实现示例：创建一个抽象类 CloneableModel，并让类 User、Product 来扩展它；然后定义 ModelCache 类，该类把 CloneableModel 对象存储在 HashTable 中，并在请求的时候返回对应类型的克隆对象。\",\"数据模型缓存\",\"CloneableModel类定义及扩展：\",\"using System; // 可克隆模型 // 实现 ICloneable 接口 public abstract class CloneableModel : ICloneable { public object Clone() { return this.MemberWiseClone(); } } // 用户 public class User : CloneableModel { public string Id { get; set; } public string Name { get; set; } } // 商品 public class Product : CloneableModel { public string Id { get; set; } public string Name { get; set; } public string Price { get; set; } } \",\"ModelICache类定义：\",\"using System; using System.Collections; public class ModelCache { static Hashtable modelMap = new Hashtable(); // 将模型类对象存储到 Hashtable 中 // 实际开发中，模型对象从数据库中取出 public static void Load() { User user = new User { Id = \\\"#1001\\\", Name = \\\"John Doe\\\" }; modelMap.Add(user.Id, user); Product product = new Product { Id = \\\"#2001\\\", Name = \\\"Illustrated C# 2012\\\", Price = \\\"￥89.00\\\" }; modelMap.Add(product.Id, product); Console.WriteLine(\\\"Db Models Cache loading ... Down!\\\"); } public static T GetModel<T>(string id) where T : class, new() { CloneableModel cache = (CloneableModel)modelMap[id]; return cache != null ? (T)cache.Clone() // 从 cache 中克隆 model : null; } } \",\"主程序调用：\",\"class Program { static void Main(string[] args) { ModelCache.Load(); User userCloned = ModelCache.GetModel<User>(\\\"#1001\\\"); Product productCloned = ModelCache.GetModel<Product>(\\\"#2001\\\"); if (userCloned == null || productCloned == null) return; Console.WriteLine( $\\\"ID: { userCloned.Id } Name: { userCloned.Name }\\\"); Console.WriteLine( $\\\"ID: { productCloned.Id } Name: { productCloned.Name } Price: { productCloned.Price }\\\"); } } \",\"程序运行结果：\",\"Db Models Cache Loading ... Down! ID: #1001 Name: John Doe ID: #2001 Name: Illustrated C# 2012 Price: ￥89.00 \"]},\"124\":{\"h\":\"优点\",\"t\":[\"隐藏了对象的创建细节，对有些初始化需要占用很多资源的类来说，对性能也有很大提高。\",\"在需要新对象时，可以使用Clone来快速创建创建一个，而不用使用new来构建。\"]},\"125\":{\"h\":\"缺点\",\"t\":[\"每一个类都需要一个Clone方法，而且必须通盘考虑。对于深拷贝来说，每个关联到的类型都不许实现IClonable接口，并且每增加或修改一个字段是都需要更新Clone方法。\"]},\"126\":{\"h\":\"适用场景\",\"t\":[\"资源优化场景：类初始化需要消化非常多的资源，这个资源包括数据、硬件资源等。\",\"性能和安全要求的场景：通过new产生一个对象需要非常繁琐的数据准备或访问权限，则可以使用原型模式。\",\"一个对象多个修改者的场景：一个对象需要提供给其他对象访问，而且各个调用者可能都需要修改其值时，可以考虑使用原型模式拷贝多个对象供调用者使用。\"]},\"127\":{\"c\":[\"技术文章\"]},\"128\":{\"c\":[\"ASP.NET\",\"C#\",\"设计模式\",\"原型模式\",\"原型链\",\"Hashtable\"]},\"129\":{\"h\":\"vue常用自定义指令\",\"t\":[\"Vue 自定义指令有全局注册和局部注册两种方式。先来看看注册全局指令的方式，通过 Vue.directive( id, [definition] ) 方式注册全局指令。然后在入口文件中进行 Vue.use() 调用。\",\"批量注册指令，新建 directives/index.js 文件\",\"import copy from './copy' import longpress from './longpress' // 自定义指令 const directives = { copy, longpress, } export default { install(Vue) { Object.keys(directives).forEach((key) => { Vue.directive(key, directives[key]) }) } } \",\"在 main.js 引入并调用\",\"import Vue from 'vue' import Directives from './directives' Vue.use(Directives) \",\"指令定义函数提供了几个钩子函数（可选）：\",\"bind: 只调用一次，指令第一次绑定到元素时调用，可以定义一个在绑定时执行一次的初始化动作。\",\"inserted: 被绑定元素插入父节点时调用（父节点存在即可调用，不必存在于 document 中）。\",\"update: 被绑定元素所在的模板更新时调用，而不论绑定值是否变化。通过比较更新前后的绑定值。\",\"componentUpdated: 被绑定元素所在模板完成一次更新周期时调用。\",\"unbind: 只调用一次， 指令与元素解绑时调用。\",\"下面分享几个实用的 Vue 自定义指令\",\"复制粘贴指令 v-copy\",\"长按指令 v-longpress\",\"输入框防抖指令 v-debounce\",\"禁止表情及特殊字符 v-emoji\",\"图片懒加载 v-lazyload\",\"权限校验指令 v-permission\",\"实现页面水印 v-waterMarker\",\"拖拽指令 v-draggable\"]},\"130\":{\"h\":\"需求\",\"t\":[\"实现一键复制文本内容，用于鼠标右键粘贴。\"]},\"131\":{\"h\":\"思路\",\"t\":[\"动态创建 textarea 标签，并设置 readOnly 属性及移出可视区域\",\"将要复制的值赋给 textarea 标签的 value 属性，并插入到 body\",\"选中值 textarea 并复制\",\"将 body 中插入的 textarea 移除\",\"在第一次调用时绑定事件，在解绑时移除事件\",\"const copy = { bind(el, { value }) { el.$value = value el.handler = () => { if (!el.$value) { // 值为空的时候，给出提示。可根据项目UI仔细设计 console.log('无复制内容') return } // 动态创建 textarea 标签 const textarea = document.createElement('textarea') // 将该 textarea 设为 readonly 防止 iOS 下自动唤起键盘，同时将 textarea 移出可视区域 textarea.readOnly = 'readonly' textarea.style.position = 'absolute' textarea.style.left = '-9999px' // 将要 copy 的值赋给 textarea 标签的 value 属性 textarea.value = el.$value // 将 textarea 插入到 body 中 document.body.appendChild(textarea) // 选中值并复制 textarea.select() const result = document.execCommand('Copy') if (result) { console.log('复制成功') // 可根据项目UI仔细设计 } document.body.removeChild(textarea) } // 绑定点击事件，就是所谓的一键 copy 啦 el.addEventListener('click', el.handler) }, // 当传进来的值更新的时候触发 componentUpdated(el, { value }) { el.$value = value }, // 指令与元素解绑的时候，移除事件绑定 unbind(el) { el.removeEventListener('click', el.handler) } } export default copy \"]},\"132\":{\"h\":\"使用\",\"t\":[\"给 Dom 加上 v-copy 及复制的文本即可\",\"<template> <button v-copy=\\\"copyText\\\">复制</button> </template> <script> export default { data() { return { copyText: 'a copy directives' } } } </script> \"]},\"133\":{\"h\":\"需求\",\"t\":[\"实现长按，用户需要按下并按住按钮几秒钟，触发相应的事件\"]},\"134\":{\"h\":\"思路\",\"t\":[\"创建一个计时器， 2 秒后执行函数\",\"当用户按下按钮时触发 mousedown 事件，启动计时器；用户松开按钮时调用 mouseout 事件。\",\"如果 mouseup 事件 2 秒内被触发，就清除计时器，当作一个普通的点击事件\",\"如果计时器没有在 2 秒内清除，则判定为一次长按，可以执行关联的函数。\",\"在移动端要考虑 touchstart，touchend 事件\",\"const longpress = { bind(el, binding, vNode) { if (typeof binding.value !== 'function') { throw 'callback must be a function' } // 定义变量 let pressTimer = null // 创建计时器（ 2秒后执行函数 ） let start = (e) => { if (e.type === 'click' && e.button !== 0) { return } if (pressTimer === null) { pressTimer = setTimeout(() => { handler() }, 2000) } } // 取消计时器 let cancel = (e) => { if (pressTimer !== null) { clearTimeout(pressTimer) pressTimer = null } } // 运行函数 const handler = (e) => { binding.value(e) } // 添加事件监听器 el.addEventListener('mousedown', start) el.addEventListener('touchstart', start) // 取消计时器 el.addEventListener('click', cancel) el.addEventListener('mouseout', cancel) el.addEventListener('touchend', cancel) el.addEventListener('touchcancel', cancel) }, // 当传进来的值更新的时候触发 componentUpdated(el, { value }) { el.$value = value }, // 指令与元素解绑的时候，移除事件绑定 unbind(el) { el.removeEventListener('click', el.handler) } } export default longpress \"]},\"135\":{\"h\":\"使用\",\"t\":[\"给 Dom 加上 v-longpress 及回调函数即可\",\"<template> <button v-longpress=\\\"longpress\\\">长按</button> </template> <script> export default { methods: { longpress() { alert('长按指令生效') } } } </script> \"]},\"136\":{\"h\":\"背景\",\"t\":[\"在开发中，有些提交保存按钮有时候会在短时间内被点击多次，这样就会多次重复请求后端接口，造成数据的混乱，比如新增表单的提交按钮，多次点击就会新增多条重复的数据。\"]},\"137\":{\"h\":\"需求\",\"t\":[\"防止按钮在短时间内被多次点击，使用防抖函数限制规定时间内只能点击一次。\"]},\"138\":{\"h\":\"思路\",\"t\":[\"定义一个延迟执行的方法，如果在延迟时间内再调用该方法，则重新计算执行时间。\",\"将时间绑定在 click 方法上。\",\"const debounce = { inserted(el, binding) { let timer el.addEventListener('keyup', () => { if (timer) { clearTimeout(timer) } timer = setTimeout(() => { binding.value() }, 1000) }) } } export default debounce \"]},\"139\":{\"h\":\"使用\",\"t\":[\"给 Dom 加上 v-debounce 及回调函数即可\",\"<template> <button v-debounce=\\\"debounceClick\\\">防抖</button> </template> <script> export default { methods: { debounceClick() { console.log('只触发一次') } } } </script> \"]},\"140\":{\"h\":\"背景\",\"t\":[\"开发中遇到的表单输入，往往会有对输入内容的限制，比如不能输入表情和特殊字符，只能输入数字或字母等。\",\"我们常规方法是在每一个表单的 on-change 事件上做处理。\",\"<template> <input v-model=\\\"note\\\" type=\\\"text\\\" @change=\\\"validateEmoji\\\" /> </template> <script> export default { methods: { validateEmoji() { const reg = /[^u4E00-u9FA5|d|a-zA-Z|rns,.?!，。？！…—&$=()-+/*{}[]]|s/g this.note = this.note.replace(reg, '') } } } </script> \",\"这样代码量比较大而且不好维护，所以我们需要自定义一个指令来解决这问题。\"]},\"141\":{\"h\":\"需求\",\"t\":[\"根据正则表达式，设计自定义处理表单输入规则的指令，下面以禁止输入表情和特殊字符为例。\",\"let findEle = (parent, type) => { return parent.tagName.toLowerCase() === type ? parent : parent.querySelector(type) } const trigger = (el, type) => { const e = document.createEvent('htmlEvents') e.initEvent(type, true, true) el.dispatchEvent(e) } const emoji = { bind(el, binding, vNode) { // 正则规则可根据需求自定义 var regRule = /[^u4E00-u9FA5|d|a-zA-Z|rns,.?!，。？！…—&$=()-+/*{}[]]|s/g let $inp = findEle(el, 'input') el.$inp = $inp $inp.handle = function () { let val = $inp.value $inp.value = val.replace(regRule, '') trigger($inp, 'input') } $inp.addEventListener('keyup', $inp.handle) }, unbind(el) { el.$inp.removeEventListener('keyup', el.$inp.handle) } } export default emoji \"]},\"142\":{\"h\":\"使用\",\"t\":[\"将需要校验的输入框加上 v-emoji 即可\",\"<template> <input v-model=\\\"note\\\" v-emoji type=\\\"text\\\" /> </template> \"]},\"143\":{\"h\":\"背景\",\"t\":[\"在类电商类项目，往往存在大量的图片，如 banner 广告图，菜单导航图，美团等商家列表头图等。图片众多以及图片体积过大往往会影响页面加载速度，造成不良的用户体验，所以进行图片懒加载优化势在必行。\"]},\"144\":{\"h\":\"需求\",\"t\":[\"实现一个图片懒加载指令，只加载浏览器可见区域的图片。\"]},\"145\":{\"h\":\"思路\",\"t\":[\"图片懒加载的原理主要是判断当前图片是否到了可视区域这一核心逻辑实现的\",\"拿到所有的图片 Dom ，遍历每个图片判断当前图片是否到了可视区范围内\",\"如果到了就设置图片的 src 属性，否则显示默认图片\",\"图片懒加载有两种方式可以实现，一是绑定 scroll 事件进行监听，二是使用 IntersectionObserver 判断图片是否到了可视区域，但是有浏览器兼容性问题。\",\"下面封装一个懒加载指令兼容两种方法，判断浏览器是否支持 IntersectionObserver API，如果支持就使用 IntersectionObserver 实现懒加载，否则则使用 srcoll 事件监听 + 节流的方法实现。\",\"const lazyload = { // install方法 install(Vue, options) { const defaultSrc = options.default Vue.directive('lazyload', { bind(el, binding) { lazyload.init(el, binding.value, defaultSrc) }, inserted(el) { if (IntersectionObserver) { lazyload.observe(el) } else { lazyload.listenerScroll(el) } }, }) }, // 初始化 init(el, val, def) { el.setAttribute('data-src', val) el.setAttribute('src', def) }, // 利用IntersectionObserver监听el observe(el) { var io = new IntersectionObserver((entries) => { const realSrc = el.dataset.src if (entries[0].isIntersecting) { if (realSrc) { el.src = realSrc el.removeAttribute('data-src') } } }) io.observe(el) }, // 监听scroll事件 listenerScroll(el) { const handler = lazyload.throttle(lazyload.load, 300) lazyload.load(el) window.addEventListener('scroll', () => { handler(el) }) }, // 加载真实图片 load(el) { const windowHeight = document.documentElement.clientHeight const elTop = el.getBoundingClientRect().top const elBtm = el.getBoundingClientRect().bottom const realSrc = el.dataset.src if (elTop - windowHeight < 0 && elBtm > 0) { if (realSrc) { el.src = realSrc el.removeAttribute('data-src') } } }, // 节流 throttle(fn, delay) { let timer let prevTime return function (...args) { const currentTime = Date.now() const context = this if (!prevTime) prevTime = currentTime clearTimeout(timer) if (currentTime - prevTime > delay) { prevTime = currentTime fn.apply(context, args) clearTimeout(timer) return } timer = setTimeout(function () { prevTime = Date.now() timer = null fn.apply(context, args) }, delay) } } } export default lazyload \"]},\"146\":{\"h\":\"使用\",\"t\":[\"将组件内 标签的 src 换成 v-lazyload\",\"<img v-lazyload=\\\"xxx.jpg\\\" /> \"]},\"147\":{\"h\":\"背景\",\"t\":[\"在一些后台管理系统，我们可能需要根据用户角色进行一些操作权限的判断，很多时候我们都是粗暴地给一个元素添加 v-if / v-show 来进行显示隐藏，但如果判断条件繁琐且多个地方需要判断，这种方式的代码不仅不优雅而且冗余。针对这种情况，我们可以通过全局自定义指令来处理。\"]},\"148\":{\"h\":\"需求\",\"t\":[\"自定义一个权限指令，对需要权限判断的 Dom 进行显示隐藏。\"]},\"149\":{\"h\":\"思路\",\"t\":[\"自定义一个权限数组\",\"判断用户的权限是否在这个数组内，如果是则显示，否则则移除 Dom\",\"function checkArray(key) { let arr = ['1', '2', '3', '4'] let index = arr.indexOf(key) if (index > -1) { return true // 有权限 } else { return false // 无权限 } } const permission = { inserted(el, binding) { // 获取到 v-permission的值 let permission = binding.value if (permission) { let hasPermission = checkArray(permission) if (!hasPermission) { // 没有权限 移除Dom元素 el.parentNode && el.parentNode.removeChild(el) } } } } export default permission \"]},\"150\":{\"h\":\"使用\",\"t\":[\"给 v-permission 赋值判断即可\",\"<div class=\\\"btn\\\"> <!-- 显示 --> <button v-permission=\\\"'1'\\\">权限按钮1</button> <!-- 不显示 --> <button v-permission=\\\"'10'\\\">权限按钮2</button> </div> \"]},\"151\":{\"h\":\"需求\",\"t\":[\"给整个页面添加背景水印\"]},\"152\":{\"h\":\"思路\",\"t\":[\"使用 canvas 特性生成 base64 格式的图片文件，设置其字体大小，颜色等。\",\"将其设置为背景图片，从而实现页面或组件水印效果\",\"function addWaterMarker(str, parentNode, font, textColor) { // 水印文字，父元素，字体，文字颜色 var can = document.createElement('canvas') parentNode.appendChild(can) can.width = 200 can.height = 150 can.style.display = 'none' var cans = can.getContext('2d') cans.rotate((-20 * Math.PI) / 180) cans.font = font || '16px Microsoft JhengHei' cans.fillStyle = textColor || 'rgba(180, 180, 180, 0.3)' cans.textAlign = 'left' cans.textBaseline = 'Middle' cans.fillText(str, can.width / 10, can.height / 2) parentNode.style.backgroundImage = 'url(' + can.toDataURL('image/png') + ')' } const waterMarker = { bind: function (el, binding) { addWaterMarker(binding.value.text, el, binding.value.font, binding.value.textColor) } } export default waterMarker \",\"使用，设置水印文案，颜色，字体大小即可\",\"<template> <div v-waterMarker=\\\"{text:'版权所有',textColor:'rgba(180, 180, 180, 0.4)'}\\\"></div> </template> \"]},\"153\":{\"h\":\"需求\",\"t\":[\"实现一个拖拽指令，可在页面可视区域任意拖拽元素。\"]},\"154\":{\"h\":\"思路\",\"t\":[\"设置需要拖拽的元素为相对定位，其父元素为绝对定位。\",\"鼠标按下(onmousedown)时记录目标元素当前的 left 和 top 值。\",\"鼠标移动(onmousemove)时计算每次移动的横向距离和纵向距离的变化值，并改变元素的 left 和 top 值\",\"鼠标松开(onmouseup)时完成一次拖拽\",\"const draggable = { inserted: function (el) { el.style.cursor = 'move' el.onmousedown = function (e) { let disX = e.pageX - el.offsetLeft let disY = e.pageY - el.offsetTop document.onmousemove = function (e) { let x = e.pageX - disX let y = e.pageY - disY let maxX = document.body.clientWidth - parseInt(window.getComputedStyle(el).width) let maxY = document.body.clientHeight - parseInt(window.getComputedStyle(el).height) if (x < 0) { x = 0 } else if (x > maxX) { x = maxX } if (y < 0) { y = 0 } else if (y > maxY) { y = maxY } el.style.left = x + 'px' el.style.top = y + 'px' } document.onmouseup = function () { document.onmousemove = document.onmouseup = null } } } } export default draggable \"]},\"155\":{\"h\":\"使用\",\"t\":[\"在 Dom 上加上 v-draggable 即可\",\"<template> <div v-draggable class=\\\"el-dialog\\\" ></div> </template> \"]},\"156\":{\"c\":[\"技术文章\"]},\"157\":{\"c\":[\"Vue\",\"Vue Directive\"]},\"158\":{\"h\":\"Article\"}},\"dirtCount\":0,\"index\":[[\"版权所有\",{\"1\":{\"152\":1}}],[\"版本和\",{\"1\":{\"106\":1}}],[\"版本对应关系\",{\"0\":{\"106\":1}}],[\"版本与\",{\"0\":{\"106\":1}}],[\"版本后废弃了\",{\"1\":{\"96\":1}}],[\"版本的对应关系\",{\"1\":{\"106\":1}}],[\"版本的还是最初的版本\",{\"1\":{\"88\":1}}],[\"版本的叫\",{\"1\":{\"88\":1}}],[\"颜色\",{\"1\":{\"152\":1}}],[\"颜色等\",{\"1\":{\"152\":1}}],[\"水印文字\",{\"1\":{\"152\":1}}],[\"格式的图片文件\",{\"1\":{\"152\":1}}],[\"赋值判断即可\",{\"1\":{\"150\":1}}],[\"赋值操作\",{\"1\":{\"112\":1}}],[\"很多时候我们都是粗暴地给一个元素添加\",{\"1\":{\"147\":1}}],[\"很多钩子都是以\",{\"1\":{\"101\":1}}],[\"换成\",{\"1\":{\"146\":1}}],[\"节流\",{\"1\":{\"145\":1}}],[\"节流的方法实现\",{\"1\":{\"145\":1}}],[\"节点或组件实例的数组\",{\"1\":{\"95\":1}}],[\"节点回溯\",{\"1\":{\"60\":1}}],[\"拿到所有的图片\",{\"1\":{\"145\":1}}],[\"造成不良的用户体验\",{\"1\":{\"143\":1}}],[\"造成数据的混乱\",{\"1\":{\"136\":1}}],[\"美团等商家列表头图等\",{\"1\":{\"143\":1}}],[\"菜单导航图\",{\"1\":{\"143\":1}}],[\"广告图\",{\"1\":{\"143\":1}}],[\"queryselector\",{\"1\":{\"141\":1}}],[\"quotes\",{\"1\":{\"45\":1}}],[\"quote\",{\"1\":{\"45\":4}}],[\"^u4e00\",{\"1\":{\"140\":1,\"141\":1}}],[\"往往存在大量的图片\",{\"1\":{\"143\":1}}],[\"往往会有对输入内容的限制\",{\"1\":{\"140\":1}}],[\"往节点中获取\",{\"1\":{\"74\":1}}],[\"及回调函数即可\",{\"1\":{\"135\":1,\"139\":1}}],[\"及复制的文本即可\",{\"1\":{\"132\":1}}],[\"取消计时器\",{\"1\":{\"134\":2}}],[\"秒内清除\",{\"1\":{\"134\":1}}],[\"秒内被触发\",{\"1\":{\"134\":1}}],[\"秒后执行函数\",{\"1\":{\"134\":1}}],[\"启动计时器\",{\"1\":{\"134\":1}}],[\"触发相应的事件\",{\"1\":{\"133\":1}}],[\"触发事件时\",{\"1\":{\"76\":1}}],[\"啦\",{\"1\":{\"131\":1}}],[\"防止按钮在短时间内被多次点击\",{\"1\":{\"137\":1}}],[\"防止\",{\"1\":{\"131\":1}}],[\"给整个页面添加背景水印\",{\"1\":{\"151\":1}}],[\"给\",{\"1\":{\"132\":1,\"135\":1,\"139\":1,\"150\":1}}],[\"给出提示\",{\"1\":{\"131\":1}}],[\"给对象的两属性赋值\",{\"1\":{\"119\":1}}],[\"选中值并复制\",{\"1\":{\"131\":1}}],[\"选中值\",{\"1\":{\"131\":1}}],[\"选择要观察突变的节点\",{\"1\":{\"109\":3}}],[\"选择对象\",{\"1\":{\"85\":1}}],[\"选择兄弟节点\",{\"1\":{\"62\":1}}],[\"选择\",{\"1\":{\"59\":1}}],[\"选择被禁用\",{\"1\":{\"58\":1}}],[\"选择所有被选中的元素\",{\"1\":{\"58\":1}}],[\"选择所有节点\",{\"1\":{\"56\":1}}],[\"选择第一个\",{\"1\":{\"56\":1}}],[\"动态创建\",{\"1\":{\"131\":2}}],[\"动态指定\",{\"1\":{\"90\":1}}],[\"思路\",{\"0\":{\"131\":1,\"134\":1,\"138\":1,\"145\":1,\"149\":1,\"152\":1,\"154\":1}}],[\"需求\",{\"0\":{\"130\":1,\"133\":1,\"137\":1,\"141\":1,\"144\":1,\"148\":1,\"151\":1,\"153\":1}}],[\"需要进行地址转换\",{\"1\":{\"112\":1}}],[\"需要注意的是由于\",{\"1\":{\"103\":1}}],[\"需要注意的是指令的参数\",{\"1\":{\"97\":1}}],[\"需要使用一些等价方式来实现\",{\"1\":{\"97\":1}}],[\"需要使用箭头函数来实现\",{\"1\":{\"92\":1}}],[\"需要拆开写法才行\",{\"1\":{\"48\":1}}],[\"需要单独安装\",{\"1\":{\"8\":1}}],[\"拖拽指令\",{\"1\":{\"129\":1}}],[\"权限校验指令\",{\"1\":{\"129\":1}}],[\"图片众多以及图片体积过大往往会影响页面加载速度\",{\"1\":{\"143\":1}}],[\"图片懒加载有两种方式可以实现\",{\"1\":{\"145\":1}}],[\"图片懒加载的原理主要是判断当前图片是否到了可视区域这一核心逻辑实现的\",{\"1\":{\"145\":1}}],[\"图片懒加载\",{\"1\":{\"129\":1}}],[\"图像控件是\",{\"1\":{\"58\":1}}],[\"长按指令生效\",{\"1\":{\"135\":1}}],[\"长按指令\",{\"1\":{\"129\":1}}],[\"引入并调用\",{\"1\":{\"129\":1}}],[\"引用的对象还是指向原来的对象\",{\"1\":{\"119\":1}}],[\"引用\",{\"1\":{\"119\":1}}],[\"引用类型只复制引用不复制引用的对象\",{\"1\":{\"118\":1}}],[\"引用类型\",{\"1\":{\"112\":2}}],[\"引用信息将是包含\",{\"1\":{\"95\":1}}],[\"引用信息将会注册在父组件的\",{\"1\":{\"95\":1}}],[\"引用就指向组件\",{\"1\":{\"95\":1}}],[\"引用指向的就是\",{\"1\":{\"95\":1}}],[\"批量注册指令\",{\"1\":{\"129\":1}}],[\"方式注册全局指令\",{\"1\":{\"129\":1}}],[\"方法上\",{\"1\":{\"138\":1}}],[\"方法是浅拷贝\",{\"1\":{\"118\":1}}],[\"方法的返回值是不同的\",{\"1\":{\"81\":1}}],[\"方法\",{\"1\":{\"48\":1,\"55\":1,\"81\":1,\"102\":1,\"117\":2}}],[\"方法多种多样\",{\"1\":{\"0\":1}}],[\"自定义一个权限数组\",{\"1\":{\"149\":1}}],[\"自定义一个权限指令\",{\"1\":{\"148\":1}}],[\"自定义指令\",{\"1\":{\"129\":2}}],[\"自定义指令有全局注册和局部注册两种方式\",{\"1\":{\"129\":1}}],[\"自从有了flex之后\",{\"1\":{\"48\":1}}],[\"性能和安全要求的场景\",{\"1\":{\"126\":1}}],[\"硬件资源等\",{\"1\":{\"126\":1}}],[\"资源优化场景\",{\"1\":{\"126\":1}}],[\"每个关联到的类型都不许实现iclonable接口\",{\"1\":{\"125\":1}}],[\"每一个类都需要一个clone方法\",{\"1\":{\"125\":1}}],[\"缺点\",{\"0\":{\"125\":1}}],[\"优点\",{\"0\":{\"124\":1}}],[\"￥89\",{\"1\":{\"123\":2}}],[\"模型对象从数据库中取出\",{\"1\":{\"123\":1}}],[\"商品\",{\"1\":{\"123\":1}}],[\"该类把\",{\"1\":{\"123\":1}}],[\"该地址已经复制\",{\"1\":{\"85\":1}}],[\"数据模型缓存\",{\"0\":{\"123\":1},\"1\":{\"123\":2}}],[\"数组用于返回结果\",{\"1\":{\"0\":1}}],[\"数组去重\",{\"0\":{\"0\":1}}],[\"构造函数为例\",{\"1\":{\"122\":1}}],[\"构建render树\",{\"1\":{\"26\":1}}],[\"决定为构造函数设置一个\",{\"1\":{\"122\":1}}],[\"考虑到这一点\",{\"1\":{\"122\":1}}],[\"猫科\",{\"1\":{\"122\":4}}],[\"犬科\",{\"1\":{\"122\":5}}],[\"举例来说\",{\"1\":{\"122\":1}}],[\"怎么来表示原型对象呢\",{\"1\":{\"122\":1}}],[\"怎么这描述似曾相识\",{\"1\":{\"48\":1}}],[\"他就做了一个简化的设计\",{\"1\":{\"122\":1}}],[\"他就把new命令引入了\",{\"1\":{\"122\":1}}],[\"他想到\",{\"1\":{\"122\":1}}],[\"他考虑到\",{\"1\":{\"122\":1}}],[\"他不打算引入\",{\"1\":{\"122\":1}}],[\"他随即就遇到了一个难题\",{\"1\":{\"122\":1}}],[\"必须有一种机制\",{\"1\":{\"122\":1}}],[\"必需写成\",{\"1\":{\"93\":1}}],[\"机制\",{\"1\":{\"122\":1}}],[\"机制呢\",{\"1\":{\"122\":1}}],[\"非常相似\",{\"1\":{\"122\":1}}],[\"非空元素\",{\"1\":{\"59\":1}}],[\"无权限\",{\"1\":{\"149\":1}}],[\"无复制内容\",{\"1\":{\"131\":1}}],[\"无疑受到了影响\",{\"1\":{\"122\":1}}],[\"无论成功或失败\",{\"1\":{\"78\":1}}],[\"语言中\",{\"1\":{\"122\":1}}],[\"语言都使用\",{\"1\":{\"122\":1}}],[\"语言的1\",{\"1\":{\"122\":1}}],[\"语法为\",{\"1\":{\"100\":2}}],[\"语法\",{\"1\":{\"88\":1}}],[\"正则规则可根据需求自定义\",{\"1\":{\"141\":1}}],[\"正是面向对象编程\",{\"1\":{\"122\":1}}],[\"正在载入\",{\"1\":{\"77\":1}}],[\"阮一峰\",{\"1\":{\"122\":1}}],[\"克隆工作经历\",{\"1\":{\"121\":1}}],[\"克隆完成\",{\"1\":{\"121\":1}}],[\"深拷贝\",{\"0\":{\"120\":1},\"1\":{\"120\":1}}],[\"却同时看到三个引用都是最后一次设置\",{\"1\":{\"119\":1}}],[\"三个引用设置\",{\"1\":{\"119\":1}}],[\"三元运算符\",{\"1\":{\"102\":1}}],[\"微软关于\",{\"1\":{\"118\":1}}],[\"微软设计这个类的时候为了方便操作\",{\"1\":{\"117\":1}}],[\"浅拷贝引用类型会出现的错误\",{\"0\":{\"119\":1}}],[\"浅拷贝\",{\"0\":{\"118\":1},\"1\":{\"118\":1}}],[\"操作符以及\",{\"1\":{\"117\":1}}],[\"继承\",{\"1\":{\"122\":3}}],[\"继承机制的设计思想\",{\"1\":{\"122\":1}}],[\"继承机制\",{\"0\":{\"122\":1}}],[\"继承自对象\",{\"1\":{\"117\":1}}],[\"继续用grid来居中\",{\"1\":{\"48\":1}}],[\"继续用flex来居中\",{\"1\":{\"48\":1}}],[\"例\",{\"1\":{\"117\":1}}],[\"例如之前的文章\",{\"1\":{\"103\":1}}],[\"例如在组件中写了<demo\",{\"1\":{\"100\":1}}],[\"例如\",{\"1\":{\"95\":1,\"96\":2,\"100\":1,\"102\":1}}],[\"接口\",{\"1\":{\"117\":1,\"121\":1,\"123\":1}}],[\"接着将此容器利用text\",{\"1\":{\"48\":1}}],[\"接着让要居中的元素本身使用translatey的百分比来达成垂直居中的需求\",{\"1\":{\"48\":1}}],[\"接着在需要垂直居中的元素上设置margin\",{\"1\":{\"48\":1}}],[\"接着在需要垂直居中的元素上设定margin\",{\"1\":{\"48\":1}}],[\"接着在将居中元素的margin\",{\"1\":{\"48\":1}}],[\"接着再次部署\",{\"1\":{\"10\":1}}],[\"接着初始化命令\",{\"1\":{\"6\":1}}],[\"男\",{\"1\":{\"116\":5,\"119\":5}}],[\"大毛\",{\"1\":{\"122\":4}}],[\"大鸟\",{\"1\":{\"116\":4,\"119\":4}}],[\"大体思路就是把数据先定义好数据然后直接一个\",{\"1\":{\"93\":1}}],[\"工作经历类\",{\"1\":{\"119\":1}}],[\"工作经历\",{\"1\":{\"116\":4,\"119\":7,\"121\":4}}],[\"工具函数\",{\"0\":{\"73\":1,\"80\":1}}],[\"程序运行结果\",{\"1\":{\"115\":1,\"121\":1,\"123\":1}}],[\"程序开发应该掌握的各种设计模式\",{\"1\":{\"112\":1}}],[\"让\",{\"1\":{\"121\":3}}],[\"让一个原型克隆自身\",{\"1\":{\"115\":1}}],[\"让你的元素上方能产生固定百分比的距离\",{\"1\":{\"48\":1}}],[\"客户端调用代码\",{\"1\":{\"116\":1,\"119\":1}}],[\"客户类\",{\"1\":{\"115\":1}}],[\"客户网页都rwd\",{\"1\":{\"48\":1}}],[\"实际开发中\",{\"1\":{\"123\":1}}],[\"实际上由于\",{\"1\":{\"100\":1}}],[\"实例对象的属性和方法\",{\"1\":{\"122\":1}}],[\"实例对象一旦创建\",{\"1\":{\"122\":1}}],[\"实现懒加载\",{\"1\":{\"145\":1}}],[\"实现一个拖拽指令\",{\"1\":{\"153\":1}}],[\"实现一个图片懒加载指令\",{\"1\":{\"144\":1}}],[\"实现一键复制文本内容\",{\"1\":{\"130\":1}}],[\"实现长按\",{\"1\":{\"133\":1}}],[\"实现页面水印\",{\"1\":{\"129\":1}}],[\"实现示例\",{\"1\":{\"123\":1}}],[\"实现\",{\"1\":{\"121\":1,\"123\":1}}],[\"实现深拷贝\",{\"0\":{\"121\":1},\"1\":{\"121\":1}}],[\"实现了这个接口就是完成了原型模式\",{\"1\":{\"117\":1}}],[\"实现icloneable接口\",{\"0\":{\"117\":1},\"1\":{\"117\":1}}],[\"实现克隆的具体操作\",{\"1\":{\"115\":1}}],[\"声明克隆自身的接口\",{\"1\":{\"115\":1}}],[\"抽象原型类\",{\"1\":{\"115\":1}}],[\"申明抽象原型类和具体原型类\",{\"1\":{\"115\":1}}],[\"维基百科\",{\"1\":{\"113\":1}}],[\"都放在这个对象里面\",{\"1\":{\"122\":1}}],[\"都会调用\",{\"1\":{\"122\":1}}],[\"都会触发\",{\"1\":{\"100\":1}}],[\"都同时指向同一个堆里\",{\"1\":{\"112\":1}}],[\"垃圾回收机制\",{\"1\":{\"112\":1}}],[\"立即回收\",{\"1\":{\"112\":1}}],[\"立即执行表达式\",{\"1\":{\"102\":1}}],[\"效率低\",{\"1\":{\"112\":1}}],[\"效率高\",{\"1\":{\"112\":1}}],[\"效率\",{\"1\":{\"112\":1}}],[\"底下有关于\",{\"1\":{\"112\":1}}],[\"又会产生什么样的结果呢\",{\"1\":{\"112\":1}}],[\"又一个绝对定位的垂直居中的方案\",{\"1\":{\"48\":1}}],[\"答案是\",{\"1\":{\"112\":2}}],[\"现在\",{\"1\":{\"122\":1}}],[\"现在用\",{\"1\":{\"122\":1}}],[\"现在有一个叫做\",{\"1\":{\"122\":1}}],[\"现在进入正题如何在\",{\"1\":{\"96\":1}}],[\"现将本人学习心得分享与此以方便大家更好地学习掌握原型模式\",{\"1\":{\"112\":1}}],[\"恰巧看到设计模式中的原型模式与\",{\"1\":{\"112\":1}}],[\"监听scroll事件\",{\"1\":{\"145\":1}}],[\"监听新的性能条目\",{\"1\":{\"109\":1}}],[\"监听元素及其子元素的变化\",{\"1\":{\"109\":1}}],[\"监听其位置的变化\",{\"1\":{\"109\":1}}],[\"监听dom的变化\",{\"1\":{\"109\":1}}],[\"链接到一个回调\",{\"1\":{\"109\":2}}],[\"观察哪些突变\",{\"1\":{\"109\":3}}],[\"观察者的选项\",{\"1\":{\"109\":3}}],[\"观察者api\",{\"1\":{\"109\":1}}],[\"释放了web隐藏的超能力\",{\"1\":{\"109\":1}}],[\"8\",{\"1\":{\"106\":1}}],[\"83\",{\"1\":{\"106\":1}}],[\"88\",{\"1\":{\"106\":1}}],[\"80\",{\"1\":{\"48\":1}}],[\"800\",{\"1\":{\"43\":1}}],[\"反而搞复杂了\",{\"1\":{\"103\":1}}],[\"反正下载好msi文件后\",{\"1\":{\"5\":1}}],[\"作用域插槽\",{\"1\":{\"103\":1}}],[\"函数参数和返回值\",{\"1\":{\"112\":1}}],[\"函数\",{\"1\":{\"103\":1}}],[\"函数会多次被调用\",{\"1\":{\"103\":1}}],[\"函数的上下文为当前元素\",{\"1\":{\"65\":1}}],[\"片段赋值给变量\",{\"1\":{\"103\":1}}],[\"另一种是引用的\",{\"1\":{\"122\":1}}],[\"另一种是带有选项卡的标题\",{\"1\":{\"103\":1}}],[\"另外当时除了ie浏览器意外\",{\"1\":{\"48\":1}}],[\"运行函数\",{\"1\":{\"134\":1}}],[\"运行示例可以看到\",{\"1\":{\"100\":1}}],[\"运算符的特性简写为\",{\"1\":{\"102\":1}}],[\"运算符来做\",{\"1\":{\"102\":1}}],[\"推荐使用第二种方式\",{\"1\":{\"101\":1}}],[\"推荐统一使用\",{\"1\":{\"75\":1}}],[\"开发中遇到的表单输入\",{\"1\":{\"140\":1}}],[\"开发项目时绝大多数情况下都是使用模板来写\",{\"1\":{\"88\":1}}],[\"开始观察\",{\"1\":{\"109\":3}}],[\"开始观察目标节点的配置突变情况\",{\"1\":{\"109\":1}}],[\"开头\",{\"1\":{\"101\":2}}],[\"开头的情况如何处理\",{\"1\":{\"101\":1}}],[\"除\",{\"1\":{\"100\":1}}],[\"特性生成\",{\"1\":{\"152\":1}}],[\"特性\",{\"1\":{\"100\":1}}],[\"特写下此文\",{\"1\":{\"3\":1}}],[\"经验的可能会注意到它里面包含了很多\",{\"1\":{\"100\":1}}],[\"经过\",{\"1\":{\"100\":1}}],[\"转译后得到正确的样式类名\",{\"1\":{\"100\":1}}],[\"结果显示\",{\"1\":{\"116\":1,\"119\":1}}],[\"结果会就是在\",{\"1\":{\"100\":1}}],[\"结构控制\",{\"0\":{\"67\":1}}],[\"输入框防抖指令\",{\"1\":{\"129\":1}}],[\"输入命令\",{\"1\":{\"9\":1,\"14\":1,\"16\":1,\"19\":1}}],[\"输出html属性\",{\"1\":{\"100\":1}}],[\"输出dom属性\",{\"1\":{\"100\":1}}],[\"映射关系\",{\"1\":{\"100\":1}}],[\"普通\",{\"1\":{\"100\":1}}],[\"关键字\",{\"1\":{\"122\":1}}],[\"关于事件\",{\"0\":{\"101\":1}}],[\"关于dom属性\",{\"0\":{\"100\":1}}],[\"关闭调用链的继续执行\",{\"1\":{\"82\":1}}],[\"拆分的粒度不够\",{\"1\":{\"99\":1}}],[\"扩展思路何尝不值得一试\",{\"1\":{\"99\":1}}],[\"项目的时候一定要使用\",{\"1\":{\"99\":1}}],[\"项目所需模块项目的配置信息\",{\"1\":{\"6\":1}}],[\"全局的过滤器只用于模板中\",{\"1\":{\"98\":1}}],[\"过滤器其实在开发过程中用得倒是不多\",{\"1\":{\"98\":1}}],[\"过滤器\",{\"0\":{\"98\":1}}],[\"过滤列表\",{\"1\":{\"74\":1}}],[\"介绍二种解决办法\",{\"1\":{\"97\":1}}],[\"命名空间中提供了\",{\"1\":{\"117\":1}}],[\"命名插槽写成\",{\"1\":{\"96\":1}}],[\"命令后面跟的不是类\",{\"1\":{\"122\":1}}],[\"命令时\",{\"1\":{\"122\":1}}],[\"命令\",{\"1\":{\"51\":1,\"122\":1}}],[\"命令切换到它\",{\"1\":{\"51\":1}}],[\"命令生成文章等的模板\",{\"1\":{\"6\":1}}],[\"基于解构的特性还可以重命名属性名\",{\"1\":{\"96\":1}}],[\"基本上就是对grid\",{\"1\":{\"48\":1}}],[\"基本上就是对flex次轴cross\",{\"1\":{\"48\":1}}],[\"父元素\",{\"1\":{\"152\":1}}],[\"父组件\",{\"1\":{\"103\":1}}],[\"父级模板里的所有内容都是在父级作用域中编译的\",{\"1\":{\"96\":1}}],[\"父节点存在即可调用\",{\"1\":{\"129\":1}}],[\"父节点选择\",{\"1\":{\"63\":1}}],[\"父节点\",{\"0\":{\"63\":1,\"71\":1}}],[\"官方文档中提到\",{\"1\":{\"96\":1}}],[\"官方提供了一个\",{\"1\":{\"88\":1}}],[\"组件的形态有两种\",{\"1\":{\"103\":1}}],[\"组件的传值\",{\"0\":{\"103\":1}}],[\"组件pageheader\",{\"1\":{\"103\":1}}],[\"组件属性\",{\"1\":{\"100\":1}}],[\"组件中可以访问到\",{\"1\":{\"96\":1}}],[\"组件和\",{\"1\":{\"96\":1}}],[\"组件命名采用首字母大写的驼峰命名方式\",{\"1\":{\"88\":1}}],[\"指针类型\",{\"1\":{\"112\":1}}],[\"指令与元素解绑的时候\",{\"1\":{\"131\":1,\"134\":1}}],[\"指令与元素解绑时调用\",{\"1\":{\"129\":1}}],[\"指令第一次绑定到元素时调用\",{\"1\":{\"129\":1}}],[\"指令定义函数提供了几个钩子函数\",{\"1\":{\"129\":1}}],[\"指令\",{\"0\":{\"97\":1},\"1\":{\"96\":1}}],[\"指定索引选取节点\",{\"1\":{\"60\":1}}],[\"假如在jsx中想要引用遍历元素或组件的时候\",{\"1\":{\"95\":1}}],[\"假设它是抓不到整体可运用的空间范围\",{\"1\":{\"48\":1}}],[\"因此\",{\"1\":{\"122\":1}}],[\"因此在\",{\"1\":{\"100\":1}}],[\"因此像下面的示例是无法正常工作的\",{\"1\":{\"96\":1}}],[\"因此你不应该试图用它在模板中做数据绑定\",{\"1\":{\"95\":1}}],[\"因为一旦有了\",{\"1\":{\"122\":1}}],[\"因为三个引用都指向了同一个对象\",{\"1\":{\"119\":1}}],[\"因为更多时候可以通过计算属性来对数据做一些转换和筛选\",{\"1\":{\"98\":1}}],[\"因为有相应的\",{\"1\":{\"89\":1}}],[\"因为\",{\"1\":{\"88\":1,\"95\":1}}],[\"因为写起来很痛苦\",{\"1\":{\"88\":1}}],[\"因为它会将所有提交压缩为单个提交\",{\"1\":{\"51\":1}}],[\"因为此居中的定位元素不需要固定的宽高\",{\"1\":{\"48\":1}}],[\"因为在工作中前端开发布局这方面涉及到的css垂直居中问题比较多\",{\"1\":{\"48\":1}}],[\"元素\",{\"1\":{\"95\":1}}],[\"元素上使用\",{\"1\":{\"95\":1}}],[\"元素的其他尺寸值\",{\"1\":{\"66\":1}}],[\"改为另一个按键码\",{\"1\":{\"94\":1}}],[\"处理函数中的等价操作\",{\"1\":{\"94\":1}}],[\"处理当前节点及所有子节点的事件与数据\",{\"1\":{\"72\":1}}],[\"处理当前节点的事件与数据\",{\"1\":{\"72\":1}}],[\"~\",{\"1\":{\"94\":3}}],[\"修饰键\",{\"1\":{\"94\":1}}],[\"修饰符此种方式并不支持\",{\"1\":{\"97\":1}}],[\"修饰符\",{\"1\":{\"94\":2}}],[\"修改其中一个\",{\"1\":{\"122\":1}}],[\"修改分支\",{\"1\":{\"18\":1}}],[\"修改\",{\"1\":{\"8\":1}}],[\"修改及配置主题\",{\"0\":{\"11\":1},\"1\":{\"3\":1}}],[\"捕获\",{\"1\":{\"94\":1}}],[\"传递给了组件\",{\"1\":{\"100\":1}}],[\"传递参数\",{\"1\":{\"92\":1}}],[\"传给qq\",{\"1\":{\"85\":1}}],[\"原型链\",{\"0\":{\"122\":1},\"1\":{\"122\":1},\"2\":{\"128\":1}}],[\"原型链有异曲同工之妙\",{\"1\":{\"112\":1}}],[\"原型\",{\"1\":{\"113\":1}}],[\"原型模式的简单实现\",{\"0\":{\"115\":1}}],[\"原型模式的uml类图\",{\"0\":{\"114\":1},\"1\":{\"114\":1}}],[\"原型模式介绍\",{\"0\":{\"113\":1}}],[\"原型模式告诉你答案\",{\"1\":{\"112\":1}}],[\"原型模式很少单独出现\",{\"1\":{\"112\":1}}],[\"原型模式\",{\"0\":{\"112\":1},\"1\":{\"113\":1},\"2\":{\"128\":1}}],[\"原生事件添加\",{\"1\":{\"92\":1}}],[\"原理就是这么简单\",{\"1\":{\"48\":1}}],[\"原理\",{\"0\":{\"26\":1},\"1\":{\"85\":1}}],[\"加载真实图片\",{\"1\":{\"145\":1}}],[\"加上\",{\"1\":{\"132\":1,\"135\":1,\"139\":1}}],[\"加\",{\"1\":{\"91\":1}}],[\"加班\",{\"1\":{\"48\":1}}],[\"内存回收\",{\"1\":{\"112\":1}}],[\"内存分配地点\",{\"1\":{\"112\":1}}],[\"内置的指令除了\",{\"1\":{\"97\":1}}],[\"内联样式可以直接写成\",{\"1\":{\"90\":1}}],[\"内层循环时比较值\",{\"1\":{\"0\":1}}],[\"插入到\",{\"1\":{\"131\":1}}],[\"插槽\",{\"0\":{\"96\":1},\"1\":{\"103\":1}}],[\"插件来专门处理\",{\"1\":{\"89\":1}}],[\"插件和主题\",{\"1\":{\"12\":1}}],[\"插值\",{\"0\":{\"89\":1}}],[\"复杂逻辑条件判断\",{\"0\":{\"102\":1}}],[\"复杂的建议放在单独的\",{\"1\":{\"88\":1}}],[\"复制粘贴指令\",{\"1\":{\"129\":1}}],[\"复制文本框或者隐藏域中的内容\",{\"1\":{\"85\":1}}],[\"复制url地址\",{\"1\":{\"85\":1}}],[\"复制成功\",{\"1\":{\"85\":8,\"131\":1}}],[\"复制专题地址和url地址\",{\"1\":{\"85\":1}}],[\"复制节点\",{\"1\":{\"72\":1}}],[\"复制\",{\"0\":{\"72\":1},\"1\":{\"85\":1,\"113\":1},\"2\":{\"87\":1}}],[\"样式\",{\"0\":{\"90\":1}}],[\"样式可以少的可以直接基于\",{\"1\":{\"88\":1}}],[\"样式控制\",{\"0\":{\"66\":1}}],[\"首先需要约定一下\",{\"1\":{\"88\":1}}],[\"首先需要正确地解析到整个文档的dom模型结构\",{\"1\":{\"54\":1}}],[\"进行显示隐藏\",{\"1\":{\"148\":1}}],[\"进行复制\",{\"1\":{\"112\":1}}],[\"进行了重大更新和变化\",{\"1\":{\"88\":1}}],[\"进来\",{\"1\":{\"88\":1}}],[\"进入站点文件夹\",{\"1\":{\"16\":1}}],[\"进入到你的主题的配置文件下\",{\"1\":{\"12\":1}}],[\"目前能力有限这方面就不作展开了\",{\"1\":{\"103\":1}}],[\"目前已经拥有良好的生态圈子\",{\"1\":{\"88\":1}}],[\"目前最活跃和用户量最多的是\",{\"1\":{\"88\":1}}],[\"目的\",{\"0\":{\"25\":1}}],[\"等价于模板的\",{\"1\":{\"96\":1}}],[\"等指令的存在\",{\"1\":{\"91\":1}}],[\"等\",{\"1\":{\"88\":1,\"97\":1}}],[\"等同于是调用了两次\",{\"1\":{\"81\":1}}],[\"部分\",{\"1\":{\"88\":2}}],[\"部署到github上\",{\"0\":{\"9\":1}}],[\"部署项目\",{\"0\":{\"8\":1},\"1\":{\"3\":1}}],[\"写的时候注意一下对性能的影响\",{\"1\":{\"103\":1}}],[\"写起来要简单些\",{\"1\":{\"101\":1}}],[\"写法中并没有直接将\",{\"1\":{\"100\":1}}],[\"写法上和在\",{\"1\":{\"88\":1}}],[\"写成\",{\"1\":{\"96\":1}}],[\"写在同一个文件中\",{\"1\":{\"88\":1}}],[\"写组件的时候就面临着样式问题\",{\"1\":{\"88\":1}}],[\"写博客写博客\",{\"1\":{\"10\":1}}],[\"写博客文章\",{\"0\":{\"14\":1},\"1\":{\"3\":1}}],[\"更多的时候建议还是少使用\",{\"1\":{\"100\":1}}],[\"更多的是在\",{\"1\":{\"88\":1}}],[\"更多\",{\"1\":{\"99\":1}}],[\"更多知识点可以直接查看官方文档的作用域插槽\",{\"1\":{\"96\":1}}],[\"更一般地来说\",{\"1\":{\"81\":1}}],[\"渲染函数想必平时几乎没有人去写\",{\"1\":{\"88\":1}}],[\"隐藏了对象的创建细节\",{\"1\":{\"124\":1}}],[\"隐藏和拼凑页面内容\",{\"1\":{\"88\":1}}],[\"隐藏元素\",{\"1\":{\"58\":1}}],[\"中插入的\",{\"1\":{\"131\":1}}],[\"中克隆\",{\"1\":{\"123\":1}}],[\"中定义的\",{\"1\":{\"100\":1}}],[\"中会直接显示这些\",{\"1\":{\"100\":1}}],[\"中当给一个组件传了很多\",{\"1\":{\"100\":1}}],[\"中还可以使用混用的写法\",{\"1\":{\"100\":1}}],[\"中这样写\",{\"1\":{\"100\":1}}],[\"中其属性名为\",{\"1\":{\"100\":1}}],[\"中显示\",{\"1\":{\"100\":1}}],[\"中所有数据均挂载在\",{\"1\":{\"100\":1}}],[\"中所有\",{\"1\":{\"97\":1,\"100\":1}}],[\"中同样使用呢\",{\"1\":{\"96\":1}}],[\"中更多的是提供数据供父作用域渲染展示\",{\"1\":{\"96\":1}}],[\"中我们更多时候不仅提供了属性\",{\"1\":{\"96\":1}}],[\"中获取的并不是期望的数组值\",{\"1\":{\"95\":1}}],[\"中\",{\"1\":{\"95\":1,\"98\":1,\"100\":3,\"123\":2,\"129\":1,\"131\":1}}],[\"中就只能通过遍历来实现类似的功能\",{\"1\":{\"93\":1}}],[\"中直接支持返回数组的形式\",{\"1\":{\"93\":1}}],[\"中基于\",{\"1\":{\"93\":1}}],[\"中没有\",{\"1\":{\"91\":1}}],[\"中可以通过\",{\"1\":{\"100\":1,\"102\":1}}],[\"中可以直接写成\",{\"1\":{\"100\":1}}],[\"中可以直接使用\",{\"1\":{\"90\":1}}],[\"中可以很好的区分\",{\"1\":{\"100\":1}}],[\"中可以使用\",{\"1\":{\"96\":1}}],[\"中可使用的方案就太少了\",{\"1\":{\"88\":1}}],[\"中不需要把\",{\"1\":{\"89\":1}}],[\"中取一个特殊的名字\",{\"1\":{\"88\":1}}],[\"中那么完善\",{\"1\":{\"88\":1}}],[\"中差不多\",{\"1\":{\"88\":1}}],[\"中使用\",{\"0\":{\"88\":1},\"1\":{\"88\":1,\"95\":1}}],[\"中的继承机制\",{\"1\":{\"112\":1}}],[\"中的语法是以\",{\"1\":{\"100\":1}}],[\"中的实现\",{\"1\":{\"100\":1}}],[\"中的颜色计算\",{\"1\":{\"88\":1}}],[\"中的\",{\"1\":{\"81\":1,\"96\":1,\"100\":1}}],[\"粘贴\",{\"1\":{\"85\":1}}],[\"kglobalclipboard\",{\"1\":{\"85\":1}}],[\"kelly\",{\"1\":{\"65\":2}}],[\"key=\",{\"1\":{\"95\":2}}],[\"keycode\",{\"1\":{\"94\":2}}],[\"keyup\",{\"1\":{\"77\":1,\"94\":2,\"138\":1,\"141\":2}}],[\"keydown\",{\"1\":{\"77\":1}}],[\"key就填刚刚复制好了的那一段\",{\"1\":{\"7\":1}}],[\"key\",{\"1\":{\"7\":1,\"74\":4,\"129\":3,\"149\":2}}],[\"keys\",{\"1\":{\"7\":1,\"129\":1}}],[\"keygen\",{\"1\":{\"7\":1}}],[\"64\",{\"1\":{\"106\":1}}],[\"67\",{\"1\":{\"106\":1}}],[\"6\",{\"1\":{\"85\":1,\"96\":1,\"106\":1}}],[\"600\",{\"1\":{\"43\":1}}],[\"根据正则表达式\",{\"1\":{\"141\":1}}],[\"根据id\",{\"1\":{\"85\":1}}],[\"根据`istrue`判断指定类的开关\",{\"1\":{\"65\":1}}],[\"根据`istrue`判断所有类的开关\",{\"1\":{\"65\":1}}],[\"已复制好\",{\"1\":{\"85\":1}}],[\"执行浏览器复制命令\",{\"1\":{\"85\":1}}],[\"执行函数\",{\"1\":{\"81\":1}}],[\"检查回调链是否被锁定\",{\"1\":{\"82\":1}}],[\"检查回调链是否被激发\",{\"1\":{\"82\":1}}],[\"检查一个函数是否处于回调链之中\",{\"1\":{\"82\":1}}],[\"检测数组是否有某个值\",{\"1\":{\"0\":1}}],[\"锁定调用链\",{\"1\":{\"82\":1}}],[\"清空调用链\",{\"1\":{\"82\":1}}],[\"清除一个节点的所有内部内容\",{\"1\":{\"72\":1}}],[\"新添加的函数仍然会执行\",{\"1\":{\"82\":1}}],[\"新添加的函数也不会被执行\",{\"1\":{\"82\":1}}],[\"新添加的函数被立即执行\",{\"1\":{\"82\":1}}],[\"新建\",{\"1\":{\"129\":1}}],[\"新建文章\",{\"1\":{\"14\":1}}],[\"新建一个空的结果数组\",{\"1\":{\"0\":1}}],[\"被绑定元素所在模板完成一次更新周期时调用\",{\"1\":{\"129\":1}}],[\"被绑定元素所在的模板更新时调用\",{\"1\":{\"129\":1}}],[\"被绑定元素插入父节点时调用\",{\"1\":{\"129\":1}}],[\"被复制的实例就是我们所称的\",{\"1\":{\"113\":1}}],[\"被用来给元素或子组件注册引用信息\",{\"1\":{\"95\":1}}],[\"被浏览器拒绝\",{\"1\":{\"85\":1}}],[\"被触发时再被触发\",{\"1\":{\"81\":1}}],[\"被选择\",{\"1\":{\"77\":1}}],[\"被选择的元素\",{\"1\":{\"58\":1}}],[\"看到的输出是\",{\"1\":{\"81\":1}}],[\"前面已经把事件相关的知识点都介绍了\",{\"1\":{\"101\":1}}],[\"前缀\",{\"1\":{\"92\":1,\"94\":1}}],[\"前组的返回值是原来的那个\",{\"1\":{\"81\":1}}],[\"前端的毒品\",{\"1\":{\"48\":1}}],[\"之后\",{\"1\":{\"109\":3}}],[\"之后可以再次恢复指定位置\",{\"1\":{\"72\":1}}],[\"之类的需求时\",{\"1\":{\"81\":1}}],[\"像\",{\"1\":{\"81\":1,\"88\":1}}],[\"像是按钮这一类对象\",{\"1\":{\"48\":1}}],[\"做的事和使用\",{\"1\":{\"81\":1}}],[\"做好这些前置工作之后接下来的就是各种配置了\",{\"1\":{\"6\":1}}],[\"激发回调\",{\"1\":{\"82\":1}}],[\"激发准备状态\",{\"1\":{\"81\":1}}],[\"激发成功状态\",{\"1\":{\"81\":1}}],[\"激发失败状态\",{\"1\":{\"81\":1}}],[\"激发状态等\",{\"1\":{\"81\":1}}],[\"准备状态\",{\"1\":{\"81\":1}}],[\"准备就绪\",{\"1\":{\"77\":1}}],[\"失败\",{\"1\":{\"81\":1}}],[\"失去焦点时\",{\"1\":{\"77\":1}}],[\"分成两种\",{\"1\":{\"122\":1}}],[\"分成事件绑定和赋值二部分分开来写\",{\"1\":{\"89\":1}}],[\"分配在堆中\",{\"1\":{\"112\":1}}],[\"分配在栈中\",{\"1\":{\"112\":1}}],[\"分别修改为\",{\"1\":{\"94\":1}}],[\"分别用于成功\",{\"1\":{\"81\":1}}],[\"分割的子名字\",{\"1\":{\"75\":1}}],[\"依次接受三个函数\",{\"1\":{\"81\":1}}],[\"依次输入以下命令\",{\"1\":{\"8\":1}}],[\"总的来说\",{\"1\":{\"81\":1}}],[\"返回值来优化上述问题\",{\"1\":{\"102\":1}}],[\"返回一个列表对象\",{\"1\":{\"80\":1}}],[\"返回字符串\",{\"1\":{\"80\":1}}],[\"服务器返回的数据类型\",{\"1\":{\"78\":1}}],[\"要明白这个问题\",{\"1\":{\"112\":1}}],[\"要copy的内容\",{\"1\":{\"85\":1}}],[\"要发送的数据\",{\"1\":{\"78\":1}}],[\"要添加当前目录中的所有文件\",{\"1\":{\"51\":1}}],[\"核心的请求处理函数只有一个\",{\"1\":{\"78\":1}}],[\"请粘贴到你的qq\",{\"1\":{\"85\":1}}],[\"请求a和请求b都完成时\",{\"1\":{\"81\":1}}],[\"请求完成\",{\"1\":{\"79\":1}}],[\"请求错误\",{\"1\":{\"79\":1}}],[\"请求错误时的调用函数\",{\"1\":{\"78\":1}}],[\"请求成功\",{\"1\":{\"79\":1}}],[\"请求成功时调用的处理函数\",{\"1\":{\"78\":1}}],[\"请求将要发出时\",{\"1\":{\"79\":2}}],[\"请求结束\",{\"1\":{\"78\":1,\"79\":1}}],[\"请求的状态\",{\"0\":{\"79\":1}}],[\"请求的方法类型\",{\"1\":{\"78\":1}}],[\"请求的地址\",{\"1\":{\"78\":1}}],[\"请求与回调\",{\"0\":{\"78\":1}}],[\"请使用\",{\"1\":{\"51\":1}}],[\"行为\",{\"1\":{\"77\":1}}],[\"行为事件\",{\"1\":{\"77\":1}}],[\"额外传入的数据\",{\"1\":{\"77\":1}}],[\"禁止表情及特殊字符\",{\"1\":{\"129\":1}}],[\"禁止冒泡\",{\"1\":{\"77\":1}}],[\"禁止默认行为\",{\"1\":{\"77\":1}}],[\"鼠标松开\",{\"1\":{\"154\":1}}],[\"鼠标移动\",{\"1\":{\"154\":1}}],[\"鼠标按下\",{\"1\":{\"154\":1}}],[\"鼠标和键盘的键标识统一在这个属性中\",{\"1\":{\"77\":1}}],[\"鼠标事件\",{\"1\":{\"77\":1}}],[\"表示狗对象的原型\",{\"1\":{\"122\":1}}],[\"表示它从哪个节点来的\",{\"1\":{\"77\":1}}],[\"表达式\",{\"1\":{\"102\":1}}],[\"表单被提交\",{\"1\":{\"77\":1}}],[\"比如不能输入表情和特殊字符\",{\"1\":{\"140\":1}}],[\"比如新增表单的提交按钮\",{\"1\":{\"136\":1}}],[\"比如element组件\",{\"1\":{\"101\":1}}],[\"比如\",{\"1\":{\"77\":1,\"88\":1,\"97\":1,\"100\":1,\"122\":1}}],[\"比如鼠标移入\",{\"1\":{\"77\":1}}],[\"比较正规地从\",{\"1\":{\"55\":1}}],[\"主程序调用\",{\"1\":{\"115\":1,\"121\":1,\"123\":1}}],[\"主要是函数prop\",{\"1\":{\"101\":1}}],[\"主要用于一些转换式的事件\",{\"1\":{\"77\":1}}],[\"主题\",{\"1\":{\"6\":1}}],[\"冒泡行为\",{\"1\":{\"77\":1}}],[\"发生错误时\",{\"1\":{\"77\":1}}],[\"发现利用hexo来搭建个人博客挺方便的\",{\"1\":{\"3\":1}}],[\"针对这种情况\",{\"1\":{\"147\":1}}],[\"针对\",{\"1\":{\"77\":1}}],[\"离开当前页时\",{\"1\":{\"77\":1}}],[\"页面事件\",{\"1\":{\"77\":1}}],[\"移出可视区域\",{\"1\":{\"131\":1}}],[\"移入\",{\"1\":{\"77\":1}}],[\"移除dom元素\",{\"1\":{\"149\":1}}],[\"移除\",{\"1\":{\"131\":1}}],[\"移除事件绑定\",{\"1\":{\"131\":1,\"134\":1}}],[\"移除事件\",{\"1\":{\"75\":1}}],[\"移除节点的父节点\",{\"1\":{\"72\":1}}],[\"光标在其上移动\",{\"1\":{\"77\":1}}],[\"光标移出\",{\"1\":{\"77\":2}}],[\"光标移入\",{\"1\":{\"77\":1}}],[\"松开鼠标\",{\"1\":{\"77\":1}}],[\"点击事件\",{\"1\":{\"103\":1}}],[\"点击按钮的时候触发copy函数\",{\"1\":{\"85\":1}}],[\"点击复制代码\",{\"1\":{\"85\":1}}],[\"点击settings=>branches\",{\"1\":{\"18\":1}}],[\"点下鼠标\",{\"1\":{\"77\":1}}],[\"放开键\",{\"1\":{\"77\":1}}],[\"键盘事件\",{\"1\":{\"77\":1}}],[\"滚动\",{\"1\":{\"77\":1}}],[\"调用\",{\"1\":{\"129\":1}}],[\"调用私有的构造方法\",{\"1\":{\"121\":1}}],[\"调用此方法时\",{\"1\":{\"119\":1}}],[\"调用链处理\",{\"0\":{\"60\":1}}],[\"调整大小\",{\"1\":{\"77\":1}}],[\"单击\",{\"1\":{\"77\":1}}],[\"单行文字垂直居中技巧\",{\"1\":{\"48\":1}}],[\"和组件属性\",{\"1\":{\"101\":1}}],[\"和位置无关\",{\"1\":{\"100\":1}}],[\"和\",{\"0\":{\"95\":1},\"1\":{\"76\":2,\"77\":1,\"88\":2,\"91\":1,\"93\":1,\"96\":1,\"100\":2,\"102\":1,\"112\":1,\"117\":1,\"122\":2,\"154\":2}}],[\"与\",{\"1\":{\"76\":1}}],[\"与right设置元素的上方跟左方各为50\",{\"1\":{\"48\":1}}],[\"二毛\",{\"1\":{\"122\":2}}],[\"二是使用\",{\"1\":{\"76\":1,\"145\":1}}],[\"二供大家参考\",{\"1\":{\"3\":1}}],[\"完全类似\",{\"1\":{\"75\":1}}],[\"完成第②步\",{\"1\":{\"26\":1}}],[\"完成下一步你就成功了\",{\"1\":{\"7\":1}}],[\"绑定点击事件\",{\"1\":{\"131\":1}}],[\"绑定的事件类型\",{\"1\":{\"103\":1}}],[\"绑定的属性\",{\"1\":{\"100\":1,\"103\":1}}],[\"绑定单次事件\",{\"1\":{\"75\":1}}],[\"绑定事件的对象\",{\"1\":{\"77\":1}}],[\"绑定事件\",{\"1\":{\"75\":1}}],[\"绑定个人域名\",{\"0\":{\"10\":1},\"1\":{\"3\":1}}],[\"72\",{\"1\":{\"106\":1}}],[\"79\",{\"1\":{\"106\":1}}],[\"7\",{\"1\":{\"106\":1}}],[\"7之后\",{\"1\":{\"75\":1}}],[\"70px\",{\"1\":{\"48\":4}}],[\"700\",{\"1\":{\"43\":1}}],[\"事件监听\",{\"1\":{\"145\":1}}],[\"事件进行监听\",{\"1\":{\"145\":1}}],[\"事件上做处理\",{\"1\":{\"140\":1}}],[\"事件\",{\"1\":{\"103\":2,\"134\":4}}],[\"事件修饰符\",{\"0\":{\"94\":1}}],[\"事件的触发节点\",{\"1\":{\"77\":1}}],[\"事件的触发有两种方式\",{\"1\":{\"76\":1}}],[\"事件类型\",{\"0\":{\"77\":1},\"1\":{\"77\":1}}],[\"事件函数\",{\"1\":{\"76\":1}}],[\"事件触发频率\",{\"1\":{\"94\":1}}],[\"事件触发时的时间\",{\"1\":{\"77\":1}}],[\"事件触发时的名字空间\",{\"1\":{\"77\":1}}],[\"事件触发时相对于\",{\"1\":{\"77\":1}}],[\"事件触发\",{\"0\":{\"76\":1}}],[\"事件绑定语法\",{\"1\":{\"101\":1}}],[\"事件绑定需要在事件名称前端加上\",{\"1\":{\"92\":1}}],[\"事件绑定节点\",{\"1\":{\"77\":1}}],[\"事件绑定\",{\"0\":{\"75\":1,\"92\":1}}],[\"事实上\",{\"1\":{\"74\":1,\"82\":1}}],[\"以下简称\",{\"1\":{\"122\":1}}],[\"以上两段代码结构相似\",{\"1\":{\"112\":1}}],[\"以便在观察到突变时执行\",{\"1\":{\"109\":2}}],[\"以创建真正的响应式体验\",{\"1\":{\"109\":1}}],[\"以官方文档指令部分给出的示例\",{\"1\":{\"97\":1}}],[\"以外都不支持\",{\"1\":{\"97\":1}}],[\"以定义此回调对象的行为\",{\"1\":{\"82\":1}}],[\"以空格分割的多个事件\",{\"1\":{\"75\":1}}],[\"以\",{\"1\":{\"75\":1,\"101\":1}}],[\"以此为\",{\"1\":{\"74\":1}}],[\"以至于有些开发者认为这种方式都不能算是一种垂直居中的技巧\",{\"1\":{\"48\":1}}],[\"去头去尾\",{\"1\":{\"74\":1}}],[\"去重\",{\"1\":{\"0\":1}}],[\"值\",{\"1\":{\"154\":2}}],[\"值类型和引用类型的区别看下表\",{\"1\":{\"112\":1}}],[\"值类型\",{\"1\":{\"112\":2}}],[\"值一值在变动\",{\"1\":{\"100\":1}}],[\"值变化时\",{\"1\":{\"77\":1}}],[\"值为空的时候\",{\"1\":{\"131\":1}}],[\"值为\",{\"1\":{\"74\":1}}],[\"值相同时\",{\"1\":{\"0\":1}}],[\"存在判断\",{\"1\":{\"74\":1}}],[\"存放的是生成的页面\",{\"1\":{\"6\":1}}],[\"合并列表\",{\"1\":{\"74\":1}}],[\"合并对象\",{\"1\":{\"74\":1}}],[\"9999px\",{\"1\":{\"131\":1}}],[\"9+\",{\"1\":{\"106\":1}}],[\"93\",{\"1\":{\"106\":1}}],[\"97\",{\"1\":{\"74\":1}}],[\"900\",{\"1\":{\"43\":1}}],[\"支持\",{\"1\":{\"78\":1}}],[\"支持一个或两个参数\",{\"1\":{\"73\":1}}],[\"支持负数\",{\"1\":{\"60\":1,\"73\":1}}],[\"序列切片\",{\"1\":{\"73\":1}}],[\"序列选择\",{\"1\":{\"60\":1}}],[\"遍历每个图片判断当前图片是否到了可视区范围内\",{\"1\":{\"145\":1}}],[\"遍历\",{\"0\":{\"91\":1}}],[\"遍历后去重\",{\"1\":{\"74\":1}}],[\"遍历列表\",{\"1\":{\"74\":1}}],[\"遍历所有成员\",{\"1\":{\"73\":1}}],[\"遍历需要去重的数组\",{\"1\":{\"0\":1}}],[\"永久移除节点\",{\"1\":{\"72\":1}}],[\"暂时移除节点\",{\"1\":{\"72\":1}}],[\"替换节点\",{\"0\":{\"72\":1}}],[\"参数是一个对象中\",{\"1\":{\"103\":1}}],[\"参数可以有多种形式\",{\"1\":{\"69\":1}}],[\"参考文章\",{\"1\":{\"4\":1,\"5\":1,\"122\":1}}],[\"会产生什么样的结果呢\",{\"1\":{\"112\":1}}],[\"会发现从\",{\"1\":{\"95\":1}}],[\"会出现单个\",{\"1\":{\"88\":1}}],[\"会写大量重复的代码\",{\"1\":{\"88\":1}}],[\"会作为后面注册函数的参数值\",{\"1\":{\"81\":1}}],[\"会在\",{\"1\":{\"81\":1}}],[\"会移除所有标签\",{\"1\":{\"68\":1}}],[\"会转义标签\",{\"1\":{\"68\":1}}],[\"通过比较更新前后的绑定值\",{\"1\":{\"129\":1}}],[\"通过new产生一个对象需要非常繁琐的数据准备或访问权限\",{\"1\":{\"126\":1}}],[\"通过以下图片我们可以看到对象的值的传递情况\",{\"1\":{\"112\":1}}],[\"通过\",{\"1\":{\"112\":1,\"129\":1}}],[\"通过内部使用\",{\"1\":{\"102\":1}}],[\"通过显卡把内容画在屏幕上\",{\"1\":{\"26\":1}}],[\"通常就是\",{\"1\":{\"77\":1}}],[\"通常用于表单元素\",{\"1\":{\"65\":1}}],[\"通用工具\",{\"0\":{\"74\":1}}],[\"删除数据\",{\"1\":{\"74\":1}}],[\"删除\",{\"0\":{\"72\":1}}],[\"删除属性\",{\"1\":{\"65\":1}}],[\"删除类\",{\"1\":{\"65\":1}}],[\"获取到\",{\"1\":{\"149\":1}}],[\"获取所有\",{\"1\":{\"100\":1}}],[\"获取焦点时\",{\"1\":{\"77\":1}}],[\"获取焦点元素\",{\"1\":{\"56\":1}}],[\"获取时\",{\"1\":{\"68\":1}}],[\"获取元素的坐标\",{\"1\":{\"66\":1}}],[\"获取或设置滚动条的位置\",{\"1\":{\"66\":1}}],[\"获取或设置元素的宽和高\",{\"1\":{\"66\":1}}],[\"获取或设置指定的css样式\",{\"1\":{\"66\":1}}],[\"获取或设置一个属性值\",{\"1\":{\"65\":1}}],[\"获取属性`\",{\"1\":{\"65\":1}}],[\"`duration\",{\"1\":{\"109\":1}}],[\"`start\",{\"1\":{\"109\":1}}],[\"`type\",{\"1\":{\"109\":1}}],[\"`the\",{\"1\":{\"109\":1}}],[\"`name\",{\"1\":{\"109\":1}}],[\"`element\",{\"1\":{\"109\":2}}],[\"`v\",{\"1\":{\"98\":1}}],[\"`btn\",{\"1\":{\"90\":1}}],[\"`istrue`作为函数的第三个参数传入\",{\"1\":{\"65\":1}}],[\"`\",{\"1\":{\"65\":1,\"88\":1,\"90\":1,\"94\":4,\"96\":2,\"109\":5}}],[\"`$\",{\"1\":{\"65\":1,\"96\":2}}],[\"同样的事件多个地方声明事件处理函数\",{\"1\":{\"100\":1}}],[\"同样运行后会发现在\",{\"1\":{\"100\":1}}],[\"同时将\",{\"1\":{\"131\":1}}],[\"同时也会监控子节点是否被添加或删除\",{\"1\":{\"109\":1}}],[\"同时在\",{\"1\":{\"93\":1}}],[\"同时应用于成功和失败\",{\"1\":{\"81\":1}}],[\"同时设置多个属性\",{\"1\":{\"65\":1}}],[\"同\",{\"1\":{\"65\":1}}],[\"类初始化需要消化非常多的资源\",{\"1\":{\"126\":1}}],[\"类\",{\"1\":{\"122\":4,\"123\":1}}],[\"类实现克隆方法\",{\"1\":{\"121\":1}}],[\"类实例化时同时实例化\",{\"1\":{\"119\":1}}],[\"类型是一种具有值类型特性的特殊引用类型\",{\"1\":{\"112\":1}}],[\"类型判断\",{\"1\":{\"74\":1}}],[\"类似于react的children\",{\"1\":{\"103\":1}}],[\"类似于v\",{\"1\":{\"89\":1,\"91\":3}}],[\"类的开关式转换\",{\"1\":{\"65\":1}}],[\"类与属性控制\",{\"0\":{\"65\":1}}],[\"类选择器\",{\"1\":{\"56\":1}}],[\"兄弟节点\",{\"0\":{\"62\":1,\"70\":1}}],[\"兄弟元素\",{\"1\":{\"56\":1}}],[\"子模板里的所有内容都是在子作用域中编译的\",{\"1\":{\"96\":1}}],[\"子节点\",{\"0\":{\"61\":1,\"69\":1}}],[\"子元素\",{\"1\":{\"56\":1}}],[\"随时加入原始序列\",{\"1\":{\"60\":1}}],[\"随便在哪个网站买一个就行\",{\"1\":{\"10\":1}}],[\"向已有的节点序列中添加新的对象\",{\"1\":{\"60\":1}}],[\"空函数\",{\"1\":{\"74\":1}}],[\"空元素\",{\"1\":{\"59\":1}}],[\"空对象\",{\"1\":{\"0\":1}}],[\"仅属性就有三种\",{\"1\":{\"100\":1}}],[\"仅有一个子元素的元素\",{\"1\":{\"59\":1}}],[\"仅能对次轴多行flex\",{\"1\":{\"48\":1}}],[\"符合条件的再次过滤\",{\"1\":{\"59\":1}}],[\"列表索引选择\",{\"1\":{\"59\":1}}],[\"包含了以下属性\",{\"1\":{\"103\":1}}],[\"包含有指定内容的元素\",{\"1\":{\"59\":1}}],[\"包括不在\",{\"1\":{\"100\":1}}],[\"包括有指定属性的元素\",{\"1\":{\"57\":1}}],[\"否则则移除\",{\"1\":{\"149\":1}}],[\"否则则使用\",{\"1\":{\"145\":1}}],[\"否则显示默认图片\",{\"1\":{\"145\":1}}],[\"否则返回当前元素\",{\"1\":{\"0\":1}}],[\"否定选择\",{\"1\":{\"59\":1}}],[\"具体原型类\",{\"1\":{\"115\":1}}],[\"具体的错误描述\",{\"1\":{\"78\":1}}],[\"具体控件\",{\"1\":{\"58\":1}}],[\"具体做法\",{\"1\":{\"13\":1}}],[\"还是以\",{\"1\":{\"122\":1}}],[\"还是要有点装逼的嘛\",{\"1\":{\"10\":1}}],[\"还可以使用\",{\"1\":{\"102\":1}}],[\"还可以定义一个属性对象\",{\"1\":{\"100\":1}}],[\"还提供了操作方法\",{\"1\":{\"96\":1}}],[\"还终止绑定函数链的继续进行\",{\"1\":{\"77\":1}}],[\"还有\",{\"1\":{\"58\":1}}],[\"未禁用的元素\",{\"1\":{\"58\":1}}],[\"控件选择器\",{\"0\":{\"58\":1}}],[\"456\",{\"1\":{\"74\":1}}],[\"4\",{\"1\":{\"73\":1,\"74\":2,\"106\":6,\"149\":1,\"152\":1}}],[\"4n\",{\"1\":{\"56\":1}}],[\"400px\",{\"1\":{\"48\":23}}],[\"400\",{\"1\":{\"43\":1}}],[\"4000\",{\"1\":{\"8\":1}}],[\"索引从1开始\",{\"1\":{\"56\":1}}],[\"索引选择\",{\"1\":{\"56\":1}}],[\"直接使用对象传递所有指令属性\",{\"1\":{\"97\":1}}],[\"直接兄弟元素\",{\"1\":{\"56\":1}}],[\"直接子元素\",{\"1\":{\"56\":1}}],[\"截取第一个\",{\"1\":{\"56\":1}}],[\"最兴盛的时期\",{\"1\":{\"122\":1}}],[\"最终返回一个深复制的简历对象\",{\"1\":{\"121\":1}}],[\"最终导致③步骤花费的时间太久而影响到④步骤的显示\",{\"1\":{\"26\":1}}],[\"最近在工作室课上在讲\",{\"1\":{\"112\":1}}],[\"最好的办法\",{\"1\":{\"102\":1}}],[\"最后还是设计了\",{\"1\":{\"122\":1}}],[\"最后需要提及一点的是\",{\"1\":{\"100\":1}}],[\"最后一个符合条件的元素\",{\"1\":{\"56\":1}}],[\"最后一个元素\",{\"1\":{\"56\":1}}],[\"标签的\",{\"1\":{\"131\":2,\"146\":1}}],[\"标签\",{\"1\":{\"96\":1,\"131\":2}}],[\"标签选择器\",{\"1\":{\"56\":1}}],[\"标记中的内容\",{\"1\":{\"85\":1}}],[\"标明哪个按钮触发了事件\",{\"1\":{\"77\":1}}],[\"标题元素\",{\"1\":{\"59\":1}}],[\"标志以显示远程存储库的\",{\"1\":{\"51\":1}}],[\"标志来显示对暂存文件的更改\",{\"1\":{\"51\":1}}],[\"标志来删除所有更改\",{\"1\":{\"51\":1}}],[\"标志\",{\"1\":{\"51\":1}}],[\"标志强制删除分支\",{\"1\":{\"51\":1}}],[\"标志将其从暂存区中删除\",{\"1\":{\"51\":1}}],[\"相同的回调函数只能被添加一次\",{\"1\":{\"82\":1}}],[\"相关的节点\",{\"1\":{\"77\":1}}],[\"相应地\",{\"1\":{\"55\":1}}],[\"相对于第一种方法来说只是简化了代码\",{\"1\":{\"0\":1}}],[\"只加载浏览器可见区域的图片\",{\"1\":{\"144\":1}}],[\"只触发一次\",{\"1\":{\"139\":1}}],[\"只调用一次\",{\"1\":{\"129\":2}}],[\"只复制对象的值类型字段\",{\"1\":{\"118\":1}}],[\"只不过在\",{\"1\":{\"96\":1}}],[\"只写\",{\"1\":{\"88\":1}}],[\"只要修改了\",{\"1\":{\"122\":1}}],[\"只要有一个是\",{\"1\":{\"81\":1}}],[\"只要对单一子层元素设置为align\",{\"1\":{\"48\":1}}],[\"只能输入数字或字母等\",{\"1\":{\"140\":1}}],[\"只能用于\",{\"1\":{\"96\":1}}],[\"只能激发一个\",{\"1\":{\"81\":1}}],[\"只能先于其他两个状态先被激发\",{\"1\":{\"81\":1}}],[\"只是复制了引用\",{\"1\":{\"119\":1}}],[\"只是对原有对象的引用\",{\"1\":{\"112\":1}}],[\"只是对象变成了\",{\"1\":{\"65\":1}}],[\"只是在callbacks机制的上层进行了一层简单封装\",{\"1\":{\"82\":1}}],[\"只是类名由函数返回\",{\"1\":{\"65\":1}}],[\"只有当\",{\"1\":{\"55\":1}}],[\"对需要权限判断的\",{\"1\":{\"148\":1}}],[\"对性能也有很大提高\",{\"1\":{\"124\":1}}],[\"对有些初始化需要占用很多资源的类来说\",{\"1\":{\"124\":1}}],[\"对这个构造函数使用\",{\"1\":{\"122\":1}}],[\"对应`\",{\"1\":{\"94\":1}}],[\"对应\",{\"1\":{\"92\":2,\"94\":3}}],[\"对应的实现\",{\"1\":{\"88\":1}}],[\"对于深拷贝来说\",{\"1\":{\"125\":1}}],[\"对于引用类型\",{\"1\":{\"119\":1}}],[\"对于复杂的条件判断\",{\"1\":{\"102\":1}}],[\"对于自定义的指令可以使用\",{\"1\":{\"97\":1}}],[\"对于别的按键修饰符来说\",{\"1\":{\"94\":1}}],[\"对于全局的所有ajax请求而言\",{\"1\":{\"79\":1}}],[\"对于\",{\"1\":{\"75\":1}}],[\"对指定类的开关\",{\"1\":{\"65\":1}}],[\"对所有类的开关\",{\"1\":{\"65\":1}}],[\"对象存储在\",{\"1\":{\"123\":1}}],[\"对象里\",{\"1\":{\"122\":1}}],[\"对象上\",{\"1\":{\"95\":1}}],[\"对象属性\",{\"1\":{\"64\":1}}],[\"对象的属性和方法\",{\"1\":{\"122\":1}}],[\"对象的构造函数中\",{\"1\":{\"122\":1}}],[\"对象的实例\",{\"1\":{\"122\":1}}],[\"对象的值的传递\",{\"1\":{\"112\":4}}],[\"对象的\",{\"1\":{\"55\":1}}],[\"对象的操作\",{\"1\":{\"55\":1}}],[\"对象到\",{\"1\":{\"55\":1}}],[\"对象\",{\"1\":{\"55\":2,\"103\":1,\"119\":1,\"122\":2}}],[\"对象转到\",{\"1\":{\"55\":2}}],[\"对象之间是不同的\",{\"1\":{\"55\":1}}],[\"对的\",{\"1\":{\"48\":1}}],[\"它就代表了新创建的实例对象\",{\"1\":{\"122\":1}}],[\"它就失去了原先的上下文\",{\"1\":{\"74\":1}}],[\"它判断相等性时\",{\"1\":{\"117\":1}}],[\"它们还不存在\",{\"1\":{\"95\":1}}],[\"它们都可以添加回调函数\",{\"1\":{\"81\":1}}],[\"它跟两次\",{\"1\":{\"81\":1}}],[\"它默认的上下文是触发事件的节点\",{\"1\":{\"75\":1}}],[\"它封装了很多\",{\"1\":{\"55\":1}}],[\"它的返回值就是jquery对象\",{\"1\":{\"54\":1}}],[\"它的用途是改变文字书写的方向从横变竖\",{\"1\":{\"48\":1}}],[\"得到的是一个jquery对象\",{\"1\":{\"55\":1}}],[\"避免冲突\",{\"1\":{\"54\":1}}],[\"篇\",{\"1\":{\"54\":1}}],[\"学习笔记\",{\"0\":{\"54\":1}}],[\"学习吧\",{\"1\":{\"14\":1}}],[\"应用存储\",{\"1\":{\"51\":1}}],[\"应用存储不会将其从存储列表中删除\",{\"1\":{\"51\":1}}],[\"应该大家都不陌生\",{\"1\":{\"48\":2}}],[\"允许您在不提交更改的情况下临时存储更改\",{\"1\":{\"51\":1}}],[\"变基是将一系列提交移动或组合到新的基本提交的过程\",{\"1\":{\"51\":1}}],[\"建议不要使用\",{\"1\":{\"51\":1}}],[\"建立远程仓库\",{\"0\":{\"16\":1}}],[\"您还可以将消息添加到存储中\",{\"1\":{\"51\":1}}],[\"您还可以添加\",{\"1\":{\"51\":1}}],[\"您还可以使用格式\",{\"1\":{\"51\":1}}],[\"您还可以使用\",{\"1\":{\"51\":2}}],[\"您也可以仅使用\",{\"1\":{\"51\":1}}],[\"显示\",{\"1\":{\"116\":1,\"119\":1,\"122\":1,\"150\":1}}],[\"显示最后一次提交的分支\",{\"1\":{\"51\":1}}],[\"显示远程分支\",{\"1\":{\"51\":1}}],[\"显示所有分支\",{\"1\":{\"51\":1}}],[\"默认为\",{\"1\":{\"78\":1}}],[\"默认是自动生成的一个随机值\",{\"1\":{\"78\":1}}],[\"默认是\",{\"1\":{\"78\":2}}],[\"默认远程名称\",{\"1\":{\"51\":1}}],[\"默认分支名称\",{\"1\":{\"51\":1}}],[\"默认分支为hexo\",{\"1\":{\"20\":1}}],[\"代码如下\",{\"1\":{\"51\":1}}],[\"代码就是这么少\",{\"1\":{\"0\":1}}],[\"代替\",{\"1\":{\"51\":1}}],[\"是两个实例对象共享的\",{\"1\":{\"122\":1}}],[\"是当时最流行的语言\",{\"1\":{\"122\":1}}],[\"是按照内容来判断的\",{\"1\":{\"117\":1}}],[\"是引用类型\",{\"1\":{\"117\":1}}],[\"是一种拥有值类型特点的特殊引用类型\",{\"1\":{\"117\":1}}],[\"是创建型模式的一种\",{\"1\":{\"113\":1}}],[\"是原有对象的引用\",{\"1\":{\"112\":1}}],[\"是对象的复制\",{\"1\":{\"112\":1}}],[\"是\",{\"1\":{\"100\":1}}],[\"是可以改变的\",{\"1\":{\"100\":1}}],[\"是可选的\",{\"1\":{\"51\":1}}],[\"是不同的\",{\"1\":{\"81\":1}}],[\"是否为请求单独添加一个随机参数以防止浏览器缓存\",{\"1\":{\"78\":1}}],[\"是dom对象\",{\"1\":{\"64\":1}}],[\"是xml结构中的属性节点\",{\"1\":{\"64\":1}}],[\"是使用\",{\"1\":{\"55\":1}}],[\"是在jquery中使用的变量名\",{\"1\":{\"54\":1}}],[\"是依赖包\",{\"1\":{\"6\":1}}],[\"常规选择器\",{\"0\":{\"56\":1}}],[\"常用命令\",{\"1\":{\"51\":1}}],[\"常见于单行文字的应用\",{\"1\":{\"48\":1}}],[\"白话一点的解说就是\",{\"1\":{\"48\":1}}],[\"也有可能是一些通用的\",{\"1\":{\"100\":1}}],[\"也可以把组件拆分成一个个小的函数式组件\",{\"1\":{\"93\":1}}],[\"也就是说\",{\"1\":{\"122\":1}}],[\"也就是说不能是隐藏的文本域\",{\"1\":{\"85\":1}}],[\"也就是\",{\"1\":{\"100\":1}}],[\"也就很少使用了\",{\"1\":{\"48\":1}}],[\"也用于触发自定义事件\",{\"1\":{\"76\":1}}],[\"也创建合并提交\",{\"1\":{\"51\":1}}],[\"也是一路next\",{\"1\":{\"5\":1}}],[\"好吧\",{\"1\":{\"48\":1}}],[\"好啦\",{\"1\":{\"48\":1}}],[\"好甘心\",{\"1\":{\"48\":1}}],[\"连我奶奶都知道这方式吧\",{\"1\":{\"48\":1}}],[\"连css\",{\"1\":{\"48\":1}}],[\"什么\",{\"1\":{\"48\":1}}],[\"网页性能会是比较差的\",{\"1\":{\"48\":1}}],[\"网易云跟帖等都已关闭服务\",{\"1\":{\"13\":1}}],[\"真可谓是划时代的一个方法啊\",{\"1\":{\"48\":1}}],[\"真的是网页开发者的一个福音\",{\"1\":{\"48\":1}}],[\"真的是用一次就让你升天啦\",{\"1\":{\"48\":1}}],[\"或者说合理使用\",{\"1\":{\"100\":1}}],[\"或者说是做得不彻底\",{\"1\":{\"99\":1}}],[\"或者直接\",{\"1\":{\"100\":1}}],[\"或者\",{\"1\":{\"94\":1,\"100\":1}}],[\"或者页面中很多部分存在部分dom结构一样的时候就略显捉襟见肘\",{\"1\":{\"88\":1}}],[\"或者是下拉框\",{\"1\":{\"48\":1}}],[\"或\",{\"1\":{\"51\":2,\"76\":1}}],[\"或是想办法用js来动态计算\",{\"1\":{\"48\":1}}],[\"设为\",{\"1\":{\"131\":1}}],[\"设计自定义处理表单输入规则的指令\",{\"1\":{\"141\":1}}],[\"设计模式\",{\"2\":{\"128\":1}}],[\"设计网页不跑版\",{\"1\":{\"48\":1}}],[\"设置需要拖拽的元素为相对定位\",{\"1\":{\"154\":1}}],[\"设置水印文案\",{\"1\":{\"152\":1}}],[\"设置其字体大小\",{\"1\":{\"152\":1}}],[\"设置一个实例对象的共有属性\",{\"1\":{\"122\":1}}],[\"设置工作经历\",{\"1\":{\"116\":1,\"119\":1}}],[\"设置个人信息\",{\"1\":{\"116\":1,\"119\":1}}],[\"设置为\",{\"1\":{\"85\":1}}],[\"设置成\",{\"1\":{\"78\":1}}],[\"设置数据\",{\"1\":{\"74\":1}}],[\"设置时\",{\"1\":{\"68\":1}}],[\"设置和获取节点的文本值\",{\"1\":{\"68\":1}}],[\"设置或获取元素的节点\",{\"1\":{\"65\":1}}],[\"设置或获取元素的表单值\",{\"1\":{\"65\":1}}],[\"设置属性为函数返回值\",{\"1\":{\"65\":1}}],[\"设置属性`\",{\"1\":{\"65\":1}}],[\"设置center就能居中了\",{\"1\":{\"48\":1}}],[\"设定center就能居中\",{\"1\":{\"48\":1}}],[\"想当然的\",{\"1\":{\"48\":2}}],[\"想搭建一个属于自己的博客网站\",{\"1\":{\"3\":1}}],[\"简历和工作经历类\",{\"1\":{\"121\":1}}],[\"简历\",{\"1\":{\"116\":1,\"119\":2,\"121\":1}}],[\"简历类\",{\"1\":{\"116\":1,\"119\":1}}],[\"简历的原型实现\",{\"0\":{\"116\":1}}],[\"简单的说就是水平与垂直的对齐方式\",{\"1\":{\"48\":2}}],[\"简直就是把块元素当画布在使用\",{\"1\":{\"48\":1}}],[\"丝毫不费力气\",{\"1\":{\"48\":1}}],[\"杜航文字的垂直居中技巧\",{\"1\":{\"48\":1}}],[\"你好\",{\"1\":{\"85\":1}}],[\"你可以停止观察\",{\"1\":{\"109\":3}}],[\"你可以使用ctrl+v\",{\"1\":{\"85\":1}}],[\"你可以创建一个分支并使用\",{\"1\":{\"51\":1}}],[\"你可以把它想象成是表格中储存单元格的vertical\",{\"1\":{\"48\":1}}],[\"你把原本横排的文字变成竖排\",{\"1\":{\"48\":1}}],[\"你说的对\",{\"1\":{\"48\":1}}],[\"你就可以看到你的项目在本地能够预览了\",{\"1\":{\"8\":1}}],[\"而是构造函数\",{\"1\":{\"122\":1}}],[\"而是一个类\",{\"1\":{\"117\":1}}],[\"而不论绑定值是否变化\",{\"1\":{\"129\":1}}],[\"而不用使用new来构建\",{\"1\":{\"124\":1}}],[\"而不用担心样式作用域问题\",{\"1\":{\"88\":1}}],[\"而不是原有的被引用对象\",{\"1\":{\"120\":1}}],[\"而不是地址\",{\"1\":{\"117\":1}}],[\"而不是\",{\"1\":{\"117\":1}}],[\"而不是新建实例\",{\"1\":{\"113\":1}}],[\"而不与关键的渲染工作竞争\",{\"1\":{\"109\":1}}],[\"而绑定的\",{\"1\":{\"100\":1}}],[\"而在\",{\"1\":{\"100\":2}}],[\"而在react中可以使用空标签\",{\"1\":{\"93\":1}}],[\"而在css\",{\"1\":{\"48\":1}}],[\"而且各个调用者可能都需要修改其值时\",{\"1\":{\"126\":1}}],[\"而且必须通盘考虑\",{\"1\":{\"125\":1}}],[\"而且增加了初学者的入门难度\",{\"1\":{\"122\":1}}],[\"而且复制引用的对象\",{\"1\":{\"120\":1}}],[\"而且\",{\"1\":{\"99\":1}}],[\"而且有时候还出现样式不生效的情况\",{\"1\":{\"88\":1}}],[\"而且每次还得变着花样取名称\",{\"1\":{\"88\":1}}],[\"而\",{\"1\":{\"81\":2,\"100\":2,\"112\":2,\"117\":1,\"122\":1}}],[\"而后者是执行绑定函数\",{\"1\":{\"76\":1}}],[\"而之前却是按照普通元素进行解析的\",{\"1\":{\"26\":1}}],[\"那些不需要共享的属性和方法\",{\"1\":{\"122\":1}}],[\"那就是无法共享属性和方法\",{\"1\":{\"122\":1}}],[\"那么同样可以在函数中传递参数了\",{\"1\":{\"103\":1}}],[\"那么后者的优先级较高\",{\"1\":{\"100\":1}}],[\"那么在写的时候就可以这样写\",{\"1\":{\"103\":1}}],[\"那么在\",{\"1\":{\"93\":1}}],[\"那里的\",{\"1\":{\"81\":1}}],[\"那我们就为单个子组件多加两个兄弟吧\",{\"1\":{\"48\":1}}],[\"那你同样可以设定left\",{\"1\":{\"48\":1}}],[\"既然使用函数式组件\",{\"1\":{\"103\":1}}],[\"既然是多行子元素才能用\",{\"1\":{\"48\":1}}],[\"既然可以使用第一种方式对行元素达成垂直居中的话\",{\"1\":{\"48\":1}}],[\"且支持度从很早期的ie5就有支持了\",{\"1\":{\"48\":1}}],[\"且有时可能会有单个的情况出现时\",{\"1\":{\"48\":1}}],[\"且原始代码干净无比\",{\"1\":{\"48\":1}}],[\"的构造函数\",{\"1\":{\"122\":2}}],[\"的创始人\",{\"1\":{\"122\":1}}],[\"的介绍\",{\"1\":{\"118\":1}}],[\"的值赋给\",{\"1\":{\"131\":1}}],[\"的值赋值给了\",{\"1\":{\"112\":1}}],[\"的值为\",{\"1\":{\"112\":1}}],[\"的值仍然是从堆里获取\",{\"1\":{\"112\":1}}],[\"的详细介绍\",{\"1\":{\"112\":1}}],[\"的数据项类型一共分为以下几种\",{\"1\":{\"112\":1}}],[\"的数据类型有一定的了解\",{\"1\":{\"112\":1}}],[\"的内容转换为\",{\"1\":{\"103\":1}}],[\"的转译来支持\",{\"1\":{\"102\":1}}],[\"的转换\",{\"1\":{\"55\":1}}],[\"的写法\",{\"1\":{\"100\":1}}],[\"的保留字\",{\"1\":{\"100\":1}}],[\"的形式\",{\"1\":{\"100\":1}}],[\"的样式写义在\",{\"1\":{\"100\":1}}],[\"的初始值被设置为了\",{\"1\":{\"100\":1}}],[\"的模板语法中是不区分\",{\"1\":{\"100\":1}}],[\"的文档中关于插值绑定部分是重点说明了\",{\"1\":{\"100\":1}}],[\"的时候并没有考虑到组件怎么切分和抽象\",{\"1\":{\"99\":1}}],[\"的时候指定初始值\",{\"1\":{\"96\":1}}],[\"的完全编程能力会让你更加能够得心应手\",{\"1\":{\"99\":1}}],[\"的语法来写\",{\"1\":{\"97\":1}}],[\"的概念\",{\"1\":{\"96\":1,\"122\":1}}],[\"的效果\",{\"1\":{\"95\":1}}],[\"的一个语法糖\",{\"1\":{\"93\":1}}],[\"的\",{\"1\":{\"88\":1,\"100\":1}}],[\"的解决方案\",{\"1\":{\"88\":1}}],[\"的生态中\",{\"1\":{\"88\":1}}],[\"的方式写在一起\",{\"1\":{\"100\":1}}],[\"的方式来添加\",{\"1\":{\"100\":1}}],[\"的方式来写\",{\"1\":{\"99\":1}}],[\"的方式来写组件\",{\"1\":{\"88\":1}}],[\"的方式来实现\",{\"1\":{\"91\":1}}],[\"的方式\",{\"1\":{\"88\":1}}],[\"的方法创建一个对象\",{\"1\":{\"112\":1}}],[\"的方法\",{\"1\":{\"0\":1}}],[\"的过程中不得考虑一个样式的问题\",{\"1\":{\"88\":1}}],[\"的行为\",{\"1\":{\"81\":1}}],[\"的结果\",{\"1\":{\"81\":1}}],[\"的回调管理函数\",{\"1\":{\"81\":1}}],[\"的基本使用形式是\",{\"1\":{\"78\":1}}],[\"的基本使用方式是\",{\"1\":{\"75\":1}}],[\"的使用方式与\",{\"1\":{\"75\":1}}],[\"的另一种调用形式\",{\"1\":{\"75\":1}}],[\"的祖父母\",{\"1\":{\"51\":1}}],[\"的父级\",{\"1\":{\"51\":1}}],[\"的招式\",{\"1\":{\"48\":1}}],[\"的个别对齐方式只要对单一子层元素设定align\",{\"1\":{\"48\":1}}],[\"由于浅复制是浅表复制\",{\"1\":{\"119\":1}}],[\"由于\",{\"1\":{\"98\":1}}],[\"由于translate的百分比单位是利用元素自身的尺寸作为100\",{\"1\":{\"48\":1}}],[\"由于grid元素对空间解读的特殊性\",{\"1\":{\"48\":1}}],[\"由于flex元素对空间解读的特殊性\",{\"1\":{\"48\":1}}],[\"由于map中不会出现相同的key值\",{\"1\":{\"0\":1}}],[\"算是个传统技法的延伸方式\",{\"1\":{\"48\":1}}],[\"把引用对象的变量指向复制过的新对象\",{\"1\":{\"120\":1}}],[\"把数据存在内部闭包的一个结构中\",{\"1\":{\"74\":1}}],[\"把数组的每一个元素作为key存到map中\",{\"1\":{\"0\":1}}],[\"把字符串解析为对象\",{\"1\":{\"74\":1}}],[\"把它设定成一半的剩余空间就能做到把内容数据准确的推到垂直中间位置\",{\"1\":{\"48\":1}}],[\"搭配\",{\"1\":{\"48\":1}}],[\"搭配一个属于自己的域名显然会让自己的博客变得高大上起来\",{\"1\":{\"10\":1}}],[\"适用场景\",{\"0\":{\"126\":1}}],[\"适用于所有类似的存储命令\",{\"1\":{\"51\":1}}],[\"适用于所有类似的\",{\"1\":{\"51\":1}}],[\"适用flex\",{\"1\":{\"48\":1}}],[\"适用情景\",{\"1\":{\"48\":23}}],[\"说了很多在模板中如何定义和使用作用域插槽\",{\"1\":{\"96\":1}}],[\"说那么多结果重点就一行字是哪招啦\",{\"1\":{\"48\":1}}],[\"说明\",{\"1\":{\"5\":1,\"79\":1}}],[\"老板赚钱好开心\",{\"1\":{\"48\":1}}],[\"小孩考试一百分\",{\"1\":{\"48\":1}}],[\"我是组件属性\",{\"1\":{\"100\":2}}],[\"我是dom属性\",{\"1\":{\"100\":3}}],[\"我是dom属性值\",{\"1\":{\"100\":1}}],[\"我是\",{\"1\":{\"100\":1}}],[\"我的数据的确垂直居中啦\",{\"1\":{\"48\":1}}],[\"我也加薪\",{\"1\":{\"48\":1}}],[\"我想这答案人人心中自由一把尺\",{\"1\":{\"48\":1}}],[\"我们可能需要根据用户角色进行一些操作权限的判断\",{\"1\":{\"147\":1}}],[\"我们可以通过全局自定义指令来处理\",{\"1\":{\"147\":1}}],[\"我们可以在\",{\"1\":{\"100\":1}}],[\"我们可以很轻松的利用calc\",{\"1\":{\"48\":1}}],[\"我们常规方法是在每一个表单的\",{\"1\":{\"140\":1}}],[\"我们先得对\",{\"1\":{\"112\":1}}],[\"我们会得到通知\",{\"1\":{\"109\":1}}],[\"我们竟然可以在网页中直接做计算\",{\"1\":{\"48\":1}}],[\"我们仅需要把模板设置成三列\",{\"1\":{\"48\":1}}],[\"我们只要在父层元素设定display\",{\"1\":{\"48\":2}}],[\"我们只要设定父层display\",{\"1\":{\"48\":1}}],[\"我们利用绝对定位时的top\",{\"1\":{\"48\":1}}],[\"我们利用了github的多分支来管理站点文件\",{\"1\":{\"15\":1}}],[\"我们将利用\",{\"1\":{\"48\":1}}],[\"我们要\",{\"1\":{\"15\":1}}],[\"到底要不要设计\",{\"1\":{\"122\":1}}],[\"到底要不要抛弃float拥抱flex\",{\"1\":{\"48\":1}}],[\"到此\",{\"1\":{\"20\":1}}],[\"后台管理系统开发日常总结\",{\"1\":{\"103\":1}}],[\"后\",{\"1\":{\"79\":2,\"112\":1}}],[\"后端的宝物\",{\"1\":{\"48\":1}}],[\"后面的高阶方法会添加去掉重复\",{\"1\":{\"0\":1}}],[\"位移居中元素自身宽与高的50\",{\"1\":{\"48\":1}}],[\"才能正常居中\",{\"1\":{\"48\":1}}],[\"百分比也算\",{\"1\":{\"48\":1}}],[\"神奇吧\",{\"1\":{\"48\":1}}],[\"绝对定位元素就抓到了可运用的空间了\",{\"1\":{\"48\":1}}],[\"绝对定位在这个例子中会设置top\",{\"1\":{\"48\":1}}],[\"时完成一次拖拽\",{\"1\":{\"154\":1}}],[\"时计算每次移动的横向距离和纵向距离的变化值\",{\"1\":{\"154\":1}}],[\"时记录目标元素当前的\",{\"1\":{\"154\":1}}],[\"时的一个回调函数\",{\"1\":{\"78\":1}}],[\"时\",{\"1\":{\"48\":1}}],[\"負值<\",{\"1\":{\"48\":1}}],[\"来进行显示隐藏\",{\"1\":{\"147\":1}}],[\"来进行事件绑定\",{\"1\":{\"75\":1}}],[\"来扩展它\",{\"1\":{\"123\":1}}],[\"来做条件判断\",{\"1\":{\"102\":1}}],[\"来访问静态插槽的内容\",{\"1\":{\"96\":1}}],[\"来达到在模板中\",{\"1\":{\"95\":1}}],[\"来指定样式类\",{\"1\":{\"90\":1}}],[\"来写\",{\"1\":{\"88\":1}}],[\"来实现包裹元素\",{\"1\":{\"93\":1}}],[\"来实现\",{\"1\":{\"88\":1}}],[\"来将百分比及时且动态的计算出实际要的是什么高度\",{\"1\":{\"48\":1}}],[\"来让子元素增加到多个\",{\"1\":{\"48\":1}}],[\"来让绝对定位元素取得空间可运用范围\",{\"1\":{\"48\":1}}],[\"来抓取空间高度的50\",{\"1\":{\"48\":1}}],[\"来必力等也能用\",{\"1\":{\"13\":1}}],[\"重点在于你是否有妥善运用才是重点\",{\"1\":{\"48\":1}}],[\"重新部署再打开就能看到效果了\",{\"1\":{\"12\":1}}],[\"谁说绝对定位要少用\",{\"1\":{\"48\":1}}],[\"2d\",{\"1\":{\"152\":1}}],[\"2秒后执行函数\",{\"1\":{\"134\":1}}],[\"24\",{\"1\":{\"116\":2,\"119\":2}}],[\"29\",{\"1\":{\"116\":3,\"119\":3}}],[\"21\",{\"1\":{\"112\":4}}],[\"22\",{\"1\":{\"74\":1}}],[\"2\",{\"1\":{\"48\":1,\"73\":3,\"74\":7,\"81\":5,\"82\":1,\"85\":1,\"96\":1,\"116\":1,\"119\":1,\"134\":3,\"149\":1,\"152\":1}}],[\"250px\",{\"1\":{\"48\":20}}],[\"2018\",{\"1\":{\"121\":2}}],[\"2015\",{\"1\":{\"121\":4}}],[\"2012\",{\"1\":{\"121\":2,\"123\":2}}],[\"2019\",{\"1\":{\"98\":1}}],[\"2001\",{\"1\":{\"123\":3}}],[\"2003\",{\"1\":{\"119\":4}}],[\"2006\",{\"1\":{\"116\":2,\"119\":1}}],[\"2000\",{\"1\":{\"116\":3,\"119\":1,\"134\":1}}],[\"200px\",{\"1\":{\"48\":2}}],[\"200\",{\"1\":{\"43\":1,\"152\":1}}],[\"20\",{\"1\":{\"12\":1,\"74\":2,\"85\":1,\"112\":2,\"152\":1}}],[\"57\",{\"1\":{\"106\":1}}],[\"5中引入的回调管理对象\",{\"1\":{\"81\":1}}],[\"52\",{\"1\":{\"74\":1}}],[\"5\",{\"1\":{\"48\":1,\"85\":1,\"106\":2}}],[\"50px\",{\"1\":{\"48\":1}}],[\"50\",{\"1\":{\"48\":15,\"66\":1}}],[\"500px\",{\"1\":{\"48\":22}}],[\"500\",{\"1\":{\"43\":1}}],[\"5px空间这个小缺陷\",{\"1\":{\"48\":1}}],[\"唯独需要特别处理掉inline\",{\"1\":{\"48\":1}}],[\"属性及移出可视区域\",{\"1\":{\"131\":1}}],[\"属性放在\",{\"1\":{\"122\":1}}],[\"属性进行改写\",{\"1\":{\"122\":1}}],[\"属性是独立的\",{\"1\":{\"122\":1}}],[\"属性中为\",{\"1\":{\"100\":1}}],[\"属性中包括某单词\",{\"1\":{\"57\":1}}],[\"属性命名一样的场景\",{\"1\":{\"100\":1}}],[\"属性初始化为\",{\"1\":{\"100\":1}}],[\"属性始终没有变化\",{\"1\":{\"100\":1}}],[\"属性值\",{\"1\":{\"100\":2}}],[\"属性的\",{\"1\":{\"100\":1}}],[\"属性的值表示当前值\",{\"1\":{\"100\":1}}],[\"属性的值指定了初始值\",{\"1\":{\"100\":1}}],[\"属性的区别\",{\"1\":{\"100\":1}}],[\"属性的写法应该是很传统的垂直居中的技巧了\",{\"1\":{\"48\":1}}],[\"属性和\",{\"1\":{\"100\":3}}],[\"属性\",{\"1\":{\"95\":1,\"96\":1,\"100\":5,\"103\":1,\"122\":1,\"131\":2,\"145\":1}}],[\"属性不等于指定值\",{\"1\":{\"57\":1}}],[\"属性完全等于指定值\",{\"1\":{\"57\":1}}],[\"属性选择器\",{\"0\":{\"57\":1}}],[\"属性align\",{\"1\":{\"48\":1}}],[\"属性越前则优先级越高\",{\"1\":{\"24\":1}}],[\"伪类元素搭配\",{\"1\":{\"48\":1}}],[\"从结果显示我们可以看到\",{\"1\":{\"119\":1}}],[\"从dom到浏览器性能\",{\"1\":{\"109\":1}}],[\"从懒加载关键内容到非侵入式性能监控\",{\"1\":{\"109\":1}}],[\"从调用链中移除指定的函数\",{\"1\":{\"82\":1}}],[\"从功能上看\",{\"1\":{\"81\":1}}],[\"从\",{\"1\":{\"55\":2,\"123\":1}}],[\"从而实现页面或组件水印效果\",{\"1\":{\"152\":1}}],[\"从而获得一个新的对象\",{\"1\":{\"115\":1}}],[\"从而导致提交历史混乱\",{\"1\":{\"51\":1}}],[\"从而计算出每个节点在屏幕中的位置\",{\"1\":{\"26\":1}}],[\"从此我们再也不用在那边绞尽脑汁的数学计算了\",{\"1\":{\"48\":1}}],[\"从使你的数据是包含了标题跟内容在内也可以正常的垂直居中了\",{\"1\":{\"48\":1}}],[\"并改变元素的\",{\"1\":{\"154\":1}}],[\"并复制\",{\"1\":{\"131\":1}}],[\"并插入到\",{\"1\":{\"131\":1}}],[\"并设置\",{\"1\":{\"131\":1}}],[\"并在请求的时候返回对应类型的克隆对象\",{\"1\":{\"123\":1}}],[\"并在该inline\",{\"1\":{\"48\":1}}],[\"并让类\",{\"1\":{\"123\":1}}],[\"并且每增加或修改一个字段是都需要更新clone方法\",{\"1\":{\"125\":1}}],[\"并且初始化时也是在托管堆分配内存的\",{\"1\":{\"117\":1}}],[\"并且不能改变\",{\"1\":{\"100\":1}}],[\"并不是基本数据类型\",{\"1\":{\"112\":1}}],[\"并不是说我们在开发\",{\"1\":{\"99\":1}}],[\"并置为\",{\"1\":{\"95\":1}}],[\"并回车\",{\"1\":{\"85\":1}}],[\"并将其设定为inline\",{\"1\":{\"48\":1}}],[\"多次点击就会新增多条重复的数据\",{\"1\":{\"136\":1}}],[\"多人协作的时候如何处理依赖并明确自己的功能点\",{\"1\":{\"99\":1}}],[\"多个事件\",{\"1\":{\"75\":1}}],[\"多个or条件\",{\"1\":{\"59\":1}}],[\"多个and条件\",{\"1\":{\"59\":1}}],[\"多行文字的垂直剧种技巧\",{\"1\":{\"48\":1}}],[\"多行文字的垂直居中技巧\",{\"1\":{\"48\":18}}],[\"多对象的css垂直居中技巧\",{\"1\":{\"48\":1}}],[\"多对象的垂直居中技巧\",{\"1\":{\"48\":1}}],[\"多说\",{\"1\":{\"13\":1}}],[\"文字颜色\",{\"1\":{\"152\":1}}],[\"文字会位于行高的垂直中间位置\",{\"1\":{\"48\":1}}],[\"文本或内容发生变化时\",{\"1\":{\"109\":1}}],[\"文本节点\",{\"0\":{\"68\":1}}],[\"文件\",{\"1\":{\"129\":1}}],[\"文件中可以写很多函数式组件来切分更小的粒度\",{\"1\":{\"103\":1}}],[\"文件中\",{\"1\":{\"88\":1}}],[\"文件中不写\",{\"1\":{\"88\":1}}],[\"文件过长的情况\",{\"1\":{\"88\":1}}],[\"文章名\",{\"1\":{\"14\":1}}],[\"导航此类元素最常见到的方式了\",{\"1\":{\"48\":1}}],[\"便深入研究了一下\",{\"1\":{\"112\":1}}],[\"便总结了一下\",{\"1\":{\"48\":1}}],[\"便完成了对站点的一些简单管理\",{\"1\":{\"20\":1}}],[\"vnode\",{\"1\":{\"134\":1,\"141\":1}}],[\"vnode数组\",{\"1\":{\"103\":1}}],[\"void\",{\"1\":{\"115\":1,\"116\":4,\"119\":4,\"121\":3,\"123\":2}}],[\"vm\",{\"1\":{\"89\":1,\"100\":1}}],[\"vue常用自定义指令\",{\"0\":{\"129\":1}}],[\"vue\",{\"0\":{\"88\":1},\"1\":{\"88\":13,\"93\":2,\"94\":1,\"95\":1,\"96\":4,\"97\":1,\"98\":1,\"99\":1,\"100\":5,\"103\":1,\"129\":9,\"145\":2},\"2\":{\"105\":1,\"157\":2}}],[\"version\",{\"1\":{\"106\":1}}],[\"version=\",{\"1\":{\"74\":1}}],[\"vertical\",{\"1\":{\"43\":1,\"45\":1,\"48\":4},\"2\":{\"50\":1}}],[\"var\",{\"1\":{\"69\":1,\"74\":7,\"75\":3,\"81\":6,\"82\":1,\"85\":12,\"122\":5,\"141\":1,\"145\":1,\"152\":2}}],[\"validateemoji\",{\"1\":{\"140\":2}}],[\"val\",{\"1\":{\"65\":5,\"141\":2,\"145\":2}}],[\"valuetype\",{\"1\":{\"117\":2}}],[\"value=复制内容文本1\",{\"1\":{\"85\":1}}],[\"value=\",{\"1\":{\"85\":4,\"100\":2}}],[\"value2\",{\"1\":{\"59\":1}}],[\"value\",{\"1\":{\"57\":3,\"59\":1,\"66\":4,\"74\":6,\"85\":5,\"97\":3,\"100\":2,\"112\":1,\"119\":2,\"131\":7,\"134\":4,\"138\":1,\"141\":2,\"145\":1,\"149\":1,\"152\":3}}],[\"visiting\",{\"1\":{\"54\":1}}],[\"visible\",{\"1\":{\"27\":2,\"30\":3,\"58\":1}}],[\"visibility\",{\"1\":{\"27\":1,\"58\":1}}],[\"v\",{\"0\":{\"96\":1},\"1\":{\"51\":3,\"89\":3,\"91\":3,\"95\":2,\"96\":12,\"97\":6,\"98\":1,\"100\":2,\"102\":3,\"129\":8,\"132\":2,\"135\":2,\"139\":2,\"140\":1,\"142\":3,\"146\":2,\"147\":2,\"149\":1,\"150\":3,\"152\":1,\"155\":2}}],[\"xs\",{\"1\":{\"100\":1}}],[\"xhtml1\",{\"1\":{\"85\":2}}],[\"xhtml\",{\"1\":{\"85\":2}}],[\"x\",{\"1\":{\"43\":2,\"44\":1,\"74\":2,\"96\":1,\"109\":1,\"154\":6}}],[\"xx公司\",{\"1\":{\"116\":3,\"119\":1,\"121\":2}}],[\"xxx\",{\"1\":{\"90\":1,\"146\":1}}],[\"xx\",{\"1\":{\"43\":2,\"90\":1,\"100\":4}}],[\"xmlns=\",{\"1\":{\"85\":1}}],[\"xmldoc\",{\"1\":{\"74\":2}}],[\"xml即可\",{\"1\":{\"12\":1}}],[\"xml\",{\"1\":{\"12\":1,\"74\":2,\"78\":1}}],[\"外边线\",{\"0\":{\"41\":1}}],[\"外层循环元素\",{\"1\":{\"0\":1}}],[\"四边\",{\"0\":{\"36\":1}}],[\"高级部分\",{\"0\":{\"93\":1}}],[\"高的inline\",{\"1\":{\"48\":1}}],[\"高\",{\"0\":{\"31\":1}}],[\"宽\",{\"0\":{\"30\":1}}],[\"z|rns\",{\"1\":{\"140\":1,\"141\":1}}],[\"za\",{\"1\":{\"140\":1,\"141\":1}}],[\"zz公司\",{\"1\":{\"119\":3}}],[\"zz企业\",{\"1\":{\"119\":1}}],[\"zeroclipboard\",{\"1\":{\"85\":2}}],[\"z\",{\"1\":{\"28\":1}}],[\"|s\",{\"1\":{\"140\":1,\"141\":1}}],[\"||\",{\"1\":{\"36\":10,\"38\":8,\"41\":4,\"43\":4,\"44\":6,\"94\":1,\"123\":1,\"152\":2}}],[\"|\",{\"1\":{\"27\":27,\"28\":8,\"30\":9,\"31\":3,\"33\":5,\"34\":5,\"37\":21,\"38\":9,\"42\":6,\"43\":48,\"44\":5,\"45\":27,\"98\":2}}],[\"影响了用户体验\",{\"1\":{\"26\":1}}],[\"然而由于该元素的占位发生变化\",{\"1\":{\"26\":1}}],[\"然后定义\",{\"1\":{\"123\":1}}],[\"然后由工厂方法提供给调用者\",{\"1\":{\"112\":1}}],[\"然后可以利用\",{\"1\":{\"102\":1}}],[\"然后使用\",{\"1\":{\"100\":1}}],[\"然后再看一下在\",{\"1\":{\"100\":1}}],[\"然后用于方法中\",{\"1\":{\"98\":1}}],[\"然后引入组件中\",{\"1\":{\"98\":1}}],[\"然后在入口文件中进行\",{\"1\":{\"129\":1}}],[\"然后在\",{\"1\":{\"100\":1}}],[\"然后在父组件中以\",{\"1\":{\"96\":1}}],[\"然后在文件中\",{\"1\":{\"88\":1}}],[\"然后在根据execcommand复制选中内容\",{\"1\":{\"85\":1}}],[\"然后样式都嵌套写在这个\",{\"1\":{\"88\":1}}],[\"然后\",{\"1\":{\"81\":1,\"122\":1}}],[\"然后根据状态来依次调用这些函数\",{\"1\":{\"81\":1}}],[\"然后根据排序后的结果进行遍历及相邻元素比对\",{\"1\":{\"0\":1}}],[\"然后就是一个简单的上层函数\",{\"1\":{\"78\":1}}],[\"然后开始遍历每个树结点的css样式进行解析\",{\"1\":{\"26\":1}}],[\"然后点击update即可\",{\"1\":{\"18\":1}}],[\"然后你就可以在source\",{\"1\":{\"14\":1}}],[\"然后你可以去这个地址里面找到你想要的主题\",{\"1\":{\"11\":1}}],[\"然后cd到该文件夹下\",{\"1\":{\"6\":1}}],[\"然后输入cmd确定\",{\"1\":{\"5\":1}}],[\"然后数组去重\",{\"1\":{\"0\":1}}],[\"当作一个普通的点击事件\",{\"1\":{\"134\":1}}],[\"当用户按下按钮时触发\",{\"1\":{\"134\":1}}],[\"当传进来的值更新的时候触发\",{\"1\":{\"131\":1,\"134\":1}}],[\"当运行以下代码时\",{\"1\":{\"112\":1}}],[\"当一个元素的属性\",{\"1\":{\"109\":1}}],[\"当一个函数被传递之后\",{\"1\":{\"74\":1}}],[\"当我们在输入框中添加或者删除文字时\",{\"1\":{\"100\":1}}],[\"当我们需要完成\",{\"1\":{\"81\":1}}],[\"当\",{\"1\":{\"95\":1}}],[\"当有回调函数返回\",{\"1\":{\"82\":1}}],[\"当然我们也可以把方法提供出去\",{\"1\":{\"96\":1}}],[\"当然如果说元素的标签是不同类型的那就需要额外添加标识来判断了\",{\"1\":{\"93\":1}}],[\"当然也可以不采用\",{\"1\":{\"88\":1}}],[\"当然不止这么简单的功能\",{\"1\":{\"88\":1}}],[\"当然像我这么嫩的开发者当然是第一次看到啦\",{\"1\":{\"48\":1}}],[\"当然你也能有其他解法\",{\"1\":{\"48\":1}}],[\"当然没有理由不能做到多行啊~但是你需要将多个元素或多行元素当成一个行元素来看待\",{\"1\":{\"48\":1}}],[\"当元素设置为绝对定位后\",{\"1\":{\"48\":1}}],[\"当浏览器解析到position的时候突然发现该元素是绝对定位元素需要脱离文档流\",{\"1\":{\"26\":1}}],[\"当前时间戳\",{\"1\":{\"74\":1}}],[\"当前分支参考\",{\"1\":{\"51\":1}}],[\"当前索引值\",{\"1\":{\"0\":1}}],[\"当前元素\",{\"1\":{\"0\":1}}],[\"则重新计算执行时间\",{\"1\":{\"138\":1}}],[\"则判定为一次长按\",{\"1\":{\"134\":1}}],[\"则可以使用原型模式\",{\"1\":{\"126\":1}}],[\"则不然\",{\"1\":{\"100\":1}}],[\"则整体结果为\",{\"1\":{\"81\":1}}],[\"则新添加的对应的函数会被立即执行\",{\"1\":{\"81\":1}}],[\"则默认是\",{\"1\":{\"77\":1}}],[\"则需要倒回去重新渲染正如按照这样的书写书序\",{\"1\":{\"26\":1}}],[\"则删去这个值\",{\"1\":{\"0\":1}}],[\"绘制render树\",{\"1\":{\"26\":1}}],[\"各个节点的css定义和以及它们的从属关系\",{\"1\":{\"26\":1}}],[\"浏览器已经知道那些网页中有哪些节点\",{\"1\":{\"26\":1}}],[\"浏览器的渲染流程为\",{\"1\":{\"26\":1}}],[\"有权限\",{\"1\":{\"149\":1}}],[\"有些提交保存按钮有时候会在短时间内被点击多次\",{\"1\":{\"136\":1}}],[\"有一个缺点\",{\"1\":{\"122\":1}}],[\"有四种不同类型的观察者可以观察不同的东西\",{\"1\":{\"109\":1}}],[\"有使用过\",{\"1\":{\"100\":1}}],[\"有很多\",{\"1\":{\"88\":1}}],[\"有用的标志\",{\"1\":{\"51\":2}}],[\"有了render树\",{\"1\":{\"26\":1}}],[\"有账号的看下面\",{\"1\":{\"7\":1}}],[\"布局render树\",{\"1\":{\"26\":1}}],[\"解除该元素在文档中所占位置\",{\"1\":{\"26\":1}}],[\"解析表单参数项\",{\"1\":{\"80\":2}}],[\"解析css构建css树\",{\"1\":{\"26\":1}}],[\"解析html构建dom树\",{\"1\":{\"26\":1}}],[\"解释一下\",{\"1\":{\"6\":1}}],[\"提高工作效率\",{\"1\":{\"99\":1}}],[\"提供了很多事件修饰符来快速处理事件的冒泡\",{\"1\":{\"94\":1}}],[\"提升浏览器渲染dom的性能\",{\"1\":{\"25\":1}}],[\"提交记录\",{\"1\":{\"19\":1}}],[\"回调链被激发后\",{\"1\":{\"82\":1}}],[\"回调链只能被激发一次\",{\"1\":{\"82\":1}}],[\"回调函数执行时的上下文\",{\"1\":{\"78\":1}}],[\"回流\",{\"1\":{\"25\":1}}],[\"回到git\",{\"1\":{\"7\":1}}],[\"减少浏览器reflow\",{\"1\":{\"25\":1}}],[\"背景类\",{\"0\":{\"44\":1}}],[\"背景\",{\"0\":{\"136\":1,\"140\":1,\"143\":1,\"147\":1},\"1\":{\"24\":1}}],[\"背\",{\"1\":{\"24\":1}}],[\"字体大小即可\",{\"1\":{\"152\":1}}],[\"字体类\",{\"0\":{\"43\":1}}],[\"字体\",{\"1\":{\"24\":1,\"152\":1}}],[\"字\",{\"1\":{\"24\":1}}],[\"边圆角\",{\"0\":{\"40\":1}}],[\"边颜色\",{\"0\":{\"39\":1}}],[\"边样式\",{\"0\":{\"38\":1}}],[\"边宽\",{\"0\":{\"37\":1}}],[\"边框类\",{\"0\":{\"32\":1}}],[\"边框\",{\"1\":{\"24\":1}}],[\"边\",{\"1\":{\"24\":1}}],[\"形状类\",{\"0\":{\"29\":1}}],[\"形状\",{\"1\":{\"24\":1}}],[\"形\",{\"1\":{\"24\":1}}],[\"定义一个延迟执行的方法\",{\"1\":{\"138\":1}}],[\"定义变量\",{\"1\":{\"134\":1}}],[\"定义是一样的\",{\"1\":{\"81\":1}}],[\"定位类\",{\"0\":{\"28\":1}}],[\"定位\",{\"1\":{\"24\":1}}],[\"定\",{\"1\":{\"24\":1}}],[\"状态类\",{\"0\":{\"27\":1}}],[\"状态\",{\"1\":{\"24\":1}}],[\"状\",{\"1\":{\"24\":1}}],[\"状定形边字背其\",{\"1\":{\"24\":1}}],[\"上加上\",{\"1\":{\"155\":1}}],[\"上面简历的原型实现代码\",{\"1\":{\"117\":1}}],[\"上面的示例最终生成的html中会将\",{\"1\":{\"103\":1}}],[\"上面的示例其实就是官方的示例\",{\"1\":{\"96\":1}}],[\"上面介绍了很多插槽相关的知识点足已说明其在开发过程中的重要性\",{\"1\":{\"96\":1}}],[\"上面代码的输入结果是\",{\"1\":{\"81\":1}}],[\"上一个绑定函数的返回值\",{\"1\":{\"77\":1}}],[\"上右下左顺时针\",{\"1\":{\"24\":1}}],[\"上传到github\",{\"1\":{\"3\":1}}],[\"口诀\",{\"0\":{\"24\":1}}],[\"本质上是个\",{\"1\":{\"117\":1}}],[\"本身是作为渲染结果被创建的\",{\"1\":{\"95\":1}}],[\"本人也没有写过\",{\"1\":{\"88\":1}}],[\"本地和远程\",{\"1\":{\"51\":1}}],[\"本地站点恢复\",{\"0\":{\"20\":1}}],[\"本文来讲一下js实现复制功能的几种方法\",{\"1\":{\"85\":1}}],[\"本文为前端学习笔记之\",{\"1\":{\"54\":1}}],[\"本文统计一下\",{\"1\":{\"51\":1,\"106\":1}}],[\"本文整理一下前端开发三大工具之一\",{\"1\":{\"23\":1}}],[\"此处不做讨论\",{\"1\":{\"112\":1}}],[\"此观察者非常重要\",{\"1\":{\"109\":1}}],[\"此外在模板语法中是无法区分\",{\"1\":{\"100\":1}}],[\"此外具名插槽同样也有缩写语法\",{\"1\":{\"96\":1}}],[\"此外\",{\"1\":{\"88\":1}}],[\"此属性是align\",{\"1\":{\"48\":2}}],[\"此技巧就能用到了\",{\"1\":{\"48\":1}}],[\"此方法可是自古以来流传多年的居中方式呢\",{\"1\":{\"48\":1}}],[\"此方式应该算是最方便的了\",{\"1\":{\"48\":1}}],[\"此方式在以往其实是个非常棒的垂直居中解决方案\",{\"1\":{\"48\":1}}],[\"此方式的好处在于子元素居中可以不需要特别设定高度\",{\"1\":{\"48\":1}}],[\"此方式的原理是在于将单行文字的行高设定后\",{\"1\":{\"48\":1}}],[\"此时\",{\"1\":{\"112\":1}}],[\"此时的css样式的遍历顺序完全是按照之前的书写顺序\",{\"1\":{\"26\":1}}],[\"此时不需要执行hexo\",{\"1\":{\"20\":1}}],[\"此后可省\",{\"1\":{\"19\":1}}],[\"此文介绍数组去重方法\",{\"1\":{\"0\":1}}],[\"初始化\",{\"1\":{\"145\":1}}],[\"初始化一个回调管理对象\",{\"1\":{\"82\":1}}],[\"初始化完成之后打开所在的文件夹可以看到以下文件\",{\"1\":{\"6\":1}}],[\"初次push要加\",{\"1\":{\"19\":1}}],[\"下自动唤起键盘\",{\"1\":{\"131\":1}}],[\"下面封装一个懒加载指令兼容两种方法\",{\"1\":{\"145\":1}}],[\"下面以禁止输入表情和特殊字符为例\",{\"1\":{\"141\":1}}],[\"下面分享几个实用的\",{\"1\":{\"129\":1}}],[\"下面提供两种解决办法\",{\"1\":{\"101\":1}}],[\"下面是使用\",{\"1\":{\"102\":1}}],[\"下面是改写后的代码\",{\"1\":{\"96\":1}}],[\"下面是在事件处理函数中使用修饰符的例子\",{\"1\":{\"94\":1}}],[\"下面是一个通用的骨架\",{\"1\":{\"88\":1}}],[\"下面给出的事件修饰符是需要在事件处理函数中写出对应的等价操作\",{\"1\":{\"94\":1}}],[\"下面\",{\"1\":{\"88\":1}}],[\"下\",{\"1\":{\"19\":1,\"100\":1}}],[\"下载地址\",{\"1\":{\"4\":1}}],[\"使用防抖函数限制规定时间内只能点击一次\",{\"1\":{\"137\":1}}],[\"使用完后\",{\"1\":{\"112\":1}}],[\"使用中发现作用域插槽也挂在这个下面\",{\"1\":{\"103\":1}}],[\"使用第三方库解决\",{\"1\":{\"102\":1}}],[\"使用propsxx\",{\"1\":{\"101\":1}}],[\"使用展开\",{\"1\":{\"101\":1}}],[\"使用原始的vnode指令数据格式\",{\"1\":{\"97\":1}}],[\"使用为例\",{\"1\":{\"97\":1}}],[\"使用三目运算表达式\",{\"1\":{\"97\":1}}],[\"使用方式如下\",{\"1\":{\"94\":1}}],[\"使用模板来写\",{\"1\":{\"88\":1}}],[\"使用jquery需要在整个文档被浏览器完全加载后才开始进行\",{\"1\":{\"54\":1}}],[\"使用write\",{\"1\":{\"48\":1}}],[\"使用\",{\"0\":{\"132\":1,\"135\":1,\"139\":1,\"142\":1,\"146\":1,\"150\":1,\"155\":1},\"1\":{\"48\":1,\"55\":1,\"75\":1,\"81\":1,\"88\":2,\"96\":2,\"97\":1,\"102\":1,\"122\":1,\"152\":2}}],[\"使用git\",{\"1\":{\"19\":1,\"20\":1}}],[\"使用站点仓库地址关联\",{\"1\":{\"16\":1}}],[\"使用http\",{\"1\":{\"10\":1}}],[\"observing\",{\"1\":{\"109\":1}}],[\"observe\",{\"1\":{\"109\":4,\"145\":3}}],[\"observer\",{\"0\":{\"109\":1},\"1\":{\"109\":12},\"2\":{\"111\":1}}],[\"obj2\",{\"1\":{\"115\":2}}],[\"obj1\",{\"1\":{\"115\":2}}],[\"object2\",{\"1\":{\"74\":2}}],[\"object\",{\"1\":{\"74\":2,\"85\":2,\"116\":2,\"117\":1,\"119\":2,\"121\":2,\"122\":2,\"123\":1,\"129\":1}}],[\"object1\",{\"1\":{\"69\":1,\"74\":2}}],[\"obj是一个dom对象时才能使用\",{\"1\":{\"55\":1}}],[\"obj\",{\"1\":{\"0\":7,\"55\":4,\"76\":1,\"81\":4,\"82\":4,\"85\":5}}],[\"ocopy\",{\"1\":{\"85\":2}}],[\"off\",{\"1\":{\"75\":5}}],[\"offsettop\",{\"1\":{\"154\":1}}],[\"offsetleft\",{\"1\":{\"154\":1}}],[\"offset是相对于\",{\"1\":{\"66\":1}}],[\"offset\",{\"1\":{\"66\":1}}],[\"onmouseup\",{\"1\":{\"154\":3}}],[\"onmousemove\",{\"1\":{\"154\":3}}],[\"onmousedown\",{\"1\":{\"154\":2}}],[\"onpreview\",{\"1\":{\"101\":1}}],[\"onxx\",{\"1\":{\"101\":1}}],[\"oninput=\",{\"1\":{\"100\":1}}],[\"onclick=\",{\"1\":{\"85\":4,\"92\":2,\"96\":1,\"103\":1}}],[\"once或\",{\"1\":{\"94\":1}}],[\"once\",{\"1\":{\"82\":1,\"94\":2}}],[\"one\",{\"1\":{\"75\":1,\"93\":1}}],[\"on\",{\"1\":{\"75\":13,\"76\":4,\"92\":1,\"101\":3,\"103\":1,\"140\":1}}],[\"onload=\",{\"1\":{\"64\":1,\"85\":1}}],[\"only\",{\"1\":{\"59\":1}}],[\"o\",{\"1\":{\"74\":6}}],[\"old\",{\"1\":{\"65\":2}}],[\"other\",{\"1\":{\"65\":2,\"75\":1}}],[\"odd\",{\"1\":{\"56\":1,\"59\":1}}],[\"oriented\",{\"1\":{\"122\":1}}],[\"origin\",{\"1\":{\"16\":1,\"19\":1,\"51\":1}}],[\"org\",{\"1\":{\"85\":5}}],[\"or\",{\"1\":{\"51\":1,\"109\":1}}],[\"option\",{\"1\":{\"91\":2,\"93\":2,\"95\":6}}],[\"options\",{\"1\":{\"91\":1,\"93\":2,\"95\":2,\"145\":2}}],[\"operator\",{\"1\":{\"102\":1}}],[\"opera\",{\"1\":{\"85\":1}}],[\"open\",{\"1\":{\"45\":2}}],[\"opacity\",{\"1\":{\"45\":1,\"58\":1}}],[\"overline\",{\"1\":{\"43\":1}}],[\"overflow\",{\"1\":{\"27\":1}}],[\"outerwidth\",{\"1\":{\"66\":1}}],[\"outerheight\",{\"1\":{\"66\":1}}],[\"outline\",{\"1\":{\"41\":4}}],[\"outset\",{\"1\":{\"37\":1,\"38\":1}}],[\"即可\",{\"1\":{\"142\":1,\"155\":1}}],[\"即可自动居中\",{\"1\":{\"48\":1}}],[\"即复制地址\",{\"1\":{\"118\":1}}],[\"即改变了堆里的值\",{\"1\":{\"112\":1}}],[\"即将\",{\"1\":{\"112\":1}}],[\"即输入框中当前值为空字符串\",{\"1\":{\"100\":1}}],[\"即无内容也无元素\",{\"1\":{\"59\":1}}],[\"即使合并解析为快进\",{\"1\":{\"51\":1}}],[\"即除public下和\",{\"1\":{\"15\":1}}],[\"即public文件夹下的文件\",{\"1\":{\"15\":1}}],[\"即hexo\",{\"1\":{\"9\":1}}],[\"为\",{\"1\":{\"96\":1}}],[\"为函数绑定上下文\",{\"1\":{\"74\":1}}],[\"为此\",{\"1\":{\"15\":1}}],[\"为解决这个问题\",{\"1\":{\"15\":1}}],[\"为仓库取名\",{\"1\":{\"7\":1}}],[\">权限按钮2<\",{\"1\":{\"150\":1}}],[\">权限按钮1<\",{\"1\":{\"150\":1}}],[\">防抖<\",{\"1\":{\"139\":1}}],[\">长按<\",{\"1\":{\"135\":1}}],[\">复制<\",{\"1\":{\"132\":1}}],[\">log\",{\"1\":{\"96\":2}}],[\">native\",{\"1\":{\"92\":1}}],[\">click\",{\"1\":{\"92\":2,\"94\":1}}],[\">css垂直居中<\",{\"1\":{\"48\":1}}],[\">button<\",{\"1\":{\"90\":1}}],[\">用户定义的代码区域<\",{\"1\":{\"85\":1}}],[\"><channel><title>rss\",{\"1\":{\"74\":1}}],[\"><\",{\"1\":{\"64\":1,\"71\":3,\"85\":1,\"90\":3,\"96\":1,\"98\":1,\"100\":3,\"103\":2,\"152\":1,\"155\":1}}],[\">\",{\"1\":{\"48\":45,\"69\":1,\"74\":3,\"85\":18,\"89\":4,\"90\":1,\"91\":3,\"92\":3,\"93\":2,\"95\":2,\"96\":10,\"97\":2,\"98\":2,\"100\":4,\"101\":2,\"103\":5,\"140\":1,\"142\":1,\"145\":2,\"146\":1,\"149\":1,\"150\":3,\"154\":2}}],[\">前往教室\",{\"1\":{\"14\":1}}],[\">=\",{\"1\":{\"0\":1}}],[\"至于markdown\",{\"1\":{\"14\":1}}],[\"博客文章采用markdown格式编写\",{\"1\":{\"14\":1}}],[\"编辑完成之后按照前面说的方式部署\",{\"1\":{\"14\":1}}],[\"聪明的你肯定是知道百度的\",{\"1\":{\"13\":1}}],[\"翻墙吧\",{\"1\":{\"13\":1}}],[\"骚年\",{\"1\":{\"13\":1,\"14\":1}}],[\"但如果判断条件繁琐且多个地方需要判断\",{\"1\":{\"147\":1}}],[\"但如何实现如下面两张图一样的数据传递呢\",{\"1\":{\"112\":1}}],[\"但为何会产生不同的结果呢\",{\"1\":{\"112\":1}}],[\"但目前来看\",{\"1\":{\"88\":1}}],[\"但请谨慎使用\",{\"1\":{\"51\":1}}],[\"但要特别注意的是浏览器对此语法的支持度来说\",{\"1\":{\"48\":1}}],[\"但当时amos很少使用\",{\"1\":{\"48\":1}}],[\"但当你设置了top\",{\"1\":{\"48\":1}}],[\"但同样的你无法反驳的是\",{\"1\":{\"48\":1}}],[\"但这个方法需要注意的是大量使用的话\",{\"1\":{\"48\":1}}],[\"但在grid中就没这个问题\",{\"1\":{\"48\":1}}],[\"但在flex中align\",{\"1\":{\"48\":1}}],[\"但先碰flex再碰float可谓先甜后苦\",{\"1\":{\"48\":1}}],[\"但此方式的缺点是你的定位元素必须有固定的宽高\",{\"1\":{\"48\":1}}],[\"但也很实用了\",{\"1\":{\"48\":1}}],[\"但\",{\"1\":{\"13\":1}}],[\"但是用构造函数生成实例对象\",{\"1\":{\"122\":1}}],[\"但是用的人实在太少\",{\"1\":{\"88\":1}}],[\"但是这个特殊的类却表现出值类型的特点\",{\"1\":{\"117\":1}}],[\"但是个人觉得不建议这样做\",{\"1\":{\"103\":1}}],[\"但是需要插件\",{\"1\":{\"102\":1}}],[\"但是我们依然可以通过\",{\"1\":{\"100\":1}}],[\"但是上面的换成\",{\"1\":{\"100\":1}}],[\"但是也有例外的情况\",{\"1\":{\"100\":1}}],[\"但是多掌握一种方式来灵活变通\",{\"1\":{\"99\":1}}],[\"但是提供的内容却是在父组件渲染的\",{\"1\":{\"96\":1}}],[\"但是有浏览器兼容性问题\",{\"1\":{\"145\":1}}],[\"但是有的并不是组件声明的\",{\"1\":{\"100\":1}}],[\"但是有一个限制是必需有一个外层的包裹元素\",{\"1\":{\"93\":1}}],[\"但是有些时候页面复杂又存在各种条件判断来显示\",{\"1\":{\"88\":1}}],[\"但是难免会遇到命名冲突的情况\",{\"1\":{\"88\":1}}],[\"但是在使用第三库的时候\",{\"1\":{\"101\":1}}],[\"但是在最终编译后的\",{\"1\":{\"100\":1}}],[\"但是在\",{\"1\":{\"88\":1,\"96\":1,\"100\":1}}],[\"但是更多的时候还是推荐直接使用\",{\"1\":{\"88\":1}}],[\"但是功能上还是没有\",{\"1\":{\"88\":1}}],[\"但是如果打开了\",{\"1\":{\"82\":1}}],[\"但是它和\",{\"1\":{\"55\":1}}],[\"但是当我今天子层元素不确定有多少个时\",{\"1\":{\"48\":1}}],[\"但是\",{\"1\":{\"10\":1,\"81\":1,\"88\":1,\"122\":4}}],[\"评论功能为第三方评论系统\",{\"1\":{\"13\":1}}],[\"找到你的放rss的位置\",{\"1\":{\"12\":1}}],[\"按键\",{\"1\":{\"94\":1}}],[\"按键识别等\",{\"1\":{\"94\":1}}],[\"按下键\",{\"1\":{\"77\":1}}],[\"按照计算出来的规则\",{\"1\":{\"26\":1}}],[\"按照这个规则创建才有用\",{\"1\":{\"7\":1}}],[\"按着来就好了\",{\"1\":{\"11\":1}}],[\"里面都是对象\",{\"1\":{\"122\":1}}],[\"里面都会有该主题的如何使用的介绍\",{\"1\":{\"11\":1}}],[\"里面所有的数据类型都是对象\",{\"1\":{\"122\":1}}],[\"里面包含了所有的配置项\",{\"1\":{\"78\":1}}],[\"里面的npm工具很有用啊\",{\"1\":{\"5\":1}}],[\"就清除计时器\",{\"1\":{\"134\":1}}],[\"就会同时影响到两个实例对象\",{\"1\":{\"122\":1}}],[\"就会生成一个\",{\"1\":{\"122\":1}}],[\"就放在构造函数里面\",{\"1\":{\"122\":1}}],[\"就没有任何效果\",{\"1\":{\"100\":1}}],[\"就是所谓的一键\",{\"1\":{\"131\":1}}],[\"就是一种完整的面向对象编程语言了\",{\"1\":{\"122\":1}}],[\"就是引入\",{\"1\":{\"88\":1}}],[\"就是前面的注册函数的返回值\",{\"1\":{\"81\":1}}],[\"就是\",{\"1\":{\"78\":1,\"81\":1}}],[\"就变成了控制直排的中间了\",{\"1\":{\"48\":1}}],[\"就当我硬凹吧\",{\"1\":{\"48\":1}}],[\"就可以了\",{\"1\":{\"81\":1}}],[\"就可以很好理解了\",{\"1\":{\"48\":1}}],[\"就可以看到你的博客了了了了了\",{\"1\":{\"10\":1}}],[\"就好了\",{\"1\":{\"48\":1}}],[\"就能搞定垂直居中了\",{\"1\":{\"48\":1}}],[\"就能达成居中的目的了\",{\"1\":{\"48\":1}}],[\"就能使用vertical\",{\"1\":{\"48\":1}}],[\"就能在你的电脑中产生ssh\",{\"1\":{\"7\":1}}],[\"第三个参数是当http错误发生时\",{\"1\":{\"78\":1}}],[\"第三个参数表示是否为取反\",{\"1\":{\"74\":1}}],[\"第二个参数时表示请求状态的字符串\",{\"1\":{\"78\":1}}],[\"第二个参数是表示请求状态的字符串\",{\"1\":{\"78\":1}}],[\"第二步添加cname\",{\"1\":{\"10\":1}}],[\"第一个回调函数返回了一个新的\",{\"1\":{\"81\":1}}],[\"第一个参数表示是否进行递归深入\",{\"1\":{\"74\":1}}],[\"第一个等同于第二个\",{\"1\":{\"0\":1}}],[\"第一步购买域名\",{\"1\":{\"10\":1}}],[\"可在页面可视区域任意拖拽元素\",{\"1\":{\"153\":1}}],[\"可在cmd中ping一下就能看到\",{\"1\":{\"10\":1}}],[\"可根据项目ui仔细设计\",{\"1\":{\"131\":2}}],[\"可克隆模型\",{\"1\":{\"123\":1}}],[\"可选\",{\"1\":{\"129\":1}}],[\"可选的\",{\"1\":{\"102\":1}}],[\"可选参数表示是否处理已绑定的事件与数据\",{\"1\":{\"72\":1}}],[\"可将\",{\"1\":{\"94\":1}}],[\"可贴粘\",{\"1\":{\"85\":1}}],[\"可加入过滤条件\",{\"1\":{\"61\":1}}],[\"可见控件\",{\"1\":{\"58\":1}}],[\"可见浏览器并不是一获取到css样式就立马开始解析而是根据css样式的书写顺序将之按照dom树的结构分布render样式\",{\"1\":{\"26\":1}}],[\"可以执行关联的函数\",{\"1\":{\"134\":1}}],[\"可以定义一个在绑定时执行一次的初始化动作\",{\"1\":{\"129\":1}}],[\"可以考虑使用原型模式拷贝多个对象供调用者使用\",{\"1\":{\"126\":1}}],[\"可以用来创建响应式应用\",{\"1\":{\"109\":1}}],[\"可以用于方便地实现异步函数的链式调用\",{\"1\":{\"81\":1}}],[\"可以用于方便地管理多个事件并发的情况\",{\"1\":{\"81\":1}}],[\"可以用于对象\",{\"1\":{\"74\":1}}],[\"可以采用几种方式来降低判断识别的复杂度\",{\"1\":{\"102\":1}}],[\"可以在空闲时间运行\",{\"1\":{\"109\":1}}],[\"可以在组件中设\",{\"1\":{\"100\":1}}],[\"可以在任意节点上绑定到全局任意ajax请求的每一个事件\",{\"1\":{\"79\":1}}],[\"可以把过滤器方法单独抽离出一个公共js文件\",{\"1\":{\"98\":1}}],[\"可以把节点作为数据存储的容器\",{\"1\":{\"74\":1}}],[\"可以被重写为\",{\"1\":{\"96\":1}}],[\"可以直接查看官方文档的事件和按键修饰符部分\",{\"1\":{\"94\":1}}],[\"可以带上参数\",{\"1\":{\"76\":1}}],[\"可以随意控制上下文\",{\"1\":{\"75\":1}}],[\"可以使用clone来快速创建创建一个\",{\"1\":{\"124\":1}}],[\"可以使用\",{\"1\":{\"54\":1,\"88\":1}}],[\"可以去各大域名销售平台买自己喜欢的域名\",{\"1\":{\"10\":1}}],[\"可能会让你的网页在某些浏览器上看起来无效\",{\"1\":{\"48\":1}}],[\"可能要输入你的github上的username及password\",{\"1\":{\"9\":1}}],[\"虽然可以在函数式组件中传参数\",{\"1\":{\"103\":1}}],[\"虽然可以直接在\",{\"1\":{\"88\":1}}],[\"虽然在写组件的时候可以避开命名以\",{\"1\":{\"101\":1}}],[\"虽然不显示了\",{\"1\":{\"100\":1}}],[\"虽然\",{\"1\":{\"10\":1}}],[\"飞起来\",{\"1\":{\"9\":1}}],[\"再运行以下代码时\",{\"1\":{\"112\":1}}],[\"再就是一种比较简单的可选办法\",{\"1\":{\"102\":1}}],[\"再利用translate\",{\"1\":{\"48\":1}}],[\"再让margin\",{\"1\":{\"48\":1}}],[\"再搭配上将需要居中的子元素同样设置成inline\",{\"1\":{\"48\":1}}],[\"再依次执行以下命令\",{\"1\":{\"9\":1}}],[\"再打开github的setting\",{\"1\":{\"7\":1}}],[\"先来看看注册全局指令的方式\",{\"1\":{\"129\":1}}],[\"先将远程仓库关联到本地\",{\"1\":{\"16\":1}}],[\"先安装rss相关插件\",{\"1\":{\"12\":1}}],[\"先安装一波\",{\"1\":{\"9\":1}}],[\"先创建一个文件夹\",{\"1\":{\"6\":1}}],[\"3+\",{\"1\":{\"106\":1}}],[\"35px\",{\"1\":{\"48\":1}}],[\"300\",{\"1\":{\"43\":1,\"145\":1}}],[\"3\",{\"1\":{\"8\":1,\"74\":1,\"149\":1,\"152\":1}}],[\"注入的对象\",{\"1\":{\"103\":1}}],[\"注册的两次回调函数依次被执行后\",{\"1\":{\"81\":1}}],[\"注册传送门\",{\"1\":{\"7\":1}}],[\"注意构造函数中的\",{\"1\":{\"122\":1}}],[\"注意在拆分的时候\",{\"1\":{\"103\":1}}],[\"注意其中的一些特殊字符\",{\"1\":{\"56\":1}}],[\"注意\",{\"1\":{\"20\":1,\"92\":1,\"95\":1,\"96\":1,\"98\":1,\"100\":2}}],[\"注意deploy的过程中\",{\"1\":{\"9\":1}}],[\"注\",{\"1\":{\"8\":1,\"117\":1}}],[\"draggable\",{\"1\":{\"129\":1,\"154\":2,\"155\":2}}],[\"drop\",{\"1\":{\"45\":1,\"51\":1}}],[\"duration\",{\"1\":{\"109\":1}}],[\"dynamicslotname\",{\"1\":{\"96\":1}}],[\"dtd\",{\"1\":{\"85\":3}}],[\"date\",{\"1\":{\"145\":2}}],[\"dataset\",{\"1\":{\"145\":2}}],[\"data<\",{\"1\":{\"92\":1}}],[\"datatype\",{\"1\":{\"78\":1,\"81\":5}}],[\"data\",{\"1\":{\"74\":5,\"77\":1,\"78\":2,\"81\":2,\"85\":1,\"93\":1,\"96\":2,\"100\":1,\"103\":2,\"132\":1,\"145\":3}}],[\"dangerhtml\",{\"1\":{\"89\":1}}],[\"dashboard\",{\"1\":{\"88\":3}}],[\"dashed\",{\"1\":{\"37\":1,\"38\":1}}],[\"dialog\",{\"1\":{\"155\":1}}],[\"dimensions\",{\"1\":{\"74\":4}}],[\"div`\",{\"1\":{\"88\":1}}],[\"div\",{\"1\":{\"65\":3,\"69\":1}}],[\"div>\",{\"1\":{\"48\":46,\"64\":1,\"65\":1,\"71\":3,\"85\":1,\"90\":4,\"91\":1,\"93\":2,\"96\":6,\"97\":1,\"98\":2,\"100\":4,\"102\":3,\"103\":5,\"150\":1,\"152\":1,\"155\":1}}],[\"disy\",{\"1\":{\"154\":2}}],[\"disx\",{\"1\":{\"154\":2}}],[\"dispatchevent\",{\"1\":{\"141\":1}}],[\"display属性将div设置成表格的单元格\",{\"1\":{\"48\":1}}],[\"display\",{\"1\":{\"27\":1,\"48\":19,\"58\":1,\"112\":2,\"116\":4,\"119\":5,\"121\":3,\"152\":1}}],[\"disconnect\",{\"1\":{\"109\":1}}],[\"disable\",{\"1\":{\"82\":1}}],[\"disabled\",{\"1\":{\"58\":1}}],[\"diff\",{\"1\":{\"51\":3}}],[\"directive\",{\"1\":{\"129\":2,\"145\":1},\"2\":{\"157\":1}}],[\"directives\",{\"1\":{\"97\":3,\"129\":7,\"132\":1}}],[\"direction\",{\"1\":{\"48\":2}}],[\"directory\",{\"1\":{\"51\":1}}],[\"delay\",{\"1\":{\"145\":3}}],[\"delegatetarget\",{\"1\":{\"77\":1}}],[\"debounceclick\",{\"1\":{\"139\":2}}],[\"debounce=\",{\"1\":{\"139\":1}}],[\"debounce\",{\"1\":{\"129\":1,\"138\":2,\"139\":1}}],[\"deep\",{\"0\":{\"120\":1}}],[\"demo>\",{\"1\":{\"103\":1}}],[\"demo\",{\"1\":{\"93\":3,\"100\":1,\"102\":6,\"103\":2}}],[\"def\",{\"1\":{\"145\":2}}],[\"definition\",{\"1\":{\"129\":1}}],[\"defer这种形式\",{\"1\":{\"81\":1}}],[\"defer对象\",{\"1\":{\"81\":2}}],[\"defer\",{\"1\":{\"81\":19}}],[\"deferred机制\",{\"1\":{\"82\":1}}],[\"deferred的回调函数的执行顺序与它们的添加顺序一致\",{\"1\":{\"81\":1}}],[\"deferred已经被激发\",{\"1\":{\"81\":1}}],[\"deferred对象有三个状态\",{\"1\":{\"81\":1}}],[\"deferred对象是在jquery1\",{\"1\":{\"81\":1}}],[\"deferred\",{\"0\":{\"81\":1},\"1\":{\"81\":10}}],[\"defaultsrc\",{\"1\":{\"145\":2}}],[\"default=\",{\"1\":{\"96\":3}}],[\"default\",{\"1\":{\"45\":1,\"88\":1,\"90\":3,\"93\":1,\"94\":1,\"96\":2,\"97\":1,\"100\":1,\"129\":1,\"131\":1,\"132\":1,\"134\":1,\"135\":1,\"138\":1,\"139\":1,\"140\":1,\"141\":1,\"145\":2,\"149\":1,\"152\":1,\"154\":1}}],[\"detach\",{\"1\":{\"72\":1}}],[\"decoration\",{\"1\":{\"43\":1}}],[\"deployer\",{\"1\":{\"9\":1}}],[\"deploy\",{\"1\":{\"8\":1}}],[\"down\",{\"1\":{\"123\":2}}],[\"doe\",{\"1\":{\"123\":2}}],[\"dogb\",{\"1\":{\"122\":5}}],[\"doga\",{\"1\":{\"122\":7}}],[\"dog\",{\"1\":{\"122\":14}}],[\"do\",{\"1\":{\"102\":3}}],[\"dothisonceincapturingmode\",{\"1\":{\"94\":1}}],[\"dothisonce\",{\"1\":{\"94\":1}}],[\"dothisincapturingmode\",{\"1\":{\"94\":1}}],[\"dotted\",{\"1\":{\"37\":1,\"38\":1}}],[\"doctype\",{\"1\":{\"85\":1}}],[\"documentelement\",{\"1\":{\"145\":1}}],[\"document的鼠标位置\",{\"1\":{\"77\":1}}],[\"document\",{\"1\":{\"54\":1,\"66\":1,\"69\":2,\"85\":5,\"103\":1,\"109\":3,\"129\":1,\"131\":4,\"141\":1,\"145\":1,\"152\":1,\"154\":6}}],[\"done和\",{\"1\":{\"81\":2}}],[\"done\",{\"1\":{\"81\":14}}],[\"dompropsb=\",{\"1\":{\"103\":1}}],[\"dompropsxx\",{\"1\":{\"100\":1}}],[\"dompropsaria\",{\"1\":{\"100\":1}}],[\"dompropsclassname=\",{\"1\":{\"100\":2}}],[\"dompropstitle=\",{\"1\":{\"100\":1}}],[\"domprops\",{\"1\":{\"100\":1,\"103\":1}}],[\"dompropsinnerhtml=\",{\"1\":{\"89\":1}}],[\"dom\",{\"1\":{\"55\":5,\"85\":2,\"95\":3,\"100\":13,\"103\":1,\"132\":1,\"135\":1,\"139\":1,\"145\":1,\"148\":1,\"149\":1,\"155\":1}}],[\"dom树和css树合并之后形成的render树\",{\"1\":{\"26\":1}}],[\"double\",{\"1\":{\"37\":1,\"38\":1}}],[\"d\",{\"1\":{\"9\":2,\"10\":1,\"51\":3}}],[\"dbclick\",{\"1\":{\"77\":1}}],[\"db\",{\"1\":{\"6\":1,\"123\":2}}],[\"将其设置为背景图片\",{\"1\":{\"152\":1}}],[\"将组件内\",{\"1\":{\"146\":1}}],[\"将需要校验的输入框加上\",{\"1\":{\"142\":1}}],[\"将时间绑定在\",{\"1\":{\"138\":1}}],[\"将要\",{\"1\":{\"131\":1}}],[\"将要复制的值赋给\",{\"1\":{\"131\":1}}],[\"将该\",{\"1\":{\"131\":1}}],[\"将模型类对象存储到\",{\"1\":{\"123\":1}}],[\"将自动引用\",{\"1\":{\"122\":1}}],[\"将所有对象联系起来\",{\"1\":{\"122\":1}}],[\"将判断逻辑转移到子组件\",{\"1\":{\"102\":1}}],[\"将应用最新的\",{\"1\":{\"51\":1}}],[\"将指定分支中的所有提交压缩为单个提交\",{\"1\":{\"51\":1}}],[\"将使用当前目录\",{\"1\":{\"51\":1}}],[\"将css解析成树形的数据结构\",{\"1\":{\"26\":1}}],[\"将html解析成树形的数据结构\",{\"1\":{\"26\":1}}],[\"将hexo设为默认分支\",{\"0\":{\"18\":1},\"1\":{\"15\":1}}],[\"将主站点文件push到hexo分支\",{\"0\":{\"19\":1}}],[\"将default\",{\"1\":{\"18\":1}}],[\"将\",{\"1\":{\"7\":1,\"94\":1,\"96\":1,\"131\":2}}],[\"将里面的内容复制\",{\"1\":{\"7\":1}}],[\"打开浏览器输入\",{\"1\":{\"8\":1}}],[\"打开setting\",{\"1\":{\"7\":1}}],[\"打开\",{\"1\":{\"7\":1}}],[\"一是绑定\",{\"1\":{\"145\":1}}],[\"一是使用预定的\",{\"1\":{\"76\":1}}],[\"一个对象需要提供给其他对象访问\",{\"1\":{\"126\":1}}],[\"一个对象多个修改者的场景\",{\"1\":{\"126\":1}}],[\"一个已经存在的实例来返回新的实例\",{\"1\":{\"113\":1}}],[\"一个参数名\",{\"1\":{\"78\":1}}],[\"一般是和工厂方法模式一起出现\",{\"1\":{\"112\":1}}],[\"一般用于指明回调函数名\",{\"1\":{\"78\":1}}],[\"一种是本地的\",{\"1\":{\"122\":1}}],[\"一种是普通标题\",{\"1\":{\"103\":1}}],[\"一种方案是在组件包裹\",{\"1\":{\"88\":1}}],[\"一些简单经验分享\",{\"0\":{\"99\":1}}],[\"一来是网页多是横书较多\",{\"1\":{\"48\":1}}],[\"一旦浏览器发现某个元素的定位变化影响布局\",{\"1\":{\"26\":1}}],[\"一下\",{\"1\":{\"10\":1}}],[\"一切都ok之后\",{\"1\":{\"9\":1}}],[\"一路回车\",{\"1\":{\"7\":1}}],[\"一防忘记\",{\"1\":{\"3\":1}}],[\"配置域名\",{\"1\":{\"10\":1}}],[\"配置ssh\",{\"1\":{\"7\":1}}],[\"配置github账户信息\",{\"1\":{\"7\":1}}],[\"u9fa5|d|a\",{\"1\":{\"140\":1,\"141\":1}}],[\"use\",{\"1\":{\"129\":2}}],[\"usercloned\",{\"1\":{\"123\":4}}],[\"user<\",{\"1\":{\"96\":1}}],[\"user=\",{\"1\":{\"96\":2}}],[\"user组件定义部分\",{\"1\":{\"96\":1}}],[\"user>\",{\"1\":{\"96\":9}}],[\"useragent\",{\"1\":{\"85\":1}}],[\"username\",{\"1\":{\"16\":2,\"20\":2}}],[\"user\",{\"1\":{\"7\":3,\"96\":19,\"123\":8}}],[\"using\",{\"1\":{\"123\":3}}],[\"update\",{\"1\":{\"129\":1}}],[\"upload\",{\"1\":{\"101\":3}}],[\"uppercase\",{\"1\":{\"43\":1}}],[\"ul>\",{\"1\":{\"93\":1}}],[\"ul\",{\"1\":{\"60\":1}}],[\"url\",{\"1\":{\"44\":2,\"45\":4,\"51\":1,\"78\":1,\"81\":5,\"152\":1}}],[\"u\",{\"1\":{\"19\":2}}],[\"unbind\",{\"1\":{\"129\":1,\"131\":1,\"134\":1,\"141\":1}}],[\"unobserve\",{\"1\":{\"109\":2}}],[\"unicode\",{\"1\":{\"85\":2}}],[\"universalxpconnect\",{\"1\":{\"85\":1}}],[\"unique\",{\"1\":{\"0\":22,\"74\":2,\"82\":1},\"2\":{\"2\":1}}],[\"unload\",{\"1\":{\"77\":1}}],[\"unwrap\",{\"1\":{\"72\":1}}],[\"underline\",{\"1\":{\"43\":1}}],[\"undefined\",{\"1\":{\"0\":33,\"74\":1,\"96\":1}}],[\"yy公司\",{\"1\":{\"116\":1,\"121\":2}}],[\"yy企业\",{\"1\":{\"116\":1,\"119\":1}}],[\"yy\",{\"1\":{\"100\":1}}],[\"y轴的个别对齐方式\",{\"1\":{\"48\":1}}],[\"y\",{\"1\":{\"44\":1,\"154\":6}}],[\"yourgithubname\",{\"1\":{\"8\":2,\"9\":1,\"10\":1}}],[\"youremail\",{\"1\":{\"7\":2}}],[\"yourname\",{\"1\":{\"7\":1,\"10\":1}}],[\"yourname和youremail都替换成你自己的\",{\"1\":{\"7\":1}}],[\"yml配置文件下找到extensions添加如下内容\",{\"1\":{\"12\":1}}],[\"yml文件的一些配置\",{\"1\":{\"8\":1}}],[\"yml\",{\"1\":{\"6\":1}}],[\"创建计时器\",{\"1\":{\"134\":1}}],[\"创建基于输入或触发器包装的动态内容时\",{\"1\":{\"109\":1}}],[\"创建并切换到hexo分支\",{\"1\":{\"17\":1}}],[\"创建hexo分支\",{\"0\":{\"17\":1}}],[\"创建key\",{\"1\":{\"7\":1}}],[\"创建仓库\",{\"1\":{\"7\":1}}],[\"创建一个计时器\",{\"1\":{\"134\":1}}],[\"创建一个抽象类\",{\"1\":{\"123\":1}}],[\"创建一个同值新对象\",{\"1\":{\"112\":1}}],[\"创建一个观察者实例\",{\"1\":{\"109\":2}}],[\"创建一个repo\",{\"1\":{\"7\":1}}],[\"创建一个空map数据结构\",{\"1\":{\"0\":1}}],[\"其父元素为绝对定位\",{\"1\":{\"154\":1}}],[\"其特点在于通过\",{\"1\":{\"113\":1}}],[\"其作用是把一堆函数按顺序放入一个调用链\",{\"1\":{\"81\":1}}],[\"其值为\",{\"1\":{\"77\":1}}],[\"其他选择器\",{\"0\":{\"59\":1}}],[\"其他浏览器的支持度都不是很好\",{\"1\":{\"48\":1}}],[\"其他边\",{\"0\":{\"42\":1}}],[\"其他元素也可能会受到它回流的影响而重新排位\",{\"1\":{\"26\":1}}],[\"其他\",{\"0\":{\"45\":1},\"1\":{\"24\":1}}],[\"其\",{\"1\":{\"24\":1}}],[\"其中只包含一个\",{\"1\":{\"117\":1}}],[\"其中ip地址为你的github的地址\",{\"1\":{\"10\":1}}],[\"其中yourname是你的github名称\",{\"1\":{\"7\":1}}],[\"其实不需要有\",{\"1\":{\"122\":1}}],[\"其实在使用模板方式的时候我们并没有完全采用组件的思维方式来做\",{\"1\":{\"99\":1}}],[\"其实在vue中所谓的作用域插槽功能类似于\",{\"1\":{\"96\":1}}],[\"其实\",{\"1\":{\"0\":1}}],[\"名称为yourname\",{\"1\":{\"7\":1}}],[\"没什么问题\",{\"1\":{\"119\":1}}],[\"没任何作用\",{\"1\":{\"81\":1}}],[\"没账号的先创建一个github账号\",{\"1\":{\"7\":1}}],[\"没有权限\",{\"1\":{\"149\":1}}],[\"没有\",{\"1\":{\"122\":1}}],[\"没有的话你就自由发挥吧\",{\"1\":{\"5\":1}}],[\"没有去重\",{\"1\":{\"0\":4}}],[\"整个博客的配置\",{\"1\":{\"6\":1}}],[\"用于鼠标右键粘贴\",{\"1\":{\"130\":1}}],[\"用于元素或组件的时候\",{\"1\":{\"95\":1}}],[\"用户松开按钮时调用\",{\"1\":{\"134\":1}}],[\"用户需要按下并按住按钮几秒钟\",{\"1\":{\"133\":1}}],[\"用户\",{\"1\":{\"123\":1}}],[\"用法同\",{\"1\":{\"65\":1}}],[\"用hexo分支来管理主站点文件\",{\"1\":{\"15\":1}}],[\"用master分支来管理发布的文件\",{\"1\":{\"15\":1}}],[\"用你购买的域名打开\",{\"1\":{\"10\":1}}],[\"用编辑器打开你的blog项目\",{\"1\":{\"8\":1}}],[\"用命令创建的各种文章\",{\"1\":{\"6\":1}}],[\"用来从原型对象生成一个实例对象\",{\"1\":{\"122\":1}}],[\"用来存放所有blog的东西\",{\"1\":{\"6\":1}}],[\"用来发布一些文章以及交流学习\",{\"1\":{\"3\":1}}],[\"must\",{\"1\":{\"134\":1}}],[\"mutation\",{\"1\":{\"109\":4}}],[\"mutations\",{\"1\":{\"109\":2}}],[\"mutationobserver\",{\"1\":{\"109\":1}}],[\"mutationobserver观察dom树\",{\"1\":{\"109\":1}}],[\"mt\",{\"1\":{\"100\":1}}],[\"msn上推荐给你的好友\",{\"1\":{\"85\":1}}],[\"msn上的好友\",{\"1\":{\"85\":1}}],[\"myimg\",{\"1\":{\"85\":3}}],[\"my\",{\"1\":{\"75\":4,\"76\":4}}],[\"mv\",{\"1\":{\"51\":1}}],[\"mozilla\",{\"1\":{\"85\":3}}],[\"mouseenter\",{\"1\":{\"77\":1}}],[\"mouseleave\",{\"1\":{\"77\":1}}],[\"mouseout\",{\"1\":{\"77\":1,\"134\":2}}],[\"mouseover\",{\"1\":{\"77\":1,\"85\":1,\"94\":1}}],[\"mouseup\",{\"1\":{\"77\":1,\"134\":1}}],[\"mousedown\",{\"1\":{\"77\":1,\"134\":2}}],[\"mousemove\",{\"1\":{\"75\":1,\"77\":1}}],[\"modified\",{\"1\":{\"109\":1}}],[\"module\",{\"1\":{\"106\":1}}],[\"modules\",{\"1\":{\"6\":1}}],[\"models\",{\"1\":{\"123\":2}}],[\"modelmap\",{\"1\":{\"123\":4}}],[\"modelicache类定义\",{\"1\":{\"123\":1}}],[\"modelcache\",{\"1\":{\"123\":5}}],[\"model=\",{\"1\":{\"89\":1,\"100\":2,\"140\":1,\"142\":1}}],[\"model\",{\"1\":{\"89\":2,\"123\":1}}],[\"mode<\",{\"1\":{\"48\":1}}],[\"mode\",{\"1\":{\"48\":3}}],[\"mode将一整个文字容器变成直书\",{\"1\":{\"48\":1}}],[\"mode这个css属性的功能基本上跟垂直居中是八竿子打不着\",{\"1\":{\"48\":1}}],[\"movetoelementtext\",{\"1\":{\"85\":1}}],[\"move\",{\"1\":{\"45\":1,\"75\":1,\"154\":1}}],[\"microsoft\",{\"1\":{\"152\":1}}],[\"middle来达到垂直居中的目的了\",{\"1\":{\"48\":1}}],[\"middle\",{\"1\":{\"43\":1,\"48\":3,\"152\":1}}],[\"min\",{\"1\":{\"30\":1,\"31\":1}}],[\"memberwiseclone\",{\"1\":{\"115\":2,\"116\":1,\"118\":2,\"119\":1,\"121\":1,\"123\":1}}],[\"memory的\",{\"1\":{\"82\":1}}],[\"memory\",{\"1\":{\"82\":1}}],[\"measure\",{\"1\":{\"109\":1}}],[\"methods\",{\"1\":{\"94\":1,\"96\":2,\"100\":1,\"135\":1,\"139\":1,\"140\":1}}],[\"metakey\",{\"1\":{\"94\":1}}],[\"meta\",{\"1\":{\"94\":1}}],[\"me\",{\"1\":{\"94\":1}}],[\"me<\",{\"1\":{\"92\":1}}],[\"merge\",{\"1\":{\"51\":2,\"74\":2}}],[\"message\",{\"1\":{\"43\":1,\"89\":1,\"98\":1}}],[\"menu\",{\"1\":{\"43\":1}}],[\"medium\",{\"1\":{\"37\":4,\"43\":1}}],[\"m\",{\"1\":{\"19\":1,\"51\":2}}],[\"math\",{\"1\":{\"152\":1}}],[\"main\",{\"1\":{\"51\":1,\"115\":1,\"116\":1,\"119\":1,\"121\":1,\"123\":1,\"129\":1}}],[\"mark\",{\"1\":{\"109\":2}}],[\"marker\",{\"1\":{\"27\":1}}],[\"margin<\",{\"1\":{\"48\":2}}],[\"margin\",{\"0\":{\"33\":1},\"1\":{\"33\":5,\"48\":39}}],[\"maxy\",{\"1\":{\"154\":3}}],[\"maxx\",{\"1\":{\"154\":3}}],[\"max\",{\"1\":{\"30\":1,\"31\":1}}],[\"master\",{\"1\":{\"8\":1}}],[\"map\",{\"1\":{\"0\":5,\"73\":3,\"74\":7,\"91\":1,\"93\":2,\"95\":2,\"97\":1}}],[\"生成两个实例对象\",{\"1\":{\"122\":1}}],[\"生成实例\",{\"1\":{\"122\":1}}],[\"生成\",{\"1\":{\"93\":1}}],[\"生成的文件\",{\"1\":{\"6\":1}}],[\"生成ssh并添加到github\",{\"0\":{\"7\":1},\"1\":{\"3\":1}}],[\"guest\",{\"1\":{\"96\":1}}],[\"glue\",{\"1\":{\"85\":1}}],[\"global\",{\"1\":{\"7\":2}}],[\"go\",{\"1\":{\"74\":3}}],[\"gt\",{\"1\":{\"59\":1}}],[\"getcomputedstyle\",{\"1\":{\"154\":2}}],[\"getcontext\",{\"1\":{\"152\":1}}],[\"getboundingclientrect\",{\"1\":{\"145\":2}}],[\"getmodel<product>\",{\"1\":{\"123\":1}}],[\"getmodel<user>\",{\"1\":{\"123\":1}}],[\"getmodel<t>\",{\"1\":{\"123\":1}}],[\"getentries\",{\"1\":{\"109\":1}}],[\"getelementbyid\",{\"1\":{\"69\":1,\"85\":2,\"109\":3}}],[\"getattribute\",{\"1\":{\"100\":1}}],[\"gettime\",{\"1\":{\"74\":1,\"77\":1}}],[\"get\",{\"1\":{\"55\":4,\"64\":1,\"73\":2,\"74\":1,\"78\":2,\"119\":2,\"121\":3,\"123\":5}}],[\"generator\",{\"1\":{\"12\":2}}],[\"grep\",{\"1\":{\"74\":3}}],[\"greatphoto\",{\"1\":{\"65\":4}}],[\"green\",{\"1\":{\"60\":1,\"66\":1,\"73\":1}}],[\"grid对于空间的解释会跟flex有一些些的落差\",{\"1\":{\"48\":1}}],[\"grid的align\",{\"1\":{\"48\":1}}],[\"grid中则是针对y轴做对齐\",{\"1\":{\"48\":1}}],[\"grid也拥有此属性可使用\",{\"1\":{\"48\":1}}],[\"grid\",{\"1\":{\"48\":19}}],[\"grid最令人惊讶的就是这个template的功能了\",{\"1\":{\"48\":1}}],[\"grow<\",{\"1\":{\"48\":1}}],[\"grow\",{\"1\":{\"48\":1}}],[\"grow伸展值能够取得剩下所有空间的特性\",{\"1\":{\"48\":1}}],[\"grow的延展特性来达成\",{\"1\":{\"48\":1}}],[\"groove\",{\"1\":{\"37\":1,\"38\":1}}],[\"group\",{\"1\":{\"27\":4}}],[\"g\",{\"1\":{\"6\":1,\"8\":1,\"9\":1,\"140\":1,\"141\":1}}],[\"gitignore忽视的其他文件\",{\"1\":{\"15\":1}}],[\"github\",{\"1\":{\"7\":2,\"8\":2,\"9\":1,\"10\":2,\"16\":2,\"20\":3}}],[\"git\",{\"0\":{\"51\":1},\"1\":{\"4\":1,\"7\":4,\"8\":2,\"9\":1,\"12\":1,\"16\":5,\"17\":1,\"19\":3,\"20\":3,\"51\":48},\"2\":{\"53\":1}}],[\"$inp\",{\"1\":{\"141\":11}}],[\"$=\",{\"1\":{\"140\":1,\"141\":1}}],[\"$value\",{\"1\":{\"131\":4,\"134\":1}}],[\"$attrs\",{\"1\":{\"100\":1}}],[\"$options\",{\"1\":{\"98\":1}}],[\"$scopedslots\",{\"1\":{\"96\":1}}],[\"$slots\",{\"1\":{\"96\":3}}],[\"$refs\",{\"1\":{\"95\":3}}],[\"$title\",{\"1\":{\"74\":1}}],[\"$xml\",{\"1\":{\"74\":2}}],[\"$newdiv1\",{\"1\":{\"69\":2}}],[\"$j\",{\"1\":{\"54\":1}}],[\"$\",{\"1\":{\"6\":2,\"7\":4,\"8\":4,\"9\":4,\"12\":1,\"14\":1,\"16\":3,\"17\":1,\"19\":3,\"20\":3,\"54\":3,\"55\":6,\"56\":6,\"60\":2,\"64\":1,\"65\":19,\"66\":6,\"69\":3,\"70\":1,\"71\":3,\"73\":5,\"74\":46,\"75\":12,\"76\":9,\"78\":1,\"79\":2,\"80\":4,\"81\":9,\"82\":1,\"85\":2,\"90\":1,\"96\":2,\"109\":9,\"121\":1,\"123\":2}}],[\"环境变量\",{\"1\":{\"5\":1}}],[\"在一些后台管理系统\",{\"1\":{\"147\":1}}],[\"在一个绝对定位居中的方式\",{\"1\":{\"48\":1}}],[\"在类电商类项目\",{\"1\":{\"143\":1}}],[\"在移动端要考虑\",{\"1\":{\"134\":1}}],[\"在解绑时移除事件\",{\"1\":{\"131\":1}}],[\"在解析过程中\",{\"1\":{\"26\":1}}],[\"在第一次调用时绑定事件\",{\"1\":{\"131\":1}}],[\"在需要新对象时\",{\"1\":{\"124\":1}}],[\"在开发中\",{\"1\":{\"136\":1}}],[\"在开发\",{\"1\":{\"122\":1}}],[\"在堆上保持数据\",{\"1\":{\"117\":1}}],[\"在栈上保持引用\",{\"1\":{\"117\":1}}],[\"在实际项目中\",{\"1\":{\"112\":1}}],[\"在控制台上显示每个报告的测量\",{\"1\":{\"109\":1}}],[\"在检测变化方面非常方便\",{\"1\":{\"109\":1}}],[\"在单个\",{\"1\":{\"103\":1}}],[\"在大多数情况下两者都有对应的同名属性\",{\"1\":{\"100\":1}}],[\"在有些场景下释放\",{\"1\":{\"99\":1}}],[\"在jsx中使用方法为\",{\"1\":{\"98\":1}}],[\"在jsx中使用单个括号来绑定文本插值\",{\"1\":{\"89\":1}}],[\"在双花括号中\",{\"1\":{\"98\":1}}],[\"在上面的代码中我们实际上使用解构的方式来取得\",{\"1\":{\"96\":1}}],[\"在父组件中使用\",{\"1\":{\"96\":1}}],[\"在模板中的用法如下\",{\"1\":{\"98\":1}}],[\"在模板中统一使用新的统一语法\",{\"1\":{\"96\":1}}],[\"在模板语法中可以使用\",{\"1\":{\"102\":1}}],[\"在模板语法中\",{\"1\":{\"94\":1}}],[\"在初始渲染的时候你不能访问它们\",{\"1\":{\"95\":1}}],[\"在基础部分简单介绍了事件的绑定用法\",{\"1\":{\"94\":1}}],[\"在写\",{\"1\":{\"88\":1}}],[\"在使用\",{\"1\":{\"88\":2}}],[\"在\",{\"0\":{\"88\":1},\"1\":{\"75\":1,\"79\":2,\"81\":1,\"88\":2,\"89\":1,\"90\":1,\"91\":1,\"93\":1,\"95\":1,\"96\":5,\"98\":1,\"100\":7,\"102\":1,\"117\":1,\"119\":1,\"122\":2,\"129\":1,\"155\":1}}],[\"在内部实现上\",{\"1\":{\"74\":1}}],[\"在调用链中\",{\"1\":{\"60\":1}}],[\"在正常的状况下\",{\"1\":{\"48\":1}}],[\"在本地新拷贝的username\",{\"1\":{\"20\":1}}],[\"在hexo分支\",{\"1\":{\"19\":1}}],[\"在浏览器刷新就能看到你的文章了\",{\"1\":{\"14\":1}}],[\"在浏览器中输入http\",{\"1\":{\"9\":1}}],[\"在你的项目的\",{\"1\":{\"12\":1}}],[\"在里面添加你购买的域名\",{\"1\":{\"10\":1}}],[\"在项目的source文件夹下新建一个名为cname的文件\",{\"1\":{\"10\":1}}],[\"在github上的站点仓库上\",{\"1\":{\"18\":1}}],[\"在github中搜索你要的主题名称\",{\"1\":{\"11\":1}}],[\"在git\",{\"1\":{\"7\":1,\"8\":1}}],[\"在新建的文件夹里右键git\",{\"1\":{\"6\":1}}],[\"在cmd中输入path可以看到你的node是否配置在里面\",{\"1\":{\"5\":1}}],[\"在原始数组中的第一个索引\",{\"1\":{\"0\":1}}],[\"快捷键调出运行\",{\"1\":{\"5\":1}}],[\"rgba\",{\"1\":{\"152\":2}}],[\"rotate\",{\"1\":{\"152\":1}}],[\"rootmargin\",{\"1\":{\"109\":1}}],[\"rows=5\",{\"1\":{\"85\":1}}],[\"rows=\",{\"1\":{\"85\":1}}],[\"rows\",{\"1\":{\"48\":1}}],[\"row\",{\"1\":{\"27\":2,\"45\":1}}],[\"rawid\",{\"1\":{\"98\":1}}],[\"radius\",{\"1\":{\"40\":1}}],[\"rng\",{\"1\":{\"85\":6}}],[\"rm\",{\"1\":{\"51\":2}}],[\"ridge\",{\"1\":{\"37\":1,\"38\":1}}],[\"right设定为auto即可居中\",{\"1\":{\"48\":1}}],[\"right\",{\"1\":{\"27\":2,\"28\":1,\"33\":1,\"34\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"42\":1,\"43\":1,\"48\":2}}],[\"run\",{\"1\":{\"27\":1}}],[\"rss>\",{\"1\":{\"74\":1}}],[\"rss订阅\",{\"1\":{\"12\":1}}],[\"rsa\",{\"1\":{\"7\":3}}],[\"r\",{\"1\":{\"5\":1,\"51\":1}}],[\"regrule\",{\"1\":{\"141\":2}}],[\"reg\",{\"1\":{\"140\":2}}],[\"registered\",{\"1\":{\"109\":1}}],[\"reference\",{\"1\":{\"112\":1}}],[\"ref=\",{\"1\":{\"95\":2}}],[\"refinfor=\",{\"1\":{\"95\":1}}],[\"refinfor\",{\"0\":{\"95\":1},\"1\":{\"95\":1}}],[\"ref\",{\"0\":{\"95\":1},\"1\":{\"95\":3}}],[\"render\",{\"1\":{\"88\":1,\"93\":1,\"96\":2,\"97\":1,\"103\":3}}],[\"rename\",{\"1\":{\"51\":1}}],[\"realsrc\",{\"1\":{\"145\":6}}],[\"readonly\",{\"1\":{\"131\":4}}],[\"read\",{\"1\":{\"116\":1,\"119\":1}}],[\"ready\",{\"1\":{\"54\":1,\"77\":1}}],[\"react\",{\"1\":{\"88\":3,\"93\":3,\"96\":2,\"100\":2}}],[\"reject\",{\"1\":{\"81\":1}}],[\"relatedtarget\",{\"1\":{\"77\":1}}],[\"relative\",{\"1\":{\"28\":1,\"48\":6}}],[\"removeeventlistener\",{\"1\":{\"131\":1,\"134\":1,\"141\":1}}],[\"removechild\",{\"1\":{\"131\":1,\"149\":1}}],[\"removeclass\",{\"1\":{\"65\":3}}],[\"removed\",{\"1\":{\"109\":1}}],[\"removedata\",{\"1\":{\"74\":1}}],[\"removeprop\",{\"1\":{\"65\":1}}],[\"removeattribute\",{\"1\":{\"145\":2}}],[\"removeattr\",{\"1\":{\"65\":1}}],[\"remove\",{\"1\":{\"51\":1,\"72\":1,\"82\":1}}],[\"remote\",{\"1\":{\"16\":1,\"51\":5}}],[\"revert\",{\"1\":{\"51\":1}}],[\"rebase\",{\"1\":{\"51\":2}}],[\"resume\",{\"1\":{\"116\":8,\"119\":8,\"121\":12}}],[\"result\",{\"1\":{\"77\":1,\"131\":2}}],[\"resource\",{\"1\":{\"109\":1}}],[\"resolve\",{\"1\":{\"81\":2}}],[\"response\",{\"1\":{\"81\":1}}],[\"res\",{\"1\":{\"81\":6}}],[\"reset\",{\"1\":{\"51\":3}}],[\"resizeobserver\",{\"1\":{\"109\":3}}],[\"resizeobserver观察元素的内容或边框\",{\"1\":{\"109\":1}}],[\"resize\",{\"1\":{\"45\":2,\"77\":1}}],[\"resize|\",{\"1\":{\"45\":1}}],[\"replace\",{\"1\":{\"140\":1,\"141\":1}}],[\"repeat\",{\"1\":{\"44\":6}}],[\"repo\",{\"1\":{\"8\":1}}],[\"red\",{\"1\":{\"26\":1,\"60\":1,\"66\":2,\"73\":1,\"90\":1}}],[\"reduce\",{\"1\":{\"0\":1}}],[\"return\",{\"1\":{\"0\":18,\"65\":6,\"66\":2,\"73\":2,\"74\":7,\"80\":2,\"81\":3,\"85\":4,\"88\":1,\"91\":1,\"93\":2,\"94\":5,\"96\":5,\"97\":1,\"100\":1,\"102\":8,\"103\":2,\"115\":2,\"116\":1,\"119\":3,\"121\":2,\"123\":3,\"131\":1,\"132\":1,\"134\":1,\"141\":1,\"145\":2,\"149\":2}}],[\"watermarker=\",{\"1\":{\"152\":1}}],[\"watermarker\",{\"1\":{\"129\":1,\"152\":2}}],[\"was\",{\"1\":{\"109\":1}}],[\"wait\",{\"1\":{\"45\":1}}],[\"wolf\",{\"1\":{\"96\":2}}],[\"worked\",{\"1\":{\"121\":2}}],[\"workexperience\",{\"1\":{\"119\":3,\"121\":4}}],[\"work\",{\"1\":{\"119\":6,\"121\":8}}],[\"workdate\",{\"1\":{\"119\":8,\"121\":5}}],[\"world\",{\"1\":{\"54\":1}}],[\"worded\",{\"1\":{\"121\":1}}],[\"word\",{\"1\":{\"43\":1}}],[\"w3\",{\"1\":{\"85\":2}}],[\"w3c\",{\"1\":{\"4\":1,\"5\":1,\"85\":1}}],[\"www\",{\"1\":{\"85\":2}}],[\"where\",{\"1\":{\"123\":1}}],[\"when\",{\"1\":{\"81\":4}}],[\"which\",{\"1\":{\"77\":1}}],[\"white\",{\"1\":{\"43\":1}}],[\"writing\",{\"1\":{\"48\":4}}],[\"writeline\",{\"1\":{\"112\":1,\"115\":2,\"116\":2,\"119\":2,\"121\":1,\"123\":3}}],[\"write\",{\"1\":{\"48\":1}}],[\"wrapall\",{\"1\":{\"71\":1}}],[\"wrapinner\",{\"1\":{\"71\":2}}],[\"wrap\",{\"1\":{\"48\":2,\"71\":3}}],[\"web前端\",{\"2\":{\"47\":1}}],[\"weight\",{\"1\":{\"43\":1}}],[\"withtab\",{\"1\":{\"103\":1}}],[\"withtitle\",{\"1\":{\"91\":1}}],[\"widget\",{\"1\":{\"85\":2}}],[\"width\",{\"1\":{\"26\":1,\"30\":3,\"36\":5,\"37\":5,\"38\":4,\"41\":1,\"48\":49,\"66\":4,\"74\":2,\"109\":1,\"152\":2,\"154\":1}}],[\"windowheight\",{\"1\":{\"145\":2}}],[\"window\",{\"1\":{\"85\":6,\"145\":1,\"154\":2}}],[\"window对象\",{\"1\":{\"77\":1}}],[\"win\",{\"1\":{\"5\":1}}],[\"装完在按\",{\"1\":{\"5\":1}}],[\"这两个对象的\",{\"1\":{\"122\":1}}],[\"这好像有点太正式了\",{\"1\":{\"122\":1}}],[\"这一点与\",{\"1\":{\"122\":1}}],[\"这一招的原理在于使用\",{\"1\":{\"48\":1}}],[\"这一招我想有点年纪的开发者应该都有看过\",{\"1\":{\"48\":1}}],[\"这对于接收性能通知很有用\",{\"1\":{\"109\":1}}],[\"这对于调整dom中元素的大小以及重置dom值特别有用\",{\"1\":{\"109\":1}}],[\"这在基于目标元素的可见性和位置的懒惰加载和动画内容方面非常有用\",{\"1\":{\"109\":1}}],[\"这些属性并不属于\",{\"1\":{\"100\":1}}],[\"这些全部需要采用\",{\"1\":{\"91\":1}}],[\"这符合预期的行为\",{\"1\":{\"100\":1}}],[\"这里主要是提及一下关于\",{\"1\":{\"101\":1}}],[\"这里主要是补充一下事件修饰符的写法\",{\"1\":{\"94\":1}}],[\"这里只是简单提及一下并没有什么可以深究的知识点\",{\"1\":{\"98\":1}}],[\"这里需要注意的是在\",{\"1\":{\"97\":1}}],[\"这里需要说明的是\",{\"1\":{\"96\":1}}],[\"这里把相关内容原样搬运过来\",{\"1\":{\"94\":1}}],[\"这里的空标签其实只是\",{\"1\":{\"93\":1}}],[\"这里特别注意一点\",{\"1\":{\"81\":1}}],[\"这时\",{\"1\":{\"122\":1}}],[\"这时候可以使用渲染函数\",{\"1\":{\"88\":1}}],[\"这时你的margin\",{\"1\":{\"48\":1}}],[\"这是两次\",{\"1\":{\"81\":1}}],[\"这会是最需要注意到的\",{\"1\":{\"48\":1}}],[\"这的确也算是一种垂直居中的方式\",{\"1\":{\"48\":1}}],[\"这也算垂直居中技巧\",{\"1\":{\"48\":1}}],[\"这真是太猛了\",{\"1\":{\"48\":1}}],[\"这个资源包括数据\",{\"1\":{\"126\":1}}],[\"这个属性包含一个对象\",{\"1\":{\"122\":1}}],[\"这个使得浏览器可以与网页互动的脚本易语言时\",{\"1\":{\"122\":1}}],[\"这个原型是可定制的\",{\"1\":{\"113\":1}}],[\"这个时候就会出现属性合并的问题\",{\"1\":{\"100\":1}}],[\"这个时候就需要使用作用域插槽了\",{\"1\":{\"96\":1}}],[\"这个时候就需要使用\",{\"1\":{\"95\":1}}],[\"这个时候就涉及到样式作用域的问题了\",{\"1\":{\"88\":1}}],[\"这个时候我们就需要更多的代码控制\",{\"1\":{\"88\":1}}],[\"这个想法是被老友paul所激发的\",{\"1\":{\"48\":1}}],[\"这个技巧是利用了top\",{\"1\":{\"48\":1}}],[\"这个方法\",{\"1\":{\"48\":1}}],[\"这个方式应该是比较少见到的有人使用的了\",{\"1\":{\"48\":1}}],[\"这个方式应该是最多人知道的了\",{\"1\":{\"48\":1}}],[\"这个方式的优点是此层不需要设定高度即可自动居中\",{\"1\":{\"48\":1}}],[\"这个方式比较特别一点\",{\"1\":{\"48\":1}}],[\"这个由微软提出的css\",{\"1\":{\"48\":1}}],[\"这个例子中amos适用了flex\",{\"1\":{\"48\":1}}],[\"这顺序到底要倒吃甘蔗还是正吃甘蔗是实在难说\",{\"1\":{\"48\":1}}],[\"这东西自从面世之后就不断的考验网页开发者的良心\",{\"1\":{\"48\":1}}],[\"这样代码量比较大而且不好维护\",{\"1\":{\"140\":1}}],[\"这样就会多次重复请求后端接口\",{\"1\":{\"136\":1}}],[\"这样就能利用支持存储单元格对齐的vertical\",{\"1\":{\"48\":1}}],[\"这样就能使用flex的align\",{\"1\":{\"48\":1}}],[\"这样就能让元素居中了\",{\"1\":{\"48\":1}}],[\"这样的则是继承于\",{\"1\":{\"117\":1}}],[\"这样的话上面第七个方式不是比较快\",{\"1\":{\"48\":1}}],[\"这样让我们要利用元素自身宽高做事变得方便很多\",{\"1\":{\"48\":1}}],[\"这样才能将你写好的文章部署到github服务器上并让别人浏览到\",{\"1\":{\"9\":1}}],[\"这样你就不用自己去配置电脑上环境变量了\",{\"1\":{\"5\":1}}],[\"这种方式的代码不仅不优雅而且冗余\",{\"1\":{\"147\":1}}],[\"这种方法还无法去掉\",{\"1\":{\"0\":1}}],[\"这种去重的方法代码最少\",{\"1\":{\"0\":1}}],[\"双击\",{\"1\":{\"77\":1}}],[\"双击打开安装\",{\"1\":{\"5\":1}}],[\"双层循环\",{\"1\":{\"0\":1}}],[\"href\",{\"1\":{\"85\":2}}],[\"h3>\",{\"1\":{\"96\":1,\"103\":2}}],[\"h3\",{\"1\":{\"59\":1}}],[\"h1\",{\"1\":{\"59\":1}}],[\"htm\",{\"1\":{\"88\":1}}],[\"htmlevents\",{\"1\":{\"141\":1}}],[\"html属性和组件属性\",{\"0\":{\"100\":1}}],[\"html>\",{\"1\":{\"85\":1}}],[\"html\",{\"1\":{\"55\":1,\"65\":5,\"68\":1,\"78\":1,\"81\":3,\"85\":2,\"88\":1,\"89\":1,\"100\":14,\"103\":2}}],[\"http\",{\"1\":{\"8\":1,\"85\":3}}],[\"https\",{\"1\":{\"8\":1,\"12\":2}}],[\"h2>立马来看amos实际完成的\",{\"1\":{\"48\":1}}],[\"h2>\",{\"1\":{\"48\":20}}],[\"h2\",{\"1\":{\"48\":22,\"59\":1}}],[\"hacky\",{\"1\":{\"102\":1}}],[\"hard\",{\"1\":{\"51\":2}}],[\"handle\",{\"1\":{\"141\":3}}],[\"handlepreview\",{\"1\":{\"101\":2}}],[\"handleclick\",{\"1\":{\"92\":3}}],[\"handler\",{\"1\":{\"75\":2,\"131\":3,\"134\":3,\"145\":2}}],[\"hand\",{\"1\":{\"45\":1}}],[\"haspermission\",{\"1\":{\"149\":2}}],[\"hashtable\",{\"1\":{\"123\":4},\"2\":{\"128\":1}}],[\"hasclass\",{\"1\":{\"65\":1}}],[\"has\",{\"1\":{\"0\":1,\"59\":1,\"60\":1,\"82\":1,\"109\":1}}],[\"hasownproperty\",{\"1\":{\"0\":1}}],[\"hide\",{\"1\":{\"42\":1}}],[\"hidden和\",{\"1\":{\"58\":1}}],[\"hidden\",{\"1\":{\"27\":2,\"30\":3,\"37\":1,\"38\":1,\"58\":2}}],[\"hello\",{\"1\":{\"54\":1,\"75\":2,\"76\":3,\"81\":4}}],[\"help\",{\"1\":{\"45\":1}}],[\"head>\",{\"1\":{\"51\":1,\"85\":2}}],[\"head~2\",{\"1\":{\"51\":1}}],[\"head~1\",{\"1\":{\"51\":1}}],[\"head^^\",{\"1\":{\"51\":1}}],[\"head^\",{\"1\":{\"51\":1}}],[\"head\",{\"1\":{\"51\":3}}],[\"header\",{\"1\":{\"27\":1,\"59\":1,\"96\":4,\"103\":5}}],[\"height\",{\"1\":{\"26\":1,\"31\":3,\"43\":1,\"48\":31,\"66\":1,\"74\":2,\"88\":1,\"109\":1,\"152\":2,\"154\":1}}],[\"hexo初始化之后默认的主题是landscape\",{\"1\":{\"11\":1}}],[\"hexo\",{\"1\":{\"6\":3,\"8\":5,\"9\":4,\"10\":1,\"12\":4,\"14\":1,\"17\":1,\"19\":1,\"20\":1},\"2\":{\"22\":1}}],[\"hexo是基于node\",{\"1\":{\"5\":1}}],[\"here\",{\"1\":{\"6\":1}}],[\"站点管理文件\",{\"0\":{\"15\":1},\"1\":{\"3\":1}}],[\"添加事件监听器\",{\"1\":{\"134\":1}}],[\"添加\",{\"1\":{\"12\":1,\"51\":1}}],[\"添加一个或一串回调函数\",{\"1\":{\"82\":1}}],[\"添加一个或多个失败回调\",{\"1\":{\"81\":1}}],[\"添加一个或多个成功回调\",{\"1\":{\"81\":1}}],[\"添加一个函数用于准备回调\",{\"1\":{\"81\":1}}],[\"添加一个函数\",{\"1\":{\"81\":1}}],[\"添加一个类\",{\"1\":{\"65\":1}}],[\"添加一个\",{\"1\":{\"7\":1}}],[\"添加评论\",{\"0\":{\"13\":1},\"1\":{\"3\":1}}],[\"添加rss\",{\"0\":{\"12\":1},\"1\":{\"3\":1}}],[\"安装步骤\",{\"1\":{\"5\":1}}],[\"安装hexo命令\",{\"1\":{\"6\":1}}],[\"安装hexo\",{\"0\":{\"6\":1},\"1\":{\"3\":1}}],[\"安装nodejs\",{\"0\":{\"5\":1},\"1\":{\"3\":1}}],[\"安装git\",{\"0\":{\"4\":1},\"1\":{\"3\":1}}],[\"于是便自己试着搭建了一个\",{\"1\":{\"3\":1}}],[\"如\",{\"1\":{\"56\":1,\"119\":1,\"143\":1}}],[\"如此便可以达到垂直居中的目的了\",{\"1\":{\"48\":1}}],[\"如下\",{\"1\":{\"7\":1,\"102\":1}}],[\"如何利用hexo搭建一个属于自己的博客网站\",{\"0\":{\"3\":1}}],[\"如果是则显示\",{\"1\":{\"149\":1}}],[\"如果是jquery对象应该使用\",{\"1\":{\"55\":1}}],[\"如果支持就使用\",{\"1\":{\"145\":1}}],[\"如果到了就设置图片的\",{\"1\":{\"145\":1}}],[\"如果在延迟时间内再调用该方法\",{\"1\":{\"138\":1}}],[\"如果在普通的\",{\"1\":{\"95\":1}}],[\"如果计时器没有在\",{\"1\":{\"134\":1}}],[\"如果\",{\"1\":{\"134\":1}}],[\"如果真的是一种简易的脚本语言\",{\"1\":{\"122\":1}}],[\"如果遇到了该如何处理呢\",{\"1\":{\"101\":1}}],[\"如果同时写了\",{\"1\":{\"100\":1}}],[\"如果想要动态插槽名还可以写成\",{\"1\":{\"96\":1}}],[\"如果想要达到期望的效果\",{\"1\":{\"96\":1}}],[\"如果组件只有一个默认的插槽还可以使用缩写语法\",{\"1\":{\"96\":1}}],[\"如果用在子组件上\",{\"1\":{\"95\":1}}],[\"如果不需要做任何判断可以纯粹是\",{\"1\":{\"103\":1}}],[\"如果不希望这些属性显示在最终的\",{\"1\":{\"100\":1}}],[\"如果不使用箭头函数那么接收的将会是事件的对象event属性\",{\"1\":{\"92\":1}}],[\"如果不指定\",{\"1\":{\"51\":2}}],[\"如果需要条件判断就使用函数式组件的方式来写\",{\"1\":{\"103\":1}}],[\"如果需要用于组件的方法中\",{\"1\":{\"98\":1}}],[\"如果需要给事件处理函数传参数\",{\"1\":{\"92\":1}}],[\"如果需要在样式中作一些像\",{\"1\":{\"88\":1}}],[\"如果换成\",{\"1\":{\"81\":1}}],[\"如果一个\",{\"1\":{\"81\":1}}],[\"如果一个绑定函数最后返回了\",{\"1\":{\"77\":1}}],[\"如果要添加对跟踪文件所做的所有更改并提交\",{\"1\":{\"51\":1}}],[\"如果你的绝对定位元素需要水平居中于父层\",{\"1\":{\"48\":1}}],[\"如果本地站点文件丢失了或换了电脑怎么办\",{\"1\":{\"15\":1}}],[\"如果没有该key值\",{\"1\":{\"0\":1}}],[\"如果有该key值\",{\"1\":{\"0\":1}}],[\"如果有相同的值则跳过\",{\"1\":{\"0\":1}}],[\"技术文章\",{\"2\":{\"1\":1,\"21\":1,\"46\":1,\"49\":1,\"52\":1,\"83\":1,\"86\":1,\"104\":1,\"107\":1,\"110\":1,\"127\":1,\"156\":1}}],[\"严格来说并不算是一种\",{\"1\":{\"0\":1}}],[\"c++\",{\"1\":{\"122\":3}}],[\"ctrlkey\",{\"1\":{\"94\":2}}],[\"ctrl\",{\"1\":{\"94\":1}}],[\"createevent\",{\"1\":{\"141\":1}}],[\"createelement\",{\"1\":{\"69\":1,\"131\":1,\"152\":1}}],[\"createinstance\",{\"1\":{\"85\":3}}],[\"createtextrange\",{\"1\":{\"85\":4}}],[\"cross\",{\"1\":{\"48\":1}}],[\"crosshair\",{\"1\":{\"45\":1}}],[\"char\",{\"1\":{\"117\":1}}],[\"charset=gb2312\",{\"1\":{\"85\":1}}],[\"change=\",{\"1\":{\"140\":1}}],[\"change\",{\"1\":{\"77\":1,\"140\":1}}],[\"channel><\",{\"1\":{\"74\":1}}],[\"checkarray\",{\"1\":{\"149\":2}}],[\"checkbox\",{\"1\":{\"58\":1,\"73\":2}}],[\"checked\",{\"1\":{\"58\":1}}],[\"checkout\",{\"1\":{\"17\":1,\"51\":4}}],[\"childlist\",{\"1\":{\"109\":2}}],[\"children\",{\"1\":{\"61\":2,\"103\":2}}],[\"child\",{\"1\":{\"56\":6,\"59\":1,\"109\":1}}],[\"cans\",{\"1\":{\"152\":7}}],[\"can\",{\"1\":{\"152\":9}}],[\"canvas\",{\"1\":{\"152\":2}}],[\"cancel\",{\"1\":{\"134\":5}}],[\"catch\",{\"1\":{\"85\":1}}],[\"callbacks的控制方法\",{\"1\":{\"82\":1}}],[\"callbacks对象的初始化支持一组控制参数\",{\"1\":{\"82\":1}}],[\"callbacks对象才是真正的jquery中定义的原始的回调管理机制\",{\"1\":{\"82\":1}}],[\"callbacks\",{\"0\":{\"82\":1},\"1\":{\"82\":11}}],[\"callback参数值\",{\"1\":{\"78\":1}}],[\"callback参数\",{\"1\":{\"78\":1}}],[\"callback\",{\"1\":{\"78\":1,\"134\":1}}],[\"calc<\",{\"1\":{\"48\":1}}],[\"calc\",{\"1\":{\"48\":1}}],[\"calc是计算机英文单词calculator的缩写\",{\"1\":{\"48\":1}}],[\"cache\",{\"1\":{\"78\":1,\"123\":6}}],[\"cached\",{\"1\":{\"51\":2}}],[\"capture\",{\"1\":{\"94\":3}}],[\"caption\",{\"1\":{\"27\":1,\"42\":1,\"43\":2}}],[\"capitalize\",{\"1\":{\"43\":1,\"98\":1}}],[\"ccc\",{\"1\":{\"48\":23}}],[\"center来达到垂直居中的目的\",{\"1\":{\"48\":1}}],[\"center就能达成垂直居中的目的了\",{\"1\":{\"48\":2}}],[\"center\",{\"1\":{\"43\":1,\"48\":42},\"2\":{\"50\":1}}],[\"cell<\",{\"1\":{\"48\":1}}],[\"cells\",{\"1\":{\"42\":1}}],[\"cell\",{\"1\":{\"27\":1,\"48\":1}}],[\"css3好棒\",{\"1\":{\"48\":1}}],[\"css垂直居中\",{\"0\":{\"48\":1},\"1\":{\"48\":22},\"2\":{\"50\":1}}],[\"css\",{\"1\":{\"48\":4,\"60\":2,\"66\":4,\"73\":3,\"88\":3,\"100\":1},\"2\":{\"47\":1,\"50\":1}}],[\"css样式解析到显示至浏览器屏幕上就发生在②③④步骤\",{\"1\":{\"26\":1}}],[\"css样式常用属性及书写顺序规范\",{\"0\":{\"23\":1}}],[\"css的常用属性及书写顺序规范\",{\"1\":{\"23\":1}}],[\"clark\",{\"1\":{\"65\":2}}],[\"classes\",{\"1\":{\"85\":3}}],[\"classname=\",{\"1\":{\"100\":1}}],[\"classname\",{\"1\":{\"65\":2,\"100\":1}}],[\"class\",{\"1\":{\"56\":1,\"88\":1,\"100\":4,\"115\":3,\"116\":1,\"117\":2,\"119\":2,\"121\":3,\"122\":1,\"123\":6}}],[\"class=\",{\"1\":{\"48\":46,\"71\":3,\"90\":4,\"96\":2,\"100\":2,\"103\":3,\"150\":1,\"155\":1}}],[\"closet\",{\"1\":{\"62\":1}}],[\"close\",{\"1\":{\"45\":2}}],[\"cloneablemodel类定义及扩展\",{\"1\":{\"123\":1}}],[\"cloneablemodel\",{\"1\":{\"123\":7}}],[\"cloneobj2\",{\"1\":{\"115\":1}}],[\"cloneobj1\",{\"1\":{\"115\":1}}],[\"cloned\",{\"1\":{\"115\":4,\"121\":6}}],[\"clone\",{\"1\":{\"20\":1,\"51\":1,\"72\":3,\"112\":1,\"115\":5,\"116\":3,\"117\":1,\"119\":3,\"121\":4,\"123\":2}}],[\"clone命令克隆站点仓库\",{\"1\":{\"20\":1}}],[\"cleartimeout\",{\"1\":{\"134\":1,\"138\":1,\"145\":2}}],[\"cleardata\",{\"1\":{\"85\":1}}],[\"clear\",{\"1\":{\"27\":1,\"51\":1}}],[\"clean\",{\"1\":{\"8\":1,\"9\":1}}],[\"clientwidth\",{\"1\":{\"154\":1}}],[\"clientheight\",{\"1\":{\"145\":1,\"154\":1}}],[\"client\",{\"1\":{\"85\":3,\"115\":1}}],[\"clipid\",{\"1\":{\"85\":2}}],[\"clip\",{\"1\":{\"85\":15}}],[\"clipboard\",{\"1\":{\"85\":2}}],[\"clipboarddata\",{\"1\":{\"85\":5}}],[\"clipboardcontent\",{\"1\":{\"85\":6}}],[\"click=\",{\"1\":{\"96\":1}}],[\"click<\",{\"1\":{\"92\":1}}],[\"click\",{\"1\":{\"54\":1,\"75\":12,\"76\":4,\"77\":2,\"92\":2,\"94\":1,\"103\":1,\"131\":2,\"134\":3,\"138\":1}}],[\"cli\",{\"1\":{\"20\":1}}],[\"codebase\",{\"1\":{\"85\":1}}],[\"copy=\",{\"1\":{\"132\":1}}],[\"copytext\",{\"1\":{\"85\":4,\"132\":2}}],[\"copytoclipboard\",{\"1\":{\"85\":3}}],[\"copyurl\",{\"1\":{\"85\":3}}],[\"copy\",{\"0\":{\"118\":1,\"120\":1},\"1\":{\"85\":7,\"129\":4,\"131\":5,\"132\":2},\"2\":{\"87\":1}}],[\"counters\",{\"1\":{\"45\":2}}],[\"counter\",{\"1\":{\"45\":2}}],[\"collections\",{\"1\":{\"123\":1}}],[\"collapse\",{\"1\":{\"27\":1,\"42\":2,\"85\":1}}],[\"colspan\",{\"1\":{\"100\":1}}],[\"cols=50\",{\"1\":{\"85\":1}}],[\"cols=\",{\"1\":{\"85\":1}}],[\"col\",{\"1\":{\"45\":1}}],[\"columns\",{\"1\":{\"48\":1}}],[\"column直式排法\",{\"1\":{\"48\":1}}],[\"column\",{\"1\":{\"27\":2,\"48\":1}}],[\"color\",{\"1\":{\"26\":1,\"36\":5,\"38\":4,\"39\":10,\"41\":1,\"43\":2,\"44\":3,\"60\":2,\"66\":4,\"73\":3,\"90\":1}}],[\"componentupdated\",{\"1\":{\"129\":1,\"131\":1,\"134\":1}}],[\"components\",{\"1\":{\"85\":7,\"88\":7,\"96\":1}}],[\"company\",{\"1\":{\"116\":5,\"119\":8,\"121\":5}}],[\"compact\",{\"1\":{\"27\":1}}],[\"computed\",{\"1\":{\"96\":2}}],[\"complete\",{\"1\":{\"78\":2,\"85\":1}}],[\"command\",{\"0\":{\"51\":1}}],[\"commit\",{\"1\":{\"19\":1,\"51\":3}}],[\"com\",{\"1\":{\"7\":2,\"8\":1,\"16\":1,\"20\":1}}],[\"concreteprototype2\",{\"1\":{\"115\":5}}],[\"concreteprototype1\",{\"1\":{\"115\":9}}],[\"control\",{\"1\":{\"102\":1}}],[\"container>\",{\"1\":{\"88\":1}}],[\"container\",{\"1\":{\"85\":2,\"88\":1}}],[\"contains\",{\"1\":{\"59\":1}}],[\"context\",{\"1\":{\"74\":2,\"78\":1,\"145\":3}}],[\"content=\",{\"1\":{\"85\":1}}],[\"content的缩写\",{\"1\":{\"48\":1}}],[\"content与justify\",{\"1\":{\"48\":1}}],[\"content这属性有多少人用过\",{\"1\":{\"48\":1}}],[\"content来对子元素做垂直居中\",{\"1\":{\"48\":1}}],[\"content在flex中仅能针对多行元素起作用\",{\"1\":{\"48\":1}}],[\"content有点差异\",{\"1\":{\"48\":1}}],[\"content跟flex的align\",{\"1\":{\"48\":1}}],[\"content<\",{\"1\":{\"48\":3}}],[\"content属性来居中\",{\"1\":{\"48\":1}}],[\"content\",{\"1\":{\"45\":1,\"48\":59,\"85\":1}}],[\"config\",{\"1\":{\"6\":1,\"7\":2,\"8\":1,\"12\":1,\"85\":1,\"109\":6}}],[\"console\",{\"1\":{\"0\":15,\"74\":2,\"75\":8,\"76\":4,\"81\":9,\"82\":2,\"96\":2,\"100\":2,\"109\":6,\"112\":1,\"115\":2,\"116\":3,\"119\":3,\"121\":1,\"123\":3,\"131\":2,\"139\":1}}],[\"constructor\",{\"1\":{\"122\":1}}],[\"const\",{\"1\":{\"0\":21,\"88\":2,\"93\":4,\"95\":2,\"97\":1,\"102\":7,\"103\":3,\"109\":10,\"129\":1,\"131\":3,\"134\":2,\"138\":1,\"140\":1,\"141\":3,\"145\":10,\"149\":1,\"152\":1,\"154\":1}}],[\"c\",{\"1\":{\"7\":2,\"112\":2,\"116\":3,\"119\":6,\"123\":2},\"2\":{\"128\":1}}],[\"currenttime\",{\"1\":{\"145\":4}}],[\"currenttarget\",{\"1\":{\"77\":2,\"94\":2}}],[\"current\",{\"1\":{\"65\":4,\"96\":8}}],[\"current为当前最新版\",{\"1\":{\"5\":1}}],[\"cursor\",{\"1\":{\"45\":1,\"154\":1}}],[\"cur\",{\"1\":{\"0\":3}}],[\"png\",{\"1\":{\"152\":1}}],[\"pi\",{\"1\":{\"152\":1}}],[\"ping\",{\"1\":{\"10\":2}}],[\"permission=\",{\"1\":{\"150\":2}}],[\"permission的值\",{\"1\":{\"149\":1}}],[\"permission\",{\"1\":{\"129\":1,\"149\":5,\"150\":1}}],[\"person\",{\"1\":{\"112\":4}}],[\"performance\",{\"1\":{\"109\":1}}],[\"performanceobserver\",{\"1\":{\"109\":1}}],[\"performanceobserver观察性能测量事件\",{\"1\":{\"109\":1}}],[\"px`\",{\"1\":{\"109\":2}}],[\"px\",{\"1\":{\"109\":2,\"154\":2}}],[\"p>\",{\"1\":{\"69\":1,\"70\":1,\"102\":18,\"103\":1}}],[\"photo\",{\"1\":{\"65\":2}}],[\"p\",{\"1\":{\"54\":1}}],[\"place\",{\"1\":{\"48\":6}}],[\"plugin\",{\"1\":{\"12\":1,\"102\":1}}],[\"plugins\",{\"1\":{\"12\":2}}],[\"price\",{\"1\":{\"123\":5}}],[\"private\",{\"1\":{\"116\":5,\"119\":6,\"121\":1}}],[\"privilegemanager\",{\"1\":{\"85\":1}}],[\"primary\",{\"1\":{\"90\":1}}],[\"principal\",{\"1\":{\"85\":1}}],[\"productcloned\",{\"1\":{\"123\":5}}],[\"product\",{\"1\":{\"123\":8}}],[\"programming\",{\"1\":{\"122\":1}}],[\"program\",{\"1\":{\"121\":1,\"123\":1}}],[\"progress\",{\"1\":{\"45\":1,\"81\":1}}],[\"prototype\",{\"1\":{\"113\":2,\"115\":8,\"122\":8}}],[\"process可以被重复激发\",{\"1\":{\"81\":1}}],[\"process\",{\"1\":{\"81\":2}}],[\"proxy\",{\"1\":{\"74\":5,\"75\":2}}],[\"proposal\",{\"1\":{\"102\":1}}],[\"property\",{\"1\":{\"100\":1,\"103\":1}}],[\"properties\",{\"1\":{\"64\":1,\"65\":1}}],[\"properties的区别\",{\"0\":{\"64\":1}}],[\"propsonpreview=\",{\"1\":{\"101\":1}}],[\"props\",{\"1\":{\"96\":1,\"100\":6,\"101\":1,\"103\":5}}],[\"prop\",{\"1\":{\"65\":1,\"96\":1}}],[\"presstimer\",{\"1\":{\"134\":6}}],[\"prepend\",{\"1\":{\"69\":1}}],[\"prettyprint\",{\"1\":{\"64\":1}}],[\"pre~siblings\",{\"1\":{\"56\":1}}],[\"pre+next\",{\"1\":{\"56\":1}}],[\"pre\",{\"1\":{\"43\":1}}],[\"prevtime\",{\"1\":{\"145\":6}}],[\"prevent`\",{\"1\":{\"94\":1}}],[\"prevent\",{\"1\":{\"94\":1}}],[\"preventdefault\",{\"1\":{\"77\":2,\"94\":2}}],[\"prevuntil\",{\"1\":{\"62\":1}}],[\"prevall\",{\"1\":{\"62\":1}}],[\"prev\",{\"1\":{\"0\":4}}],[\"polished\",{\"1\":{\"88\":1}}],[\"pop\",{\"1\":{\"51\":1}}],[\"pointer\",{\"1\":{\"45\":1,\"112\":1}}],[\"post\",{\"1\":{\"78\":1}}],[\"posts路径下看到你创建的文章\",{\"1\":{\"14\":1}}],[\"position是相对于父级元素\",{\"1\":{\"66\":1}}],[\"position\",{\"1\":{\"26\":1,\"28\":1,\"41\":1,\"44\":3,\"48\":8,\"66\":1,\"131\":1}}],[\"pattern\",{\"1\":{\"113\":1}}],[\"path>\",{\"1\":{\"51\":2}}],[\"path\",{\"1\":{\"5\":1,\"12\":1}}],[\"passive\",{\"1\":{\"94\":1}}],[\"pass\",{\"1\":{\"92\":1}}],[\"password📻reset\",{\"1\":{\"58\":1}}],[\"page\",{\"1\":{\"96\":2,\"103\":4}}],[\"pagey\",{\"1\":{\"77\":1,\"154\":2}}],[\"pagex\",{\"1\":{\"77\":1,\"154\":2}}],[\"partial\",{\"1\":{\"103\":2}}],[\"parseint\",{\"1\":{\"154\":2}}],[\"parsererror\",{\"1\":{\"78\":2}}],[\"parsexml\",{\"1\":{\"74\":2}}],[\"parsejson\",{\"1\":{\"74\":1}}],[\"parentnode\",{\"1\":{\"149\":2,\"152\":3}}],[\"parentuntil\",{\"1\":{\"63\":1}}],[\"parents\",{\"1\":{\"63\":1}}],[\"parent\",{\"1\":{\"59\":1,\"63\":1,\"103\":1,\"141\":4}}],[\"padding<\",{\"1\":{\"48\":1}}],[\"padding\",{\"0\":{\"34\":1},\"1\":{\"34\":5,\"48\":1,\"109\":1}}],[\"package\",{\"1\":{\"6\":1}}],[\"pull\",{\"1\":{\"16\":1,\"51\":1}}],[\"pub文件里一经复制好了的内容添加到ssh\",{\"1\":{\"7\":1}}],[\"pub文件\",{\"1\":{\"7\":1}}],[\"public\",{\"1\":{\"6\":1,\"85\":1,\"115\":6,\"116\":5,\"119\":7,\"121\":11,\"123\":12}}],[\"push\",{\"1\":{\"0\":5,\"19\":1,\"51\":2}}],[\"所有实例对象需要共享的属性和方法\",{\"1\":{\"122\":1}}],[\"所有的子节点\",{\"1\":{\"61\":1}}],[\"所有的都去重了\",{\"1\":{\"0\":1}}],[\"所以进行图片懒加载优化势在必行\",{\"1\":{\"143\":1}}],[\"所以给\",{\"1\":{\"119\":1}}],[\"所以对于值类型\",{\"1\":{\"119\":1}}],[\"所以重写了\",{\"1\":{\"117\":1}}],[\"所以尽量还是采用\",{\"1\":{\"100\":1}}],[\"所以此时选择的内容必须是可视的\",{\"1\":{\"85\":1}}],[\"所以输出结果是\",{\"1\":{\"81\":1}}],[\"所以原本横排用到的水平对齐方式\",{\"1\":{\"48\":1}}],[\"所以请谨慎使用\",{\"1\":{\"48\":1}}],[\"所以我们需要自定义一个指令来解决这问题\",{\"1\":{\"140\":1}}],[\"所以我们可以很开心的使用align\",{\"1\":{\"48\":1}}],[\"所以我们必须要将这些数据多包一层\",{\"1\":{\"48\":1}}],[\"所以导致align\",{\"1\":{\"48\":1}}],[\"所以margin\",{\"1\":{\"48\":1}}],[\"所以规范的的css书写顺序对于文档渲染来说一定是事半功倍的\",{\"1\":{\"26\":1}}],[\"所以不得不重新渲染\",{\"1\":{\"26\":1}}],[\"所以\",{\"1\":{\"13\":1,\"112\":1,\"122\":1}}],[\"所以还是老老实实把这玩意儿装了吧\",{\"1\":{\"5\":1}}],[\"所以最终得到的就是去重后的结果\",{\"1\":{\"0\":1}}],[\"递归loop\",{\"1\":{\"0\":1}}],[\"排序后更加方便去重\",{\"1\":{\"0\":1}}],[\"排序方法\",{\"1\":{\"0\":1}}],[\"be\",{\"1\":{\"134\":1}}],[\"been\",{\"1\":{\"109\":1}}],[\"before以及\",{\"1\":{\"48\":1}}],[\"before伪元素适用flex\",{\"1\":{\"48\":1}}],[\"before伪类元素设定为100\",{\"1\":{\"48\":1}}],[\"before\",{\"1\":{\"48\":6,\"70\":1}}],[\"binding\",{\"1\":{\"134\":3,\"138\":2,\"141\":1,\"145\":2,\"149\":2,\"152\":4}}],[\"bind`\",{\"1\":{\"98\":1}}],[\"bind\",{\"1\":{\"96\":2,\"98\":1,\"129\":1,\"131\":1,\"134\":1,\"141\":1,\"145\":1,\"152\":1}}],[\"b>\",{\"1\":{\"85\":1}}],[\"btn\",{\"1\":{\"75\":10,\"76\":9,\"85\":2,\"90\":5,\"150\":1}}],[\"by\",{\"1\":{\"65\":2}}],[\"brendan\",{\"1\":{\"122\":4}}],[\"brush\",{\"1\":{\"65\":2}}],[\"branch命令查看当前所在分支\",{\"1\":{\"19\":1}}],[\"branch切换成hexo\",{\"1\":{\"18\":1}}],[\"branch\",{\"1\":{\"8\":1,\"51\":4}}],[\"button>\",{\"1\":{\"92\":3,\"94\":1,\"96\":2,\"132\":1,\"135\":1,\"139\":1,\"150\":2}}],[\"button\",{\"1\":{\"58\":1,\"85\":5,\"92\":3,\"94\":1,\"96\":2,\"134\":1}}],[\"blur\",{\"1\":{\"77\":1}}],[\"blue\",{\"1\":{\"73\":1}}],[\"blink\",{\"1\":{\"43\":1}}],[\"block<\",{\"1\":{\"48\":1}}],[\"block元素之间的4\",{\"1\":{\"48\":1}}],[\"block性质后\",{\"1\":{\"48\":1}}],[\"block来代替height的设置\",{\"1\":{\"48\":1}}],[\"block对象的外层对象使用inline\",{\"1\":{\"48\":1}}],[\"block\",{\"1\":{\"27\":1,\"48\":8}}],[\"blog\",{\"2\":{\"22\":1}}],[\"bootstrap\",{\"1\":{\"100\":1}}],[\"body>\",{\"1\":{\"85\":2}}],[\"body\",{\"1\":{\"64\":1,\"65\":4,\"66\":6,\"69\":1,\"85\":1,\"131\":5,\"154\":2}}],[\"bolder\",{\"1\":{\"43\":1}}],[\"bold\",{\"1\":{\"43\":1}}],[\"box19\",{\"1\":{\"48\":1}}],[\"box18\",{\"1\":{\"48\":1}}],[\"box17\",{\"1\":{\"48\":1}}],[\"box16\",{\"1\":{\"48\":1}}],[\"box15\",{\"1\":{\"48\":1}}],[\"box14\",{\"1\":{\"48\":1}}],[\"box13\",{\"1\":{\"48\":1}}],[\"box12\",{\"1\":{\"48\":1}}],[\"box11\",{\"1\":{\"48\":3}}],[\"box10\",{\"1\":{\"48\":1}}],[\"box9\",{\"1\":{\"48\":1}}],[\"box8\",{\"1\":{\"48\":1}}],[\"box7\",{\"1\":{\"48\":1}}],[\"box6\",{\"1\":{\"48\":1}}],[\"box5\",{\"1\":{\"48\":2}}],[\"box4\",{\"1\":{\"48\":2}}],[\"box3\",{\"1\":{\"48\":1}}],[\"box23\",{\"1\":{\"48\":1}}],[\"box22\",{\"1\":{\"48\":1}}],[\"box21\",{\"1\":{\"48\":1}}],[\"box20\",{\"1\":{\"48\":1}}],[\"box2\",{\"1\":{\"48\":2}}],[\"box\",{\"1\":{\"43\":1,\"48\":48}}],[\"border\",{\"0\":{\"35\":1},\"1\":{\"36\":20,\"37\":5,\"38\":17,\"39\":5,\"40\":1,\"42\":2,\"48\":22}}],[\"bottom\",{\"1\":{\"28\":1,\"33\":1,\"34\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"42\":1,\"43\":2,\"48\":2,\"145\":1}}],[\"both\",{\"1\":{\"27\":1}}],[\"banner\",{\"1\":{\"143\":1}}],[\"babel\",{\"1\":{\"89\":1,\"100\":1,\"102\":1}}],[\"base64\",{\"1\":{\"152\":1}}],[\"baseline\",{\"1\":{\"43\":1}}],[\"basiccondition\",{\"1\":{\"102\":2}}],[\"bash命令\",{\"1\":{\"12\":1}}],[\"bash中验证是否添加成功\",{\"1\":{\"7\":1}}],[\"bash中输入命令\",{\"1\":{\"7\":1}}],[\"bash中\",{\"1\":{\"7\":1,\"8\":1}}],[\"bash\",{\"1\":{\"6\":1}}],[\"bar\",{\"1\":{\"43\":1,\"60\":1,\"103\":2}}],[\"backgroundimage\",{\"1\":{\"152\":1}}],[\"background\",{\"1\":{\"26\":1,\"44\":10,\"48\":23,\"60\":2,\"66\":3,\"73\":3}}],[\"b\",{\"1\":{\"0\":2,\"17\":1,\"51\":1,\"103\":1,\"112\":8,\"116\":3,\"119\":4}}],[\"判断用户的权限是否在这个数组内\",{\"1\":{\"149\":1}}],[\"判断浏览器是否支持\",{\"1\":{\"145\":1}}],[\"判断图片是否到了可视区域\",{\"1\":{\"145\":1}}],[\"判断\",{\"1\":{\"102\":1}}],[\"判断参数的类型\",{\"1\":{\"74\":1}}],[\"判断是否有指定类\",{\"1\":{\"65\":1}}],[\"判断是否存在对象属性\",{\"1\":{\"0\":1}}],[\"判断结果数组是否存在当前元素\",{\"1\":{\"0\":1}}],[\"利用intersectionobserver监听el\",{\"1\":{\"145\":1}}],[\"利用此原理就能轻松达成垂直居中的需求了\",{\"1\":{\"48\":1}}],[\"利用hasownproperty\",{\"1\":{\"0\":1}}],[\"利用sort\",{\"1\":{\"0\":1}}],[\"两个true直接去掉了\",{\"1\":{\"0\":1}}],[\"两个null直接消失了\",{\"1\":{\"0\":1}}],[\"eich\",{\"1\":{\"122\":4}}],[\"elbtm\",{\"1\":{\"145\":2}}],[\"eltop\",{\"1\":{\"145\":2}}],[\"element\",{\"1\":{\"109\":3}}],[\"el\",{\"1\":{\"92\":3,\"94\":1,\"96\":2,\"97\":2,\"131\":12,\"134\":12,\"138\":2,\"141\":8,\"145\":22,\"149\":4,\"152\":2,\"154\":9,\"155\":1}}],[\"else\",{\"1\":{\"0\":2,\"85\":2,\"91\":1,\"102\":10,\"109\":1,\"145\":1,\"149\":1,\"154\":2}}],[\"e\",{\"1\":{\"85\":1,\"92\":1,\"94\":7,\"100\":3,\"134\":6,\"141\":3,\"154\":6}}],[\"each\",{\"1\":{\"74\":2}}],[\"entrytype\",{\"1\":{\"109\":1}}],[\"entrytypes\",{\"1\":{\"109\":1}}],[\"entry\",{\"1\":{\"109\":14}}],[\"entries\",{\"1\":{\"109\":4,\"145\":2}}],[\"enter`\",{\"1\":{\"94\":1}}],[\"enter\",{\"1\":{\"94\":1}}],[\"enableprivilege\",{\"1\":{\"85\":1}}],[\"enabled\",{\"1\":{\"58\":1}}],[\"en\",{\"1\":{\"85\":1}}],[\"end\",{\"1\":{\"60\":2}}],[\"equals\",{\"1\":{\"117\":1}}],[\"equiv=\",{\"1\":{\"85\":1}}],[\"eq\",{\"1\":{\"59\":1,\"60\":1}}],[\"even\",{\"1\":{\"56\":1,\"59\":1}}],[\"event参数还支持通过\",{\"1\":{\"75\":1}}],[\"eventobj\",{\"1\":{\"75\":8,\"76\":1}}],[\"event\",{\"1\":{\"54\":1,\"75\":1,\"76\":3,\"77\":21,\"94\":6}}],[\"edge\",{\"1\":{\"48\":1}}],[\"emoji\",{\"1\":{\"129\":1,\"141\":2,\"142\":2}}],[\"emotion\",{\"1\":{\"88\":3}}],[\"empty\",{\"1\":{\"42\":1,\"59\":1,\"72\":1,\"82\":1}}],[\"email\",{\"1\":{\"7\":1}}],[\"expressions\",{\"1\":{\"102\":1}}],[\"export\",{\"1\":{\"88\":1,\"93\":1,\"94\":1,\"96\":2,\"97\":1,\"100\":1,\"129\":1,\"131\":1,\"132\":1,\"134\":1,\"135\":1,\"138\":1,\"139\":1,\"140\":1,\"141\":1,\"145\":1,\"149\":1,\"152\":1,\"154\":1}}],[\"execcommand\",{\"1\":{\"85\":5,\"131\":1}}],[\"extend\",{\"1\":{\"74\":3}}],[\"extensions\",{\"1\":{\"12\":1}}],[\"existingdiv1\",{\"1\":{\"69\":2}}],[\"example\",{\"1\":{\"7\":1}}],[\"errorthrown\",{\"1\":{\"78\":1}}],[\"error\",{\"1\":{\"0\":4,\"77\":1,\"78\":4}}],[\"不显示\",{\"1\":{\"150\":1}}],[\"不必存在于\",{\"1\":{\"129\":1}}],[\"不受doga的影响\",{\"1\":{\"122\":1}}],[\"不会影响到另一个\",{\"1\":{\"122\":1}}],[\"不是基本数据类型\",{\"1\":{\"117\":1}}],[\"不是响应式的\",{\"1\":{\"95\":1}}],[\"不需要地址转换\",{\"1\":{\"112\":1}}],[\"不纯粹\",{\"1\":{\"99\":1}}],[\"不能直接写类似\",{\"1\":{\"93\":1}}],[\"不仅复制值类型字段\",{\"1\":{\"120\":1}}],[\"不仅禁止冒泡\",{\"1\":{\"77\":1}}],[\"不仅是\",{\"1\":{\"58\":1}}],[\"不同之处在于前面是触发事件\",{\"1\":{\"76\":1}}],[\"不支持负数\",{\"1\":{\"59\":1}}],[\"不然某些浏览器的语法不同\",{\"1\":{\"48\":1}}],[\"不可讳言的这方式真的是简单过头了\",{\"1\":{\"48\":1}}],[\"不由的说flex真的是一个神物\",{\"1\":{\"48\":1}}],[\"不想绑定的可以跳过这一个环节直接看下一节\",{\"1\":{\"10\":1}}],[\"不过在custom\",{\"1\":{\"5\":1}}],[\"不相同则push进数组\",{\"1\":{\"0\":1}}],[\"不考虑兼容性\",{\"1\":{\"0\":1}}],[\"循环原数组\",{\"1\":{\"0\":1}}],[\"two\",{\"1\":{\"93\":1}}],[\"timer\",{\"1\":{\"138\":4,\"145\":5}}],[\"timearea\",{\"1\":{\"116\":5}}],[\"timeout\",{\"1\":{\"78\":2}}],[\"timestamp\",{\"1\":{\"77\":1}}],[\"title=\",{\"1\":{\"100\":3,\"103\":1}}],[\"title>\",{\"1\":{\"85\":2}}],[\"title><\",{\"1\":{\"74\":1}}],[\"title<\",{\"1\":{\"74\":1}}],[\"title\",{\"1\":{\"65\":2,\"74\":1,\"85\":1,\"91\":1,\"96\":7,\"100\":7,\"103\":1}}],[\"title随便取\",{\"1\":{\"7\":1}}],[\"tab\",{\"1\":{\"103\":1}}],[\"tabheader\",{\"1\":{\"103\":2}}],[\"table\",{\"1\":{\"27\":10,\"42\":1,\"48\":2}}],[\"targetnode\",{\"1\":{\"109\":6}}],[\"target\",{\"1\":{\"77\":1,\"85\":7,\"94\":2,\"100\":2,\"109\":2}}],[\"tagname\",{\"1\":{\"64\":1,\"141\":1}}],[\"tag\",{\"1\":{\"56\":1}}],[\"txt\",{\"1\":{\"48\":2,\"85\":4}}],[\"tb\",{\"1\":{\"48\":2}}],[\"ternary\",{\"1\":{\"102\":1}}],[\"test<\",{\"1\":{\"85\":1}}],[\"test\",{\"1\":{\"65\":5,\"74\":2,\"81\":1,\"103\":1}}],[\"template>\",{\"1\":{\"96\":3,\"100\":1,\"103\":1,\"132\":1,\"135\":1,\"139\":1,\"140\":1,\"142\":1,\"152\":1,\"155\":1}}],[\"template<\",{\"1\":{\"48\":1}}],[\"template\",{\"1\":{\"48\":3,\"96\":1}}],[\"textbaseline\",{\"1\":{\"152\":1}}],[\"textalign\",{\"1\":{\"152\":1}}],[\"textarea\",{\"1\":{\"131\":18}}],[\"textarea>\",{\"1\":{\"85\":1}}],[\"textcolor\",{\"1\":{\"152\":4}}],[\"textcontent\",{\"1\":{\"100\":1}}],[\"textstatus\",{\"1\":{\"78\":3}}],[\"text\",{\"1\":{\"43\":6,\"45\":2,\"48\":27,\"58\":1,\"59\":1,\"68\":3,\"78\":1,\"85\":12,\"97\":2,\"100\":2,\"140\":1,\"142\":1,\"152\":2}}],[\"try\",{\"1\":{\"85\":1}}],[\"tr\",{\"1\":{\"85\":1}}],[\"triggerhandler\",{\"1\":{\"76\":6}}],[\"trigger\",{\"1\":{\"76\":6,\"77\":1,\"141\":2}}],[\"trim\",{\"1\":{\"74\":2}}],[\"transferable\",{\"1\":{\"85\":1}}],[\"transform\",{\"1\":{\"43\":1,\"48\":2}}],[\"trans\",{\"1\":{\"85\":5}}],[\"transitional\",{\"1\":{\"85\":2}}],[\"translatey\",{\"1\":{\"48\":2}}],[\"translate是一个很棒的属性\",{\"1\":{\"48\":1}}],[\"translate\",{\"1\":{\"48\":2}}],[\"transparent\",{\"1\":{\"44\":1}}],[\"true\",{\"1\":{\"0\":66,\"72\":3,\"74\":2,\"78\":1,\"85\":2,\"95\":2,\"97\":2,\"109\":3,\"141\":2,\"149\":1}}],[\"throttle\",{\"1\":{\"145\":2}}],[\"throw\",{\"1\":{\"134\":1}}],[\"through\",{\"1\":{\"43\":1}}],[\"then返回新的\",{\"1\":{\"81\":1}}],[\"then返回的是一个新的\",{\"1\":{\"81\":1}}],[\"then的返回值的区别\",{\"1\":{\"81\":1}}],[\"then\",{\"1\":{\"81\":7}}],[\"themes\",{\"1\":{\"6\":1,\"12\":2}}],[\"thanks\",{\"1\":{\"54\":1}}],[\"this\",{\"1\":{\"73\":1,\"74\":1,\"75\":2,\"79\":1,\"80\":2,\"85\":3,\"89\":3,\"90\":3,\"91\":3,\"92\":4,\"93\":1,\"94\":3,\"95\":3,\"96\":14,\"98\":1,\"100\":3,\"101\":2,\"103\":2,\"115\":2,\"116\":6,\"119\":4,\"121\":3,\"122\":5,\"123\":1,\"140\":2,\"145\":1}}],[\"thick\",{\"1\":{\"37\":4}}],[\"thin\",{\"1\":{\"37\":4}}],[\"t\",{\"1\":{\"7\":2,\"123\":3}}],[\"todataurl\",{\"1\":{\"152\":1}}],[\"tolowercase\",{\"1\":{\"141\":1}}],[\"touchcancel\",{\"1\":{\"134\":1}}],[\"touchend\",{\"1\":{\"134\":2}}],[\"touchstart\",{\"1\":{\"134\":2}}],[\"toggleclass\",{\"1\":{\"65\":8}}],[\"top设定为负一半的高度\",{\"1\":{\"48\":1}}],[\"top\",{\"1\":{\"28\":1,\"33\":1,\"34\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"42\":1,\"43\":2,\"48\":6,\"109\":1,\"145\":1,\"154\":3}}],[\"to\",{\"1\":{\"5\":1,\"51\":2}}],[\"types\",{\"1\":{\"112\":3}}],[\"type=\",{\"1\":{\"58\":2,\"85\":6,\"97\":2,\"100\":2,\"140\":1,\"142\":1}}],[\"typeof\",{\"1\":{\"0\":2,\"134\":1}}],[\"type\",{\"1\":{\"0\":4,\"8\":1,\"12\":1,\"41\":1,\"45\":2,\"74\":1,\"77\":1,\"78\":1,\"85\":1,\"109\":2,\"134\":1,\"141\":5}}],[\"srcoll\",{\"1\":{\"145\":1}}],[\"src\",{\"1\":{\"145\":9,\"146\":1}}],[\"src=\",{\"1\":{\"85\":1}}],[\"system\",{\"1\":{\"117\":3,\"123\":3}}],[\"snow\",{\"1\":{\"96\":2}}],[\"slots\",{\"1\":{\"103\":1}}],[\"slot=\",{\"1\":{\"96\":2,\"103\":1}}],[\"slotprops\",{\"1\":{\"96\":9}}],[\"slot>\",{\"1\":{\"96\":3}}],[\"slot\",{\"0\":{\"96\":1},\"1\":{\"96\":10,\"103\":1}}],[\"slice\",{\"1\":{\"73\":4}}],[\"shallow\",{\"0\":{\"118\":1}}],[\"shiftkey\",{\"1\":{\"94\":2}}],[\"shift\",{\"1\":{\"94\":1}}],[\"show\",{\"1\":{\"42\":1,\"51\":1,\"79\":1,\"97\":1,\"147\":1}}],[\"squash\",{\"1\":{\"51\":2}}],[\"sun公司正在大肆造势\",{\"1\":{\"122\":1}}],[\"supported\",{\"1\":{\"106\":1}}],[\"supports\",{\"1\":{\"85\":1}}],[\"support\",{\"1\":{\"85\":1}}],[\"super\",{\"1\":{\"43\":1}}],[\"success\",{\"1\":{\"78\":3,\"81\":2}}],[\"subtree\",{\"1\":{\"109\":1}}],[\"subtitle\",{\"1\":{\"96\":2}}],[\"submit\",{\"1\":{\"58\":1,\"77\":1,\"80\":2}}],[\"sub\",{\"1\":{\"43\":1}}],[\"signed\",{\"1\":{\"85\":1}}],[\"siblings\",{\"1\":{\"62\":1}}],[\"size\",{\"1\":{\"43\":1,\"90\":1,\"109\":1}}],[\"side\",{\"1\":{\"42\":1}}],[\"sass\",{\"0\":{\"106\":1},\"1\":{\"88\":2,\"106\":2},\"2\":{\"108\":1}}],[\"sans\",{\"1\":{\"43\":1}}],[\"save\",{\"1\":{\"9\":1,\"51\":1}}],[\"smaller\",{\"1\":{\"43\":1}}],[\"small\",{\"1\":{\"43\":4}}],[\"species\",{\"1\":{\"122\":12}}],[\"span\",{\"1\":{\"85\":1}}],[\"span>\",{\"1\":{\"65\":1,\"85\":1,\"89\":1,\"96\":1}}],[\"space\",{\"1\":{\"43\":1}}],[\"spacing\",{\"1\":{\"42\":1,\"43\":2}}],[\"splice\",{\"1\":{\"0\":2}}],[\"splice方法删除第二个\",{\"1\":{\"0\":1}}],[\"stop`\",{\"1\":{\"94\":1}}],[\"stop\",{\"1\":{\"94\":1}}],[\"stoponfalse\",{\"1\":{\"82\":1}}],[\"stoppropagation\",{\"1\":{\"77\":2,\"94\":2}}],[\"stopimmediatepropagation\",{\"1\":{\"77\":1}}],[\"str\",{\"1\":{\"74\":1,\"85\":4,\"152\":2}}],[\"string\",{\"1\":{\"45\":4,\"85\":1,\"112\":2,\"115\":1,\"116\":11,\"117\":5,\"119\":13,\"121\":7,\"123\":7}}],[\"start\",{\"1\":{\"134\":3}}],[\"starttime\",{\"1\":{\"109\":1}}],[\"stash\",{\"1\":{\"51\":14}}],[\"staged\",{\"1\":{\"51\":2}}],[\"statements\",{\"1\":{\"102\":1}}],[\"status\",{\"1\":{\"43\":1,\"51\":1}}],[\"static\",{\"1\":{\"28\":1,\"115\":1,\"116\":1,\"119\":1,\"121\":1,\"123\":4}}],[\"style=\",{\"1\":{\"90\":3}}],[\"styles\",{\"1\":{\"88\":1}}],[\"styled\",{\"1\":{\"88\":10}}],[\"style>\",{\"1\":{\"48\":23}}],[\"style\",{\"1\":{\"36\":5,\"38\":9,\"41\":5,\"45\":2,\"100\":1,\"131\":2,\"152\":2,\"154\":3}}],[\"sex\",{\"1\":{\"116\":5,\"119\":5}}],[\"security\",{\"1\":{\"85\":1}}],[\"seller\",{\"1\":{\"65\":2}}],[\"select\",{\"1\":{\"77\":1,\"85\":5,\"131\":1}}],[\"selector\",{\"1\":{\"59\":1,\"61\":1}}],[\"selectorn\",{\"1\":{\"59\":1}}],[\"selector2\",{\"1\":{\"59\":1}}],[\"selector1\",{\"1\":{\"59\":1}}],[\"selected\",{\"1\":{\"58\":1}}],[\"self`\",{\"1\":{\"94\":1}}],[\"self<\",{\"1\":{\"48\":2}}],[\"self\",{\"1\":{\"48\":6,\"94\":1}}],[\"serializearray\",{\"1\":{\"80\":2}}],[\"serialize\",{\"1\":{\"80\":2}}],[\"serif\",{\"1\":{\"43\":2}}],[\"server\",{\"1\":{\"8\":1}}],[\"separate\",{\"1\":{\"42\":1}}],[\"setattribute\",{\"1\":{\"145\":2}}],[\"setworkexperience\",{\"1\":{\"116\":3,\"119\":4,\"121\":3}}],[\"setpersonalinfo\",{\"1\":{\"116\":3,\"119\":3}}],[\"setinfo\",{\"1\":{\"112\":2}}],[\"sethandcursor\",{\"1\":{\"85\":1}}],[\"settimeout\",{\"1\":{\"134\":1,\"138\":1,\"145\":1}}],[\"settings是一个对象\",{\"1\":{\"78\":1}}],[\"settings\",{\"1\":{\"78\":1}}],[\"settext\",{\"1\":{\"85\":1}}],[\"settransferdata\",{\"1\":{\"85\":1}}],[\"setdata\",{\"1\":{\"85\":4}}],[\"setup这一步记得选\",{\"1\":{\"5\":1}}],[\"set\",{\"1\":{\"0\":4,\"119\":2,\"121\":3,\"123\":5}}],[\"s\",{\"1\":{\"8\":1}}],[\"ssh文件夹下的id\",{\"1\":{\"7\":2}}],[\"ssh文件夹下\",{\"1\":{\"7\":1}}],[\"ssh文件默认在\",{\"1\":{\"7\":1}}],[\"ssh\",{\"1\":{\"7\":3}}],[\"solid\",{\"1\":{\"37\":1,\"38\":1,\"48\":22}}],[\"source解析所得到的\",{\"1\":{\"6\":1}}],[\"source\",{\"1\":{\"6\":1}}],[\"sort\",{\"1\":{\"0\":2}}],[\"scope\",{\"1\":{\"96\":1}}],[\"scopedslots\",{\"1\":{\"96\":1,\"103\":2}}],[\"scoped\",{\"1\":{\"88\":1}}],[\"script>\",{\"1\":{\"85\":8,\"96\":1,\"100\":1,\"132\":1,\"135\":1,\"139\":1,\"140\":1}}],[\"script\",{\"1\":{\"78\":1}}],[\"scrollintoview\",{\"1\":{\"85\":1}}],[\"scrolltop\",{\"1\":{\"66\":1}}],[\"scrollleft\",{\"1\":{\"66\":1}}],[\"scroll\",{\"1\":{\"27\":1,\"30\":3,\"45\":1,\"77\":1,\"145\":2}}],[\"scaffolds\",{\"1\":{\"6\":1}}],[\"school上node\",{\"1\":{\"5\":1}}],[\"school上git教程之git安装配置\",{\"1\":{\"4\":1}}],[\"+=\",{\"1\":{\"66\":1,\"85\":2}}],[\"++\",{\"1\":{\"0\":1}}],[\"+\",{\"1\":{\"0\":3,\"5\":1,\"48\":18,\"65\":5,\"66\":1,\"74\":5,\"85\":2,\"140\":1,\"141\":1,\"145\":1,\"152\":2,\"154\":2}}],[\"jhenghei\",{\"1\":{\"152\":1}}],[\"jpg\",{\"1\":{\"146\":1}}],[\"john\",{\"1\":{\"112\":4,\"123\":2}}],[\"join\",{\"1\":{\"73\":2}}],[\"java\",{\"1\":{\"122\":4}}],[\"javascript继承机制\",{\"1\":{\"122\":1}}],[\"javascript\",{\"0\":{\"122\":1},\"1\":{\"85\":8,\"112\":1,\"122\":9},\"2\":{\"2\":1,\"84\":1}}],[\"jack\",{\"1\":{\"112\":1,\"121\":3}}],[\"jqxhr\",{\"1\":{\"78\":3}}],[\"jquey\",{\"1\":{\"78\":2,\"82\":1}}],[\"jquery还提供了一个\",{\"1\":{\"81\":1}}],[\"jquery提供了一些函数用于添加回调\",{\"1\":{\"81\":1}}],[\"jquery提供了一种机制\",{\"1\":{\"74\":1}}],[\"jquery的\",{\"1\":{\"81\":1}}],[\"jquery的ajax\",{\"1\":{\"78\":1}}],[\"jquery的事件绑定机制也使用了这套数据接口\",{\"1\":{\"74\":1}}],[\"jquery扩展的失去焦点\",{\"1\":{\"77\":1}}],[\"jquery扩展的获取焦点\",{\"1\":{\"77\":1}}],[\"jquery1\",{\"1\":{\"75\":1}}],[\"jquery会在指定节点添加一个内部标识\",{\"1\":{\"74\":1}}],[\"jquery对象与dom对象之间的转换\",{\"0\":{\"55\":1}}],[\"jquery大部分功能需要根据文档的dom模型来工作\",{\"1\":{\"54\":1}}],[\"jquery\",{\"0\":{\"54\":1},\"1\":{\"54\":4,\"55\":4,\"81\":1},\"2\":{\"84\":1}}],[\"justify\",{\"1\":{\"43\":1,\"48\":6}}],[\"jsx\",{\"0\":{\"88\":1},\"1\":{\"88\":5,\"89\":1,\"90\":1,\"91\":1,\"93\":1,\"96\":3,\"97\":1,\"99\":1,\"100\":8,\"101\":1,\"102\":2,\"103\":1},\"2\":{\"105\":1}}],[\"js\",{\"1\":{\"85\":7,\"88\":5,\"91\":1,\"99\":1,\"100\":1,\"106\":2,\"129\":2},\"2\":{\"108\":1}}],[\"js实现复制功能\",{\"0\":{\"85\":1}}],[\"jsonpcallback\",{\"1\":{\"78\":1}}],[\"jsonp\",{\"1\":{\"78\":2,\"81\":2}}],[\"json\",{\"1\":{\"6\":2,\"78\":1,\"81\":7}}],[\"js安装配置\",{\"1\":{\"5\":1}}],[\"js教程之node\",{\"1\":{\"5\":1}}],[\"js环境的静态博客\",{\"1\":{\"5\":1}}],[\"j++\",{\"1\":{\"0\":1}}],[\"j\",{\"1\":{\"0\":5}}],[\"<img\",{\"1\":{\"146\":1}}],[\"<input\",{\"1\":{\"85\":5,\"97\":2,\"100\":2,\"140\":1,\"142\":1}}],[\"<8\",{\"1\":{\"106\":1}}],[\"<6\",{\"1\":{\"106\":1}}],[\"<57\",{\"1\":{\"106\":1}}],[\"<5\",{\"1\":{\"106\":4}}],[\"<7\",{\"1\":{\"106\":1}}],[\"<p>我是slot内容<\",{\"1\":{\"103\":1}}],[\"<p>a<\",{\"1\":{\"102\":3}}],[\"<p>aa<\",{\"1\":{\"102\":1}}],[\"<p>blah<\",{\"1\":{\"102\":3}}],[\"<p>bb<\",{\"1\":{\"102\":1}}],[\"<p>herp<\",{\"1\":{\"102\":4}}],[\"<p>meh<\",{\"1\":{\"102\":4}}],[\"<p>true\",{\"1\":{\"102\":2}}],[\"<p>test<\",{\"1\":{\"69\":1,\"70\":1}}],[\"<label\",{\"1\":{\"100\":2}}],[\"<li\",{\"1\":{\"95\":2}}],[\"<liitem\",{\"1\":{\"93\":1}}],[\"<li>\",{\"1\":{\"93\":1}}],[\"<li>two<\",{\"1\":{\"93\":3}}],[\"<li>one<\",{\"1\":{\"93\":3}}],[\"<demo\",{\"1\":{\"100\":1,\"103\":1}}],[\"<directory>\",{\"1\":{\"51\":1}}],[\"<div>输入值\",{\"1\":{\"100\":1}}],[\"<div>输入的值\",{\"1\":{\"100\":1}}],[\"<div>\",{\"1\":{\"88\":1,\"91\":1,\"93\":2,\"96\":4,\"97\":1,\"98\":1,\"100\":1,\"102\":3,\"103\":2}}],[\"<div>测试<\",{\"1\":{\"65\":1}}],[\"<div\",{\"1\":{\"48\":46,\"64\":1,\"69\":1,\"71\":3,\"85\":1,\"89\":1,\"90\":4,\"96\":2,\"98\":1,\"100\":1,\"103\":3,\"150\":1,\"152\":1,\"155\":1}}],[\"<ul>\",{\"1\":{\"93\":1}}],[\"<url>\",{\"1\":{\"51\":2}}],[\"<><\",{\"1\":{\"93\":1}}],[\"<el\",{\"1\":{\"89\":1,\"92\":3,\"94\":1,\"96\":2,\"101\":2}}],[\"<button\",{\"1\":{\"132\":1,\"135\":1,\"139\":1,\"150\":2}}],[\"<br\",{\"1\":{\"103\":1}}],[\"<branch\",{\"1\":{\"51\":2}}],[\"<branch>\",{\"1\":{\"51\":8}}],[\"<b>复制<\",{\"1\":{\"85\":1}}],[\"<body\",{\"1\":{\"85\":1}}],[\"<body>\",{\"1\":{\"85\":1}}],[\"<title\",{\"1\":{\"91\":2}}],[\"<title>zero\",{\"1\":{\"85\":1}}],[\"<title>js复制代码<\",{\"1\":{\"85\":1}}],[\"<template\",{\"1\":{\"96\":2,\"103\":1}}],[\"<template>\",{\"1\":{\"88\":1,\"96\":1,\"100\":1,\"103\":1,\"132\":1,\"135\":1,\"139\":1,\"140\":1,\"142\":1,\"152\":1,\"155\":1}}],[\"<textarea\",{\"1\":{\"85\":1}}],[\"<meta\",{\"1\":{\"85\":1}}],[\"<message>\",{\"1\":{\"51\":4}}],[\"<h3>我是children<\",{\"1\":{\"103\":1}}],[\"<h3>jsx中的内部组件\",{\"1\":{\"103\":1}}],[\"<h3>injectedprops\",{\"1\":{\"96\":1}}],[\"<header\",{\"1\":{\"103\":1}}],[\"<head>\",{\"1\":{\"85\":2}}],[\"<html>\",{\"1\":{\"85\":1}}],[\"<html\",{\"1\":{\"85\":1}}],[\"<h2>23\",{\"1\":{\"48\":1}}],[\"<h2>22\",{\"1\":{\"48\":1}}],[\"<h2>21\",{\"1\":{\"48\":1}}],[\"<h2>20\",{\"1\":{\"48\":1}}],[\"<h2>19\",{\"1\":{\"48\":1}}],[\"<h2>18\",{\"1\":{\"48\":1}}],[\"<h2>17\",{\"1\":{\"48\":1}}],[\"<h2>16\",{\"1\":{\"48\":1}}],[\"<h2>15\",{\"1\":{\"48\":1}}],[\"<h2>14\",{\"1\":{\"48\":1}}],[\"<h2>13\",{\"1\":{\"48\":1}}],[\"<h2>12\",{\"1\":{\"48\":1}}],[\"<h2>11\",{\"1\":{\"48\":1}}],[\"<h2>10\",{\"1\":{\"48\":1}}],[\"<h2>9\",{\"1\":{\"48\":1}}],[\"<h2>8\",{\"1\":{\"48\":1}}],[\"<h2>7\",{\"1\":{\"48\":1}}],[\"<h2>6\",{\"1\":{\"48\":1}}],[\"<h2>5\",{\"1\":{\"48\":1}}],[\"<h2>4\",{\"1\":{\"48\":1}}],[\"<h2>3\",{\"1\":{\"48\":1}}],[\"<react\",{\"1\":{\"93\":1}}],[\"<remote\",{\"1\":{\"51\":7}}],[\"<rss\",{\"1\":{\"74\":1}}],[\"<slot\",{\"1\":{\"96\":3}}],[\"<subtitle\",{\"1\":{\"91\":1}}],[\"<span>\",{\"1\":{\"96\":1}}],[\"<span>message\",{\"1\":{\"89\":1}}],[\"<span>另外的内容<\",{\"1\":{\"65\":1}}],[\"<span\",{\"1\":{\"85\":1}}],[\"<script>\",{\"1\":{\"88\":1,\"96\":1,\"100\":1,\"132\":1,\"135\":1,\"139\":1,\"140\":1}}],[\"<script\",{\"1\":{\"85\":8}}],[\"<stash\",{\"1\":{\"51\":4}}],[\"<style>\",{\"1\":{\"48\":23,\"88\":1}}],[\"<old\",{\"1\":{\"51\":1}}],[\"<container>内容<\",{\"1\":{\"88\":1}}],[\"<commit\",{\"1\":{\"51\":6}}],[\"<current\",{\"1\":{\"51\":1,\"96\":6}}],[\"<new\",{\"1\":{\"51\":2}}],[\"<file>\",{\"1\":{\"51\":4}}],[\"<\",{\"1\":{\"0\":7,\"48\":70,\"85\":15,\"89\":3,\"90\":1,\"91\":1,\"92\":3,\"93\":4,\"94\":1,\"95\":2,\"96\":20,\"97\":1,\"98\":3,\"100\":5,\"102\":5,\"103\":6,\"132\":2,\"135\":2,\"139\":2,\"140\":2,\"142\":1,\"145\":1,\"150\":3,\"152\":1,\"154\":2,\"155\":1}}],[\"illustrated\",{\"1\":{\"123\":2}}],[\"icloneable\",{\"1\":{\"116\":1,\"117\":1,\"119\":1,\"121\":3,\"123\":2}}],[\"icon\",{\"1\":{\"43\":1}}],[\"iife\",{\"1\":{\"102\":2}}],[\"import\",{\"1\":{\"88\":2,\"129\":4}}],[\"img\",{\"1\":{\"65\":7,\"85\":2}}],[\"image\",{\"1\":{\"41\":1,\"44\":2,\"58\":2,\"152\":1}}],[\"isintersecting\",{\"1\":{\"109\":1,\"145\":1}}],[\"isimmediatepropagationstopped\",{\"1\":{\"77\":1}}],[\"issubtitle\",{\"1\":{\"91\":1}}],[\"isdefault\",{\"1\":{\"90\":2}}],[\"isdefaultprevented\",{\"1\":{\"77\":1}}],[\"isprimary\",{\"1\":{\"90\":1}}],[\"ispropagationstopped\",{\"1\":{\"77\":1}}],[\"ispainobject\",{\"1\":{\"74\":1}}],[\"isxmldoc\",{\"1\":{\"74\":1}}],[\"iswindow\",{\"1\":{\"74\":1}}],[\"isnumeric\",{\"1\":{\"74\":1}}],[\"isfunction\",{\"1\":{\"74\":1}}],[\"isemptyobject\",{\"1\":{\"74\":1}}],[\"istrue\",{\"1\":{\"65\":5,\"102\":2}}],[\"is\",{\"1\":{\"60\":1}}],[\"isarray\",{\"1\":{\"0\":4,\"74\":1}}],[\"id选中对象\",{\"1\":{\"85\":1}}],[\"id选择器\",{\"1\":{\"56\":1}}],[\"id=\",{\"1\":{\"69\":1,\"85\":4,\"98\":1}}],[\"id\",{\"1\":{\"51\":2,\"56\":1,\"73\":2,\"85\":4,\"92\":1,\"123\":14,\"129\":1}}],[\"id>\",{\"1\":{\"51\":8}}],[\"ie\",{\"1\":{\"48\":1}}],[\"ie11\",{\"1\":{\"48\":1}}],[\"ios\",{\"1\":{\"131\":1}}],[\"io文件夹下依次执行命令\",{\"1\":{\"20\":1}}],[\"io也可以让别人看到你写的博客\",{\"1\":{\"10\":1}}],[\"io就可以看到你的个人博客\",{\"1\":{\"9\":1}}],[\"io\",{\"1\":{\"7\":1,\"8\":1,\"10\":1,\"12\":2,\"16\":1,\"20\":1,\"145\":2}}],[\"item做居中\",{\"1\":{\"48\":1}}],[\"items的缩写\",{\"1\":{\"48\":1}}],[\"items与justify\",{\"1\":{\"48\":1}}],[\"items这属性不知道有多少人用过\",{\"1\":{\"48\":1}}],[\"items是针对次轴cross\",{\"1\":{\"48\":1}}],[\"items不仅是flex可用\",{\"1\":{\"48\":1}}],[\"items<\",{\"1\":{\"48\":3}}],[\"items\",{\"1\":{\"48\":5}}],[\"item\",{\"1\":{\"0\":7,\"27\":1}}],[\"injection\",{\"1\":{\"103\":1}}],[\"injectedprops\",{\"1\":{\"96\":7}}],[\"injectedprops=\",{\"1\":{\"96\":1}}],[\"int32\",{\"1\":{\"117\":1}}],[\"int\",{\"1\":{\"112\":2}}],[\"interface\",{\"1\":{\"115\":1}}],[\"interfaces\",{\"1\":{\"85\":4}}],[\"intersectionobserver\",{\"1\":{\"109\":3,\"145\":5}}],[\"intersectionobserver观察一个dom元素的可见性\",{\"1\":{\"109\":1}}],[\"internalservererror等\",{\"1\":{\"78\":1}}],[\"into\",{\"1\":{\"51\":1}}],[\"inarray\",{\"1\":{\"74\":2}}],[\"inner\",{\"1\":{\"69\":1,\"70\":1,\"71\":3,\"81\":4}}],[\"innerheight\",{\"1\":{\"66\":1}}],[\"innerhtml\",{\"1\":{\"55\":1}}],[\"innerwidth\",{\"1\":{\"66\":1}}],[\"input=\",{\"1\":{\"100\":1}}],[\"input\",{\"1\":{\"58\":1,\"65\":2,\"89\":1,\"100\":1,\"141\":2}}],[\"indent\",{\"1\":{\"43\":1}}],[\"index\",{\"1\":{\"0\":9,\"28\":1,\"65\":5,\"66\":2,\"73\":1,\"74\":5,\"129\":1,\"149\":2}}],[\"indexof\",{\"1\":{\"0\":2,\"85\":1,\"149\":1}}],[\"inserted\",{\"1\":{\"97\":1,\"129\":1,\"138\":1,\"145\":1,\"149\":1,\"154\":1}}],[\"inset\",{\"1\":{\"37\":1,\"38\":1}}],[\"install方法\",{\"1\":{\"145\":1}}],[\"install\",{\"1\":{\"9\":1,\"20\":2,\"129\":1,\"145\":1}}],[\"inheritattrs\",{\"1\":{\"100\":1}}],[\"inherit\",{\"1\":{\"27\":1}}],[\"in\",{\"1\":{\"27\":1,\"88\":3,\"121\":3}}],[\"inline\",{\"1\":{\"27\":2,\"48\":6}}],[\"initevent\",{\"1\":{\"141\":1}}],[\"init这条命令\",{\"1\":{\"20\":1}}],[\"init\",{\"1\":{\"6\":2,\"16\":1,\"51\":1,\"85\":2,\"145\":2}}],[\"includes\",{\"1\":{\"0\":3}}],[\"if\",{\"1\":{\"0\":12,\"85\":6,\"91\":3,\"94\":5,\"97\":1,\"102\":13,\"109\":3,\"123\":1,\"131\":2,\"134\":4,\"138\":1,\"145\":7,\"147\":1,\"149\":3,\"154\":4}}],[\"i++\",{\"1\":{\"0\":6}}],[\"i\",{\"1\":{\"0\":29,\"6\":1,\"8\":1,\"12\":1,\"65\":1}}],[\"l本身是开箱即用的样式\",{\"1\":{\"88\":1}}],[\"lt\",{\"1\":{\"59\":1}}],[\"lts为长期支持版\",{\"1\":{\"5\":1}}],[\"lr\",{\"1\":{\"48\":3}}],[\"lazyload=\",{\"1\":{\"146\":1}}],[\"lazyload\",{\"1\":{\"129\":1,\"145\":9,\"146\":1}}],[\"label\",{\"1\":{\"100\":1}}],[\"label>\",{\"1\":{\"100\":2}}],[\"label=\",{\"1\":{\"100\":2}}],[\"language=\",{\"1\":{\"85\":5}}],[\"lastname\",{\"1\":{\"96\":6}}],[\"last\",{\"1\":{\"56\":2,\"60\":1}}],[\"larger\",{\"1\":{\"43\":1}}],[\"large\",{\"1\":{\"43\":3}}],[\"layout\",{\"1\":{\"42\":1}}],[\"liarray\",{\"1\":{\"95\":2}}],[\"liitem\",{\"1\":{\"93\":1}}],[\"li>\",{\"1\":{\"93\":7,\"95\":2}}],[\"li\",{\"1\":{\"55\":3,\"73\":3,\"95\":3}}],[\"lighter\",{\"1\":{\"43\":1}}],[\"line\",{\"1\":{\"43\":2,\"48\":3}}],[\"listenerscroll\",{\"1\":{\"145\":2}}],[\"listeners\",{\"1\":{\"103\":1}}],[\"list\",{\"1\":{\"27\":1,\"41\":4,\"45\":2,\"51\":1,\"109\":2}}],[\"limit\",{\"1\":{\"12\":1}}],[\"longpress=\",{\"1\":{\"135\":1}}],[\"longpress\",{\"1\":{\"129\":4,\"134\":2,\"135\":3}}],[\"location\",{\"1\":{\"85\":3}}],[\"localhost\",{\"1\":{\"8\":1}}],[\"locked\",{\"1\":{\"82\":1}}],[\"lock\",{\"1\":{\"82\":1}}],[\"loading\",{\"1\":{\"79\":1,\"123\":2}}],[\"load\",{\"1\":{\"77\":1,\"123\":2,\"145\":3}}],[\"lowercase\",{\"1\":{\"43\":1}}],[\"loop\",{\"1\":{\"0\":3}}],[\"logtitle\",{\"1\":{\"100\":3}}],[\"logfullname\",{\"1\":{\"96\":8}}],[\"log\",{\"1\":{\"0\":15,\"51\":1,\"74\":2,\"75\":8,\"76\":4,\"81\":9,\"82\":2,\"96\":2,\"100\":2,\"109\":6,\"131\":2,\"139\":1}}],[\"less\",{\"1\":{\"88\":2}}],[\"left与margin\",{\"1\":{\"48\":1}}],[\"left\",{\"1\":{\"27\":2,\"28\":1,\"33\":1,\"34\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"42\":1,\"43\":1,\"48\":5,\"109\":1,\"131\":1,\"152\":1,\"154\":3}}],[\"len\",{\"1\":{\"0\":2,\"85\":1}}],[\"length\",{\"1\":{\"0\":8,\"28\":4,\"31\":3,\"33\":5,\"34\":5,\"37\":4,\"40\":1,\"42\":1,\"43\":6,\"44\":2,\"74\":2,\"85\":1}}],[\"letter\",{\"1\":{\"43\":1}}],[\"let\",{\"1\":{\"0\":7,\"134\":3,\"138\":1,\"141\":3,\"145\":2,\"149\":4,\"154\":6}}],[\"age\",{\"1\":{\"116\":5,\"119\":5}}],[\"a显示的信息是什么\",{\"1\":{\"112\":1}}],[\"asp\",{\"0\":{\"112\":1},\"2\":{\"128\":1}}],[\"api\",{\"0\":{\"109\":1},\"1\":{\"109\":1,\"145\":1},\"2\":{\"111\":1}}],[\"applets\",{\"1\":{\"85\":1}}],[\"apply\",{\"1\":{\"51\":2,\"145\":2}}],[\"appendchild\",{\"1\":{\"131\":1,\"152\":1}}],[\"append\",{\"1\":{\"69\":3}}],[\"angular\",{\"1\":{\"100\":1}}],[\"and\",{\"1\":{\"92\":1}}],[\"andself\",{\"1\":{\"60\":1}}],[\"abstract\",{\"1\":{\"123\":1}}],[\"absolute\",{\"1\":{\"26\":1,\"28\":1,\"48\":6,\"131\":1}}],[\"about\",{\"1\":{\"85\":1}}],[\"abort\",{\"1\":{\"78\":2}}],[\"ajax的所有操作都是使用它来进行封装的\",{\"1\":{\"81\":1}}],[\"ajaxcomplete\",{\"1\":{\"79\":2}}],[\"ajaxerror\",{\"1\":{\"79\":1}}],[\"ajaxstop\",{\"1\":{\"79\":1}}],[\"ajaxstart\",{\"1\":{\"79\":3}}],[\"ajaxsuccess\",{\"1\":{\"79\":1}}],[\"ajaxsend\",{\"1\":{\"79\":1}}],[\"ajax\",{\"1\":{\"78\":3,\"81\":6}}],[\"am\",{\"1\":{\"51\":1}}],[\"amos\",{\"1\":{\"48\":2}}],[\"amos认为没有少用多用的问题\",{\"1\":{\"48\":1}}],[\"article\",{\"0\":{\"158\":1}}],[\"args\",{\"1\":{\"115\":1,\"116\":1,\"119\":1,\"121\":1,\"123\":1,\"145\":3}}],[\"aria\",{\"1\":{\"100\":3}}],[\"area\",{\"1\":{\"48\":1}}],[\"areas\",{\"1\":{\"48\":1}}],[\"array\",{\"1\":{\"0\":29,\"74\":4,\"97\":1,\"117\":1},\"2\":{\"2\":2}}],[\"arr\",{\"1\":{\"0\":75,\"149\":2}}],[\"after\",{\"1\":{\"48\":2,\"70\":2}}],[\"axis作对齐\",{\"1\":{\"48\":1}}],[\"axis\",{\"1\":{\"48\":2}}],[\"always与\",{\"1\":{\"81\":1}}],[\"always\",{\"1\":{\"81\":1}}],[\"alert\",{\"1\":{\"54\":2,\"80\":2,\"85\":11,\"122\":6,\"135\":1}}],[\"altkey\",{\"1\":{\"94\":1}}],[\"alt\",{\"1\":{\"45\":1,\"65\":3,\"94\":1}}],[\"allowed\",{\"1\":{\"45\":1}}],[\"all\",{\"1\":{\"45\":1}}],[\"align属性来将信息垂直居中\",{\"1\":{\"48\":1}}],[\"align属性看待\",{\"1\":{\"48\":1}}],[\"align\",{\"1\":{\"43\":2,\"48\":49}}],[\"attributename\",{\"1\":{\"109\":1}}],[\"attribute\",{\"1\":{\"100\":1,\"103\":1,\"109\":1}}],[\"attributes\",{\"1\":{\"64\":1,\"109\":2}}],[\"attributes和\",{\"0\":{\"64\":1}}],[\"attrsa=\",{\"1\":{\"103\":1}}],[\"attrsaria\",{\"1\":{\"100\":1}}],[\"attrsxx\",{\"1\":{\"100\":2}}],[\"attrs\",{\"1\":{\"100\":1,\"103\":1}}],[\"attr\",{\"1\":{\"45\":1,\"65\":6}}],[\"attachment\",{\"1\":{\"44\":1}}],[\"atom\",{\"1\":{\"12\":4}}],[\"auto即可自动居中\",{\"1\":{\"48\":1}}],[\"auto<\",{\"1\":{\"48\":1}}],[\"auto就生效了\",{\"1\":{\"48\":1}}],[\"auto会失效\",{\"1\":{\"48\":1}}],[\"auto\",{\"1\":{\"27\":1,\"28\":5,\"30\":3,\"31\":3,\"33\":5,\"34\":5,\"42\":1,\"43\":1,\"45\":1,\"48\":40}}],[\"administrator\",{\"1\":{\"7\":1}}],[\"addwatermarker\",{\"1\":{\"152\":2}}],[\"added\",{\"1\":{\"109\":1}}],[\"addeventlistener\",{\"1\":{\"85\":2,\"131\":1,\"134\":6,\"138\":1,\"141\":1,\"145\":1}}],[\"adddataflavor\",{\"1\":{\"85\":1}}],[\"addimg\",{\"1\":{\"85\":1}}],[\"addclass\",{\"1\":{\"65\":3}}],[\"add\",{\"1\":{\"5\":1,\"16\":1,\"19\":1,\"51\":3,\"60\":1,\"82\":3,\"123\":2}}],[\"a\",{\"1\":{\"0\":37,\"51\":2,\"75\":2,\"76\":1,\"81\":1,\"103\":1,\"109\":1,\"112\":11,\"116\":6,\"119\":7,\"132\":1,\"134\":1}}],[\"00\",{\"1\":{\"123\":2}}],[\"0版即将于第二年推出\",{\"1\":{\"122\":1}}],[\"0px\",{\"1\":{\"109\":3}}],[\"0+\",{\"1\":{\"106\":3}}],[\"01\",{\"1\":{\"98\":1}}],[\"01>\",{\"1\":{\"51\":1}}],[\"07\",{\"1\":{\"98\":1}}],[\"0同样被认为是可见\",{\"1\":{\"58\":1}}],[\"02>\",{\"1\":{\"51\":1}}],[\"0把服务器独立成个别模块\",{\"1\":{\"8\":1}}],[\"0\",{\"1\":{\"0\":39,\"45\":1,\"48\":13,\"51\":1,\"55\":2,\"64\":1,\"74\":12,\"85\":1,\"106\":6,\"116\":2,\"119\":2,\"134\":1,\"145\":3,\"152\":2,\"154\":4}}],[\"nsisupportsstring\",{\"1\":{\"85\":1}}],[\"nsitransferable\",{\"1\":{\"85\":1}}],[\"nsiclipboard\",{\"1\":{\"85\":2}}],[\"n然后将\",{\"1\":{\"85\":1}}],[\"n请在浏览器地址栏输入\",{\"1\":{\"85\":1}}],[\"n\",{\"1\":{\"74\":10}}],[\"net\",{\"1\":{\"112\":1,\"117\":1},\"2\":{\"128\":1}}],[\"net中的设计模式\",{\"0\":{\"112\":1}}],[\"netscape\",{\"1\":{\"85\":2}}],[\"nextuntil\",{\"1\":{\"62\":1}}],[\"nextall\",{\"1\":{\"62\":1}}],[\"next\",{\"1\":{\"62\":1}}],[\"newdate\",{\"1\":{\"74\":1,\"77\":1}}],[\"newdiv2\",{\"1\":{\"69\":2}}],[\"new\",{\"1\":{\"0\":3,\"7\":1,\"14\":1,\"65\":1,\"71\":3,\"81\":3,\"85\":3,\"109\":4,\"112\":1,\"115\":2,\"116\":1,\"119\":2,\"121\":3,\"122\":9,\"123\":4,\"145\":1}}],[\"nth\",{\"1\":{\"56\":4}}],[\"number\",{\"1\":{\"28\":1}}],[\"null\",{\"1\":{\"0\":32,\"74\":1,\"85\":2,\"102\":1,\"123\":4,\"134\":4,\"145\":1,\"154\":1}}],[\"now\",{\"1\":{\"74\":1,\"145\":2}}],[\"nowrap\",{\"1\":{\"43\":1}}],[\"noop\",{\"1\":{\"74\":1}}],[\"noconflict\",{\"1\":{\"54\":3}}],[\"note\",{\"1\":{\"140\":3,\"142\":1}}],[\"notify\",{\"1\":{\"81\":1}}],[\"notmodified\",{\"1\":{\"78\":1}}],[\"notfound\",{\"1\":{\"78\":1}}],[\"not\",{\"1\":{\"45\":1,\"59\":1,\"60\":1}}],[\"no\",{\"1\":{\"44\":1,\"45\":3,\"51\":1}}],[\"normal\",{\"1\":{\"43\":5}}],[\"none\",{\"1\":{\"27\":3,\"37\":1,\"38\":1,\"43\":2,\"44\":1,\"45\":1,\"58\":1,\"152\":1}}],[\"node\",{\"0\":{\"106\":2},\"1\":{\"6\":1,\"73\":2,\"106\":15,\"109\":1},\"2\":{\"108\":2}}],[\"nodejs下载地址\",{\"1\":{\"5\":1}}],[\"native\",{\"1\":{\"92\":1}}],[\"nativeonclick=\",{\"1\":{\"92\":1}}],[\"nativeon\",{\"1\":{\"92\":1}}],[\"navigator\",{\"1\":{\"85\":1}}],[\"name<\",{\"1\":{\"96\":2}}],[\"namespace\",{\"1\":{\"77\":2}}],[\"name2=\",{\"1\":{\"59\":1}}],[\"name=\",{\"1\":{\"57\":1,\"59\":1,\"85\":2,\"96\":1,\"97\":1}}],[\"name~=\",{\"1\":{\"57\":1}}],[\"name>\",{\"1\":{\"51\":9}}],[\"name\",{\"1\":{\"7\":1,\"45\":4,\"57\":2,\"65\":2,\"74\":1,\"88\":1,\"89\":1,\"97\":1,\"109\":1,\"116\":5,\"119\":5,\"121\":6,\"122\":10,\"123\":10}}],[\"nan和\",{\"1\":{\"0\":2}}],[\"nan\",{\"1\":{\"0\":71}}],[\"npm\",{\"1\":{\"6\":1,\"8\":1,\"9\":1,\"12\":1,\"20\":2},\"2\":{\"108\":1}}],[\"180\",{\"1\":{\"152\":7}}],[\"1998\",{\"1\":{\"116\":5,\"119\":6}}],[\"1999\",{\"1\":{\"85\":1}}],[\"11\",{\"1\":{\"106\":1}}],[\"14+\",{\"1\":{\"106\":1}}],[\"14\",{\"1\":{\"106\":1}}],[\"14px\",{\"1\":{\"90\":1}}],[\"17\",{\"1\":{\"106\":1}}],[\"13+\",{\"1\":{\"106\":1}}],[\"13`\",{\"1\":{\"94\":1}}],[\"13\",{\"1\":{\"94\":4,\"106\":1}}],[\"16px\",{\"1\":{\"152\":1}}],[\"16\",{\"1\":{\"93\":1,\"106\":1}}],[\"12+\",{\"1\":{\"106\":1}}],[\"12\",{\"1\":{\"106\":1}}],[\"12px\",{\"1\":{\"90\":1}}],[\"123\",{\"1\":{\"74\":5,\"75\":4,\"76\":1}}],[\"10+\",{\"1\":{\"106\":1}}],[\"102\",{\"1\":{\"106\":1}}],[\"10\",{\"1\":{\"66\":1,\"74\":2,\"85\":1,\"106\":1,\"112\":2,\"150\":1,\"152\":1}}],[\"1000\",{\"1\":{\"138\":1}}],[\"1001\",{\"1\":{\"123\":3}}],[\"100\",{\"1\":{\"43\":1,\"48\":4,\"88\":1,\"109\":1}}],[\"100px\",{\"1\":{\"26\":2,\"48\":1}}],[\"1fr\",{\"1\":{\"48\":4}}],[\"1px\",{\"1\":{\"48\":22}}],[\"150\",{\"1\":{\"152\":1}}],[\"150px\",{\"1\":{\"48\":2}}],[\"15\",{\"1\":{\"0\":33,\"74\":2,\"106\":1}}],[\"1\",{\"1\":{\"0\":46,\"45\":1,\"48\":1,\"55\":1,\"66\":1,\"73\":1,\"74\":9,\"81\":5,\"82\":1,\"85\":5,\"100\":2,\"116\":2,\"119\":2,\"149\":2,\"150\":1}}],[\"=>\",{\"1\":{\"0\":1,\"91\":1,\"92\":1,\"93\":5,\"95\":4,\"96\":1,\"102\":7,\"103\":2,\"109\":8,\"129\":1,\"131\":1,\"134\":4,\"138\":2,\"141\":2,\"145\":2}}],[\"==\",{\"1\":{\"0\":2,\"94\":4,\"117\":1,\"123\":2,\"134\":3}}],[\"===\",{\"1\":{\"0\":4,\"109\":2,\"134\":2,\"141\":1}}],[\"=\",{\"1\":{\"0\":31,\"54\":1,\"57\":1,\"69\":3,\"74\":10,\"75\":3,\"81\":6,\"82\":1,\"85\":21,\"88\":2,\"93\":4,\"95\":2,\"96\":1,\"97\":1,\"102\":7,\"103\":3,\"109\":10,\"112\":6,\"115\":4,\"116\":8,\"117\":1,\"119\":11,\"121\":8,\"122\":12,\"123\":12,\"129\":1,\"131\":10,\"134\":8,\"138\":2,\"140\":2,\"141\":10,\"145\":18,\"149\":5,\"152\":11,\"154\":19}}],[\"fn\",{\"1\":{\"145\":3}}],[\"full\",{\"1\":{\"96\":2}}],[\"function\",{\"1\":{\"0\":15,\"54\":2,\"55\":1,\"60\":1,\"65\":6,\"66\":2,\"73\":2,\"74\":11,\"75\":10,\"76\":4,\"79\":1,\"80\":2,\"81\":12,\"82\":2,\"85\":12,\"97\":1,\"103\":1,\"122\":3,\"134\":2,\"141\":1,\"145\":2,\"149\":1,\"152\":2,\"154\":4}}],[\"fragment\",{\"1\":{\"93\":1,\"103\":1}}],[\"fragment>\",{\"1\":{\"93\":1}}],[\"fragment><\",{\"1\":{\"93\":1}}],[\"fromindex\",{\"1\":{\"74\":1}}],[\"from>\",{\"1\":{\"51\":1}}],[\"from\",{\"1\":{\"0\":1,\"88\":1,\"121\":3,\"129\":4}}],[\"f\",{\"1\":{\"74\":7,\"75\":4}}],[\"fe\",{\"1\":{\"85\":2}}],[\"fetch\",{\"1\":{\"51\":2}}],[\"feed\",{\"1\":{\"12\":4}}],[\"ff\",{\"1\":{\"51\":1}}],[\"flag1\",{\"1\":{\"102\":2}}],[\"flag5\",{\"1\":{\"102\":4}}],[\"flag4\",{\"1\":{\"102\":4}}],[\"flag3\",{\"1\":{\"102\":4}}],[\"flag2\",{\"1\":{\"102\":3}}],[\"flag\",{\"1\":{\"82\":1,\"102\":3}}],[\"flags是空格分割的多个字符串\",{\"1\":{\"82\":1}}],[\"flags\",{\"1\":{\"82\":1}}],[\"flex有多种方式可以让你把数据居中\",{\"1\":{\"48\":1}}],[\"flex以及设定次轴\",{\"1\":{\"48\":1}}],[\"flex\",{\"1\":{\"48\":16}}],[\"float\",{\"1\":{\"27\":1}}],[\"f00\",{\"1\":{\"48\":22}}],[\"fail只能激发一次\",{\"1\":{\"81\":1}}],[\"fail互斥\",{\"1\":{\"81\":1}}],[\"fail\",{\"1\":{\"81\":5}}],[\"fantasy\",{\"1\":{\"43\":1}}],[\"family\",{\"1\":{\"43\":1}}],[\"false时终止调用链的执行\",{\"1\":{\"82\":1}}],[\"false可以让请求没有\",{\"1\":{\"78\":1}}],[\"false\",{\"1\":{\"0\":35,\"77\":1,\"80\":2,\"85\":2,\"100\":1,\"149\":1}}],[\"fired\",{\"1\":{\"82\":1}}],[\"fire\",{\"1\":{\"82\":2}}],[\"firstname\",{\"1\":{\"96\":9}}],[\"first\",{\"1\":{\"56\":2,\"60\":2}}],[\"findele\",{\"1\":{\"141\":2}}],[\"find\",{\"1\":{\"60\":3,\"74\":1}}],[\"filltext\",{\"1\":{\"152\":1}}],[\"fillstyle\",{\"1\":{\"152\":1}}],[\"file\",{\"1\":{\"58\":1}}],[\"filters\",{\"1\":{\"98\":1}}],[\"filter\",{\"1\":{\"0\":2,\"60\":1}}],[\"fixed\",{\"1\":{\"28\":1,\"42\":1}}],[\"foo\",{\"1\":{\"60\":1,\"69\":1}}],[\"footer\",{\"1\":{\"27\":1}}],[\"focus=\",{\"1\":{\"97\":1}}],[\"focusout\",{\"1\":{\"77\":1}}],[\"focusin\",{\"1\":{\"77\":1}}],[\"focus\",{\"1\":{\"56\":1,\"76\":3,\"77\":1,\"97\":4}}],[\"fontsize\",{\"1\":{\"90\":1}}],[\"font\",{\"1\":{\"43\":4,\"90\":1,\"152\":4}}],[\"foreach\",{\"1\":{\"109\":4,\"129\":1}}],[\"formatdate\",{\"1\":{\"98\":1}}],[\"formatid\",{\"1\":{\"98\":1}}],[\"form\",{\"1\":{\"80\":2}}],[\"for\",{\"1\":{\"0\":8,\"48\":2,\"54\":1,\"91\":2,\"95\":2,\"97\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
